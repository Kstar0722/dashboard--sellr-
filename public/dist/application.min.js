"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider","envServiceProvider",function($locationProvider,$httpProvider,envServiceProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor"),$httpProvider.interceptors.push("oncueAuthInterceptor"),envServiceProvider.config({domains:{local:["localhost"],development:["dashdev.expertoncue.com"],staging:["dashqa.expertoncue.com"],production:["dashboard.expertoncue.com","www.sellrdashboard.com","sellrdashboard.com"]},vars:{local:{API_URL:"http://localhost:7272",BWS_API:"https://bwsdev.expertoncue.com"},development:{API_URL:"https://apidev.expertoncue.com",BWS_API:"https://bwsdev.expertoncue.com"},staging:{API_URL:"https://apiqa.expertoncue.com",BWS_API:"https://bwsqa.expertoncue.com"},production:{API_URL:"https://api.expertoncue.com",BWS_API:"https://bws.expertoncue.com"}}}),envServiceProvider.check()}]),angular.module(ApplicationConfiguration.applicationModuleName).run(function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core",["ngAnimate","ngAria","ngMaterial","ngFileUpload","ui.sortable","ngCsv","ngSanitize","environment","toastr","chart.js"]),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.supplier",["core"]),ApplicationConfiguration.registerModule("core.supplier.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.editor",["core"]),ApplicationConfiguration.registerModule("core.editor.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.curator",["core"]),ApplicationConfiguration.registerModule("core.curator.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.manager",["core"]),ApplicationConfiguration.registerModule("core.manager.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.storeOwner",["core"]),ApplicationConfiguration.registerModule("core.storeOwner.routes",["ui.router"]),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),ApplicationConfiguration.registerModule("users.supplier",["core.supplier"]),ApplicationConfiguration.registerModule("users.supplier.routes",["core.supplier.routes"]),ApplicationConfiguration.registerModule("users.curator",["core.curator"]),ApplicationConfiguration.registerModule("users.curator.routes",["core.curator.routes"]),ApplicationConfiguration.registerModule("users.editor",["core.editor"]),ApplicationConfiguration.registerModule("users.editor.routes",["core.editor.routes"]),ApplicationConfiguration.registerModule("users.manager",["core.manager"]),ApplicationConfiguration.registerModule("users.manager.routes",["core.manager.routes"]),ApplicationConfiguration.registerModule("users.storeOwner",["core.storeOwner"]),ApplicationConfiguration.registerModule("users.storeOwner.routes",["core.storeOwner.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core.editor").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Editor",state:"editor",type:"dropdown",roles:["editor","curator","admin"]})}]),angular.module("core.editor.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("editor",{url:"/editor",templateUrl:"modules/users/client/views/productEditor/productEditor.parent.html",controller:"productEditorController",data:{roles:["editor","curator","admin"]}})}]),angular.module("core.manager").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Manager",state:"manager",type:"dropdown",roles:["manager"]})}]),angular.module("core.manager.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("manager",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:["manager"]}})}]),angular.module("core.storeOwner").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Store Owner",state:"storeOwner",type:"dropdown",roles:["owner"]})}]),angular.module("core.storeOwner.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("storeOwner",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:["owner"]}})}]),angular.module("core.supplier").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Supplier",state:"supplier",type:"dropdown",roles:["supplier"]})}]),angular.module("core.supplier.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("supplier",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:["supplier"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html",controller:"HomeController"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("stats",{url:"/stats/{account}",templateUrl:"modules/core/client/views/stats.client.view.html",controller:"statsController"}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$http","$window",function($scope,Authentication,Menus,$http,$window){$scope.authentication=Authentication,$scope.ui={};var originatorEv;$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.openMenu=function($mdOpenMenu,ev){originatorEv=ev,$mdOpenMenu(ev)},$scope.signOut=function(){$window.localStorage.clear(),$http.get("/auth/signout").success(function(){$window.localStorage.clear(),$window.location.href="/"}).error(function(err){console.log("error",err)})}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$mdDialog","$state","$http",function($scope,Authentication,$mdDialog,$state,$http){$scope.authentication=Authentication,$scope.stuff={};var check=!1;!$scope.authentication.user!=!check&&$state.go("manager.dashboard"),$scope.userIsSupplier=function(){return _.contains(Authentication.user.roles,"supplier")?!0:void 0},$scope.askForPasswordReset=function(isValid){return console.log("ask for password called %O",$scope.stuff),$scope.success=$scope.error=null,isValid?($scope.stuff.username=$scope.stuff.passuser,void $http.post("/api/auth/forgot",$scope.stuff).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.testFunction=function(ev){$mdDialog.show($mdDialog.alert().parent(angular.element(document.querySelector("#popupContainer"))).clickOutsideToClose(!0).title("This is an alert title").textContent("You can specify some description text in here.").ariaLabel("Alert Dialog Demo").ok("Got it!").targetEvent(ev)),console.log("test")}}]),angular.module("core").controller("statsController",function($scope,$http,$stateParams,constants,chartService,$timeout){function refreshData(){$scope.locations=[],getDevicesLocations(),chartService.groupAndFormatDate(accountId),$timeout(function(){refreshData()},1e3*refreshInterval)}function getDevicesLocations(){$http.get(constants.API_URL+"/locations?account="+accountId).then(function(res,err){err&&console.log(err),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){console.log(device),console.log(device.niceDate);var rightNow=moment(),time=moment(device.lastCheck).subtract(4,"hours");device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"minutes");device.unhealthy=-60>=timeDiff}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})})}$scope.chartService=chartService,$scope.locations=[];var accountId=$stateParams.account,refreshInterval=60;localStorage.clear(),refreshData()}),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authToken",function($window){function setToken(token){cachedToken=token,storage.setItem(userToken,token)}function getToken(){return cachedToken||(cachedToken=storage.getItem(userToken)),cachedToken}function isAuthenticated(){return!!getToken()}function removeToken(){cachedToken=null,storage.removeItem(userToken)}var cachedToken,me=this,storage=$window.localStorage,userToken="token";return me.setToken=setToken,me.getToken=getToken,me.isAuthenticated=isAuthenticated,me.removeToken=removeToken,me}),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").factory("oncueAuthInterceptor",function(authToken){return{request:function(config){var token=authToken.getToken();return token&&(config.headers.Authorization="Bearer "+token),config},response:function(response){return response}}}),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("users.editor").run(["Menus","productEditorService",function(Menus,productEditorService){Menus.addSubMenuItem("topbar","editor",{title:"Product Editor",state:"editor.products"})}]),angular.module("users.editor.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("editor.products",{url:"/:type/:status",params:{type:"wine",status:"available"},views:{list:{templateUrl:"modules/users/client/views/productEditor/productEditor.list.html"},stats:{templateUrl:"modules/users/client/views/productEditor/productEditor.stats.html"},detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.html"}}}).state("editor.products.detail",{url:"/:productId/:task",params:{task:"view"},views:{list:{templateUrl:"modules/users/client/views/productEditor/productEditor.list.html"},stats:{templateUrl:"modules/users/client/views/productEditor/productEditor.stats.html"},detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.html"}}})}]),angular.module("users.manager").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","manager",{title:"Dashboard",state:"manager.dashboard"}),Menus.addSubMenuItem("topbar","manager",{title:"Ads",state:"manager.ads"}),Menus.addSubMenuItem("topbar","manager",{title:"Locations",state:"manager.locations"}),Menus.addSubMenuItem("topbar","manager",{title:"Accounts",state:"manager.accounts"})}]),angular.module("users.manager.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("manager.dashboard",{url:"/dashboard/:accountId",templateUrl:"modules/users/client/views/manager/dashboard.client.view.html"}).state("manager.ads",{url:"/manager/admanager",templateUrl:"modules/users/client/views/manager/admanager.client.view.html",controller:"AdmanagerController"}).state("manager.uploads",{url:"/manager/uploader",templateUrl:"modules/users/client/views/manager/managerUpload.client.view.html"}).state("manager.locations",{url:"/manager/locations",templateUrl:"modules/users/client/views/manager/locationManager.client.view.html",controller:"LocationManagerController"}).state("manager.locations.edit",{url:"/edit/:id",templateUrl:"modules/users/client/views/manager/locationManager.edit.client.view.html"}).state("manager.locations.create",{url:"/new",templateUrl:"modules/users/client/views/manager/locationManager.create.client.view.html"}).state("manager.accounts",{url:"/manager/accounts",templateUrl:"modules/users/client/views/manager/accountManager.client.view.html",controller:"AccountManagerController"}).state("manager.accounts.edit",{url:"/edit/:id",templateUrl:"modules/users/client/views/manager/accountManager.edit.client.view.html"}).state("manager.accounts.create",{url:"/new",templateUrl:"modules/users/client/views/manager/accountManager.create.client.view.html"})}]),angular.module("users.storeOwner").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","storeOwner",{title:"Invite User",state:"storeOwner.inviteUser"})}]),angular.module("users.storeOwner.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("storeOwner.inviteUser",{url:"/invite",templateUrl:"modules/users/client/views/storeOwner/userInvite.client.view.html",controller:"StoreOwnerInviteController"})}]),angular.module("users.supplier").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","supplier",{title:"Suppliers",state:"supplier.media"})}]),angular.module("users.supplier.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("supplier.media",{url:"/supplier",templateUrl:"modules/users/client/views/supplier/media.client.view.html"}).state("supplier.assets",{url:"/supplier/assets",templateUrl:"modules/users/client/views/supplier/assets.client.view.html"})}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Users",state:"admin.users"}),Menus.addSubMenuItem("topbar","admin",{title:"Pricing",state:"admin.pricing"}),Menus.addSubMenuItem("topbar","admin",{title:"Devices",state:"admin.device"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.users.edit",{url:"/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.users.store",{templateUrl:"modules/users/client/views/admin/invite-user.client.view.html",controller:"inviteUserController"}).state("admin.users.user-edit",{url:"/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.pricing",{url:"/admin/pricing",templateUrl:"modules/users/client/views/admin/pricing.client.view.html",controller:"AdminPricingController"}).state("admin.device",{url:"/admin/device",templateUrl:"modules/users/client/views/admin/device-manager.client.view.html",controller:"DeviceManagerController"})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("admanager",{"abstract":!0,url:"/admanager",templateUrl:"modules/users/client/views/settings/admanager.client.view.html",data:{roles:["user"]}}).state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("mypassword.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("DeviceManagerController",["$scope","$state","$http","Authentication","constants","toastr","accountsService","$stateParams",function($scope,$state,$http,Authentication,constants,toastr,accountsService,$stateParams){$scope.authentication=Authentication;$scope.myPermissions=localStorage.getItem("roles"),$stateParams.accountId?$scope.selectAccountId=$stateParams.accountId:$scope.selectAccountId=localStorage.getItem("accountId"),$scope.accountsService=accountsService,$scope.onClick=function(points,evt){console.log(points,evt)},$scope.chartOptions={},$scope.init=function(){$state.go(".",{accountId:$scope.selectAccountId},{notify:!1}),$scope.emails=[],$scope.phones=[],$scope.loyalty=[],$scope.analytics=[],$scope.locations=[],$scope.stores=[],$scope.specificLoc=[],console.log("state params %O",$stateParams),$scope.sources=[],$http.get(constants.API_URL+"/locations?account="+$scope.selectAccountId).then(function(res,err){err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){var rightNow=moment(),time=moment(device.lastCheck);device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"hours");device.unhealthy=-3>=timeDiff}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})}),$http.get(constants.API_URL+"/loyalty?account="+$scope.selectAccountId).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res)for(var i in res.data){var contact=JSON.parse(res.data[i].contactInfo);contact.email?$scope.emails.push({email:contact.email}):$scope.phones.push({phone:contact.phone})}});var url=constants.API_URL+"/analytics/top-products?account="+$scope.selectAccountId;$http.get(url).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res){console.log("analytics topProducts %O",res);for(var i in res.data)"Product-Request"==res.data[i].action&&$scope.analytics.push(res.data[i])}})}}]),angular.module("users.admin").controller("inviteUserController",["$scope","$state","$http","Authentication","constants","toastr","accountsService",function($scope,$state,$http,Authentication,constants,toastr,accountsService){function onInviteSuccess(response){toastr.success("User Invited","Invite Success!"),console.dir(response),$state.go($state.previous.state.name||"home",$state.previous.params)}function onInviteError(err){toastr.error("There was a problem inviting this user."),console.error(err)}$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.authentication=Authentication,console.log("authentication %O",$scope.authentication),$scope.roles=[{text:"admin",id:1004},{text:"owner",id:1009},{text:"manager",id:1002},{text:"supplier",id:1007},{text:"user",id:1003},{text:"editor",id:1010},{text:"curator",id:1011}],$scope.user={accountId:localStorage.getItem("accountId")},$scope.toggleRole=function(roleId){$scope.user.roles=$scope.user.roles||[],$scope.user.roles.indexOf(roleId)>-1?$scope.user.roles.splice($scope.user.roles.indexOf(roleId),1):$scope.user.roles.push(roleId)},console.log("userRoles %O",$scope.user.roles),$scope.invite=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var payload={payload:$scope.user};$http.post(constants.API_URL+"/users",payload).then(onInviteSuccess,onInviteError)}}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin","$http","$state","CurrentUserService","constants",function($scope,$filter,Admin,$http,$state,CurrentUserService,constants){$scope.CurrentUserService=CurrentUserService,$scope.userview=$state.params,$scope.locations=[],CurrentUserService.locations?$scope.locations=CurrentUserService.locations:$scope.locations=["No Locations"],$scope.addLocs=function(){console.log("helllo, %O",$scope.locations)},$scope.userEditView=function(user){$http.get(constants.API_URL+"/users?email="+user.email).then(function(res,err){err&&console.log(err),res&&(console.log(res),CurrentUserService.userBeingEdited=res.data[0],$state.go("admin.users.user-edit",{userId:user._id}),console.log("currentUserService userBeingEdited %O",CurrentUserService.userBeingEdited))})},$scope.inviteStoreView=function(){$state.go("admin.users.store",{},{reload:!0})},$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")(CurrentUserService.userList,{$:$scope.search}),$scope.newUsers=$scope.filteredItems},$scope.buildPager(),$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()},$scope.removeLocationBox=!1,$scope.addNewLocation=function(locs){var newItemNo=$scope.locations.length+1;$scope.locations.push({id:"location"+newItemNo}),$scope.removeLocationBox=!0},$scope.removeLocation=function(){if($scope.locations.length>1){$scope.locations.length-1;$scope.locations.pop()}1==$scope.locations.length&&($scope.removeLocationBox=!1)}}]),angular.module("users.admin").controller("AdminPricingController",["$scope","$state","$http","Authentication","$timeout","Admin","Upload","$sce","ImageService","constants",function($scope,$state,$http,Authentication,$timeout,Admin,Upload,$sce,ImageService,constants){$scope.authentication=Authentication,Admin.query(function(data){$scope.users=data});$scope.amountDiscount=0,$scope.itemPrice=[],$scope.deviceImage="dist/ipadair.jpeg",$scope.images=[],$scope.currentDiscount=0,$scope.priceTotal=0,$scope.addPackage=function(number){$scope.priceTotal=0,devices[0].qty=Math.round(.66*number*1)/1,devices[1].qty=Math.round(.33*number*1)/1,apps[0].qty=number,accessories[0].qty=Math.round(.66*number*1)/1,accessories[1].qty=number,accessories[2].qty=Math.round(.33*number*1)/1,$scope.cart.pricelist.totalDevices=number,$scope.cart.pricelist.totalApps=number,$scope.cart.pricelist.totalAccessories=2*number;var packageTotal=devices[0].price*Math.round(.66*number*1)/1+devices[1].price*Math.round(.33*number*1)/1+apps[0].price*number+accessories[0].price*Math.round(.66*number*1)/1+accessories[1].price*number*1/1+accessories[2].price*Math.round(.33*number*1)/1;$scope.total(packageTotal)},$scope.clear=function(){console.log("hit"),angular.merge($scope.cart,$scope.emptyCart),$scope.priceTotal=0},$scope.formatNumber=function(i){return Math.round(1*i)/1},$scope.total=function(price){console.log(price),$scope.priceTotal+=price},$scope.addDiscount=function(amount){$scope.currentDiscount=Number(amount)},$scope.sendOrder=function(){$http.post(constants.API_URL+"/media",obj).then(function(response,err){err&&console.log(err)})},$scope.subtractTotal=function(price){$scope.priceTotal-price>=0?$scope.priceTotal-=price:$scope.priceTotal=0},$scope.switchItem=function(cart,mod){switch(cart.name){case"iPad Air 16GB":"add"==mod?devices[0].qty+=1:0!=devices[0].qty&&(devices[0].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/ipadair.jpeg"});break;case"iPad Pro 32GB":"add"==mod?devices[1].qty+=1:0!=devices[1].qty&&(devices[1].qty-=1),$scope.images.push({
name:cart.name,fileName:"dist/ipad-pro-250x306.jpg"});break;case"iPad Air 16GB 4G":"add"==mod?devices[2].qty+=1:0!=devices[2].qty&&(devices[2].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/ipadair.jpeg"});break;case"iPad Pro 128GB 4G":"add"==mod?devices[3].qty+=1:0!=devices[3].qty&&(devices[3].qty-=1);break;case"BWS bundle":"add"==mod?apps[0].qty+=1:0!=apps[0].qty&&(apps[0].qty-=1);break;case"Beer Lookup":"add"==mod?apps[1].qty+=1:0!=apps[1].qty&&(apps[1].qty-=1);break;case"Wine Lookup":"add"==mod?apps[2].qty+=1:0!=apps[2].qty&&(apps[2].qty-=1);break;case"Spirits Lookup":"add"==mod?apps[3].qty+=1:0!=apps[3].qty&&(apps[3].qty-=1);break;case"Pharmacy":"add"==mod?apps[4].qty+=1:0!=apps[4].qty&&(apps[4].qty-=1);break;case"Digital Signage":"add"==mod?apps[5].qty+=1:0!=apps[5].qty&&(apps[5].qty-=1);break;case"Dashboard":"add"==mod?apps[6].qty+=1:0!=apps[6].qty&&(apps[6].qty-=1);break;case"VESA Shelf Mount":"add"==mod?accessories[0].qty+=1:0!=accessories[0].qty&&(accessories[0].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/vesa.jpg"});break;case"2D Scanner":"add"==mod?accessories[1].qty+=1:0!=accessories[1].qty&&(accessories[1].qty-=1);break;case"Floor Stand":"add"==mod?accessories[2].qty+=1:0!=accessories[2].qty&&(accessories[2].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/armodillo-floor.png"});break;case"4G Hotspot":"add"==mod?accessories[3].qty+=1:0!=accessories[3].qty&&(accessories[3].qty-=1)}},$scope.addItem=function(item,id){var obj=item;"device"==id&&($scope.cart.pricelist.totalDevices+=1),"apps"==id&&($scope.cart.pricelist.totalApps+=1),"accessories"==id&&($scope.cart.pricelist.totalAccessories+=1),0==$scope.itemPrice.length?(obj.total+=1,$scope.total(obj.price),$scope.switchItem(item,"add")):(obj.total+=1,$scope.switchItem(item,"add"),$scope.total(obj.price))},$scope.removeItem=function(item,id){var obj=item;"device"==id&&0!=item.qty&&($scope.cart.pricelist.totalDevices-=1),"apps"==id&&0!=item.qty&&($scope.cart.pricelist.totalApps-=1),"accessories"==id&&0!=item.qty&&($scope.cart.pricelist.totalAccessories-=1);for(var y in $scope.images)$scope.images[y].name==obj.name&&$scope.images.splice(y,1);obj.total-=1,0!=obj.qty&&$scope.subtractTotal(obj.price),$scope.switchItem(item,"subtract")},$scope.appcheck,$scope.checkClick=function(item){0==$scope.appcheck?$scope.addItem(item):$scope.removeItem(item)},$scope.cart={},$scope.emptyCart={pricelist:{devices:[{name:"iPad Air 16GB",price:499,qty:0},{name:"iPad Pro 32GB",price:799,qty:0},{name:"iPad Air 16GB 4G",price:629,qty:0},{name:"iPad Pro 128GB 4G",price:1079,qty:0}],apps:[{name:"BWS bundle",price:2500,"max-quantity":1,qty:0},{name:"Beer Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Wine Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Spirits Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Pharmacy",price:1e3,"max-quantity":1,qty:0},{name:"Digital Signage",price:1e3,"max-quantity":1,qty:0},{name:"Dashboard",price:1e3,"max-quantity":1,qty:0}],accessories:[{name:"VESA Shelf Mount",price:130,qty:0},{name:"2D Scanner",price:275,qty:0},{name:"Floor Stand",price:350,qty:0},{name:"4G Hotspot",price:600,qty:0}],totalDevices:0,totalApps:0,totalAccessories:0}},$scope.discounts=[{amount:0,name:"0%"},{amount:.05,name:"5%"},{amount:.1,name:"10%"},{amount:.2,name:"20%"},{amount:.3,name:"30%"},{amount:.4,name:"40%"}],angular.copy($scope.emptyCart,$scope.cart);var devices=$scope.cart.pricelist.devices,apps=$scope.cart.pricelist.apps,accessories=$scope.cart.pricelist.accessories}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve","$timeout","CurrentUserService","constants","$http","toastr","$q",function($scope,$state,Authentication,userResolve,$timeout,CurrentUserService,constants,$http,toastr,$q){function updateMongo(){var defer=$q.defer();$scope.user.roles=[],$scope.roles.forEach(function(role){role.selected&&$scope.user.roles.push(role.text)});var user=$scope.user;return user.$update(function(){$state.go("admin.users.user-edit",{userId:user._id}),defer.resolve()},function(errorResponse){$scope.error=errorResponse.data.message}),defer.promise}function updateAPI(){function onUpdateSuccess(res){toastr.success("User updated","Success!")}function onUpdateError(err){toastr.error("There was an error updating this user"),console.error(err)}$scope.user.roles=[],$scope.roles.forEach(function(role){role.selected&&$scope.user.roles.push(role.id)});var user=$scope.user,userBeingEdited=CurrentUserService.userBeingEdited;console.log("userBeingEditied %O",userBeingEdited);var url=constants.API_URL+"/users/"+userBeingEdited.userId,payload={payload:user};$http.put(url,payload).then(onUpdateSuccess,onUpdateError)}$scope.authentication=Authentication,$scope.user=userResolve,console.log("userResolve %O",userResolve),$timeout(function(){$scope.roles=[{text:"admin",id:1004,selected:$scope.user.roles.indexOf("admin")>-1},{text:"owner",id:1009,selected:$scope.user.roles.indexOf("owner")>-1},{text:"manager",id:1002,selected:$scope.user.roles.indexOf("manager")>-1},{text:"supplier",id:1007,selected:$scope.user.roles.indexOf("supplier")>-1},{text:"user",id:1003,selected:$scope.user.roles.indexOf("user")>-1},{text:"editor",id:1010,selected:$scope.user.roles.indexOf("editor")>-1},{text:"curator",id:1011,selected:$scope.user.roles.indexOf("curator")>-1}]},500),$scope.remove=function(){var user=userResolve;confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),CurrentUserService.update()):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){return console.dir(isValid),isValid?void updateMongo().then(function(){updateAPI()}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","constants","toastr","authToken",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,constants,toastr,authToken){function onValidReg(response){var userUpdate={payload:{email:$scope.credentials.email,username:$scope.credentials.username,password:$scope.credentials.password,userId:userInfo.regCode}},url=constants.API_URL+"/users/"+userInfo.regCode;$http.put(url,userUpdate).then(onUpdateSuccess,onUpdateError)}function onInvalidReg(err){toastr.error("User is not a valid user. Please contact support."),console.error(err),$scope.credentials={}}function onUpdateSuccess(apiRes){apiRes&&($scope.credentials.roles=[],userInfo.roles.forEach(function(role){$scope.credentials.roles.push(roleTranslate[role])}),console.log("$scope credentials",$scope.credentials),$http.post("/api/auth/signup",$scope.credentials).then(function(response,err){console.log("mongoAPI says %O",response),err&&(toastr.error("There was an error creating your account"),console.error(err)),$scope.authentication.user=response.data;var roles=[];userInfo.roles.forEach(function(role){roles.push(role)}),localStorage.setItem("accountId",userInfo.accountId),localStorage.setItem("roles",roles),localStorage.setItem("userId",userInfo.regCode),toastr.success("Success! User Created. Logging you in now..."),$state.go("manager.dashboard")}))}function onUpdateError(err){toastr.error(err.message),console.error(err)}function onSigninSuccess(response){authToken.setToken(response.data.token),localStorage.setItem("roles",response.data.roles),localStorage.setItem("accountId",response.data.accountId),localStorage.setItem("userId",response.data.userId),$http.post("/api/auth/signin",$scope.credentials).then(onApiSuccess,onSigninError)}function onApiSuccess(response){$scope.authentication.user=response.data,toastr.success("Welcome to the OnCue Dashboard","Success"),$state.go($state.previous.state.name||"manager.dashboard",$state.previous.params)}function onSigninError(err){console.error(err),toastr.error("Failed To Connect, Please Contact Support."),$scope.error=err.message,$scope.credentials={}}$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg();var userInfo={};$location.search().r&&(userInfo={accountId:Number($location.search().a),regCode:Number($location.search().u),roles:$location.search().r.split("~")});var roleTranslate={1004:"admin",1002:"manager",1007:"supplier",1003:"user",1009:"owner",1010:"editor",1011:"curator"};$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.get(constants.API_URL+"/users/validate/"+userInfo.regCode).then(onValidReg,onInvalidReg)},$scope.signin=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var url=constants.API_URL+"/users/login",payload={payload:$scope.credentials};$http.post(url,payload).then(onSigninSuccess,onSigninError)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users.manager").controller("AccountManagerController",function($scope,locationsService,$state,accountsService,CurrentUserService,Authentication,$http,constants){accountsService.init(),$scope.accountsService=accountsService,$scope.determinateValue=0,$scope.accountLogo="",$scope.account={createdBy:Authentication.user.username},console.log($scope.account),$scope.editAccount=function(account){console.log("editing account %O",account),$scope.currentAccountLogo="",accountsService.editAccount=account,accountsService.editAccount.style=JSON.parse(account.preferences).style,console.log("editAccount is now %O",accountsService.editAccount),$state.go("manager.accounts.edit",{id:account.accountId})},$scope.upload=function(file,accountId){var mediaAssetId,fileName=file[0].name,obj={payload:{fileName:file[0].name,userName:Authentication.user.username,type:"LOGO",accountId:accountId}};$http.post(constants.API_URL+"/media",obj).then(function(response,err){if(err&&console.log(err),response){console.log("oncue API response %O",response),mediaAssetId=response.data.assetId,$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}}),params={Key:mediaAssetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),!1):(console.log("s3 response to upload %O",data),accountsService.editAccount.logo=constants.ADS_URL+mediaAssetId+"-"+fileName,$scope.currentAccountLogo=accountsService.editAccount.logo,$scope.$apply(),$scope.determinateValue=0,void 0)}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),$scope.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})}}),angular.module("users.manager").controller("AdmanagerController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants","toastr","accountsService",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants,toastr,accountsService){function debounce(func,wait,context){var timer;return function(){var context=$scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer),timer=$timeout(function(){timer=void 0,func.apply(context,args)},wait||10)}}function buildDelayedToggler(navID){return debounce(function(){$mdSidenav(navID).toggle().then(function(){console.log("toggle "+navID+" is done")})},200)}$scope.authentication=Authentication;var self=this;$scope.activeAds=[],$scope.allMedia=[],$scope.allAccountMedia=[],$scope.sortingLog=[],$scope.ads=!1,$scope.activeAds=!1,$scope.storeDevices=!1,$scope.selectAccountId=localStorage.getItem("accountId"),$scope.toggleLeft=buildDelayedToggler("left"),$scope.profiles=[],$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.init=function(){$scope.getProfiles(),$scope.getAllMedia()},$scope.getProfiles=function(){$scope.profiles=[],$http.get(constants.API_URL+"/profiles?accountId="+$scope.selectAccountId).then(function(res,err){err&&console.log(err),res.data.length>0&&($scope.profiles=res.data,$scope.currentProfile=res.data[0].profileId,$scope.getActiveAds($scope.currentProfile))})},$scope.getDevice=function(loc){$http.get(constants.API_URL+"/devices/location/"+loc).then(function(response,err){err&&console.log(err),response&&($scope.list_devices=response)})},$scope.getActiveAds=function(profileId){$scope.activeAds=[],$http.get(constants.API_URL+"/ads?profileId="+profileId).then(function(response,err){if(err&&console.log(err),response.data.length>0){$scope.ads=!0;for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];if(ext=ext.toLowerCase(),"jpg"==ext||"jpeg"==ext||"png"==ext||"gif"==ext){myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId};for(var i in $scope.allMedia)$scope.allMedia[i].name==myData.name&&$scope.allMedia.splice(i,1);$scope.activeAds.push(myData)}else if("mp4"==ext||"mov"==ext||"m4v"==ext){myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId};for(var i in $scope.allMedia)$scope.allMedia[i].name==myData.name&&$scope.allMedia.splice(i,1);$scope.activeAds.push(myData)}}}})},$scope.getAllMedia=function(){$scope.allMedia=[],$http.get(constants.API_URL+"/ads?accountId="+$scope.selectAccountId).then(function(response,err){if(err&&console.log(err),response){console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];ext=ext.toLowerCase(),"jpg"==ext||"jpeg"==ext||"png"==ext||"gif"==ext?(myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.allMedia.push(myData)):("mp4"==ext||"mov"==ext||"m4v"==ext)&&(myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.allMedia.push(myData))}}})},$scope.setCurrentProfile=function(profileId){$scope.currentProfile=profileId},$scope.activateAd=function(adId,profileId){var asset={payload:{adId:adId,profileId:profileId}};$http.post(constants.API_URL+"/ads/profile",asset).then(function(response,err){err&&(console.log(err),toastr.error("Could not push ad to device. Please try again later.")),response&&($scope.getActiveAds(profileId),toastr.success("Ad pushed to devices!"))})},$scope.deactivateAd=function(adId,profileId){console.log(adId),console.log(profileId),$http["delete"](constants.API_URL+"/ads/profile?profileId="+profileId+"&adId="+adId).then(function(response,err){err&&(console.log(err),toastr.error("Could not remove ad from devices.")),response&&(console.log(response),$scope.getActiveAds(profileId),toastr.success("Ad removed from devices."))})},$scope.upload=function(file){var filename=file[0].name.replace(/ /g,"_"),obj={payload:{fileName:filename,userName:$scope.authentication.user.username,accountId:$scope.selectAccountId}};$http.post(constants.API_URL+"/ads",obj).then(function(response,err){if(err&&(console.log(err),toastr.error("There was a problem uploading your ad.")),response){$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"Q7pMh9RwRExGFKoI+4oUkM0Z/WoKJfoMMAuLTH/t"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}}),params={Key:response.data.assetId+"-"+filename,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};console.dir(params.Metadata.fileKey),bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),toastr.error("There was a problem uploading your ad."),!1):(console.dir(data),self.determinateValue=0,toastr.success("New Ad Uploaded","Success!"),$scope.init(),void 0)}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),self.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})},$scope.deleteAd=function(ad){console.log("delete ad %O",ad);var url=constants.API_URL+"/ads/"+ad.adId;$http["delete"](url).then(function(){toastr.success("Ad removed","Success"),$scope.init()})}}]),angular.module("users.manager").controller("DashboardController",["$scope","$stateParams","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants","chartService","accountsService",function($scope,$stateParams,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants,chartService,accountsService){$scope.authentication=Authentication;$scope.myPermissions=localStorage.getItem("roles"),$stateParams.accountId?$scope.selectAccountId=$stateParams.accountId:$scope.selectAccountId=localStorage.getItem("accountId"),$scope.chartService=chartService,$scope.accountsService=accountsService,$scope.onClick=function(points,evt){console.log(points,evt)},$scope.chartOptions={},$scope.init=function(){$state.go(".",{accountId:$scope.selectAccountId},{notify:!1}),$scope.emails=[],$scope.phones=[],$scope.loyalty=[],$scope.analytics=[],$scope.locations=[],$scope.stores=[],$scope.specificLoc=[],chartService.groupAndFormatDate($scope.selectAccountId),console.log("state params %O",$stateParams),$scope.sources=[],$http.get(constants.API_URL+"/locations?account="+$scope.selectAccountId).then(function(res,err){err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){var rightNow=moment(),time=moment(device.lastCheck);device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"hours");device.unhealthy=-3>=timeDiff}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})}),$http.get(constants.API_URL+"/loyalty?account="+$scope.selectAccountId).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res)for(var i in res.data){var contact=JSON.parse(res.data[i].contactInfo);contact.email?$scope.emails.push({email:contact.email}):$scope.phones.push({phone:contact.phone})}});var url=constants.API_URL+"/analytics/top-products?account="+$scope.selectAccountId;$http.get(url).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res){console.log("analytics topProducts %O",res);for(var i in res.data)"Product-Request"==res.data[i].action&&$scope.analytics.push(res.data[i])}})}}]),angular.module("users.manager").controller("LocationManagerController",function($scope,locationsService,$state,accountsService,CurrentUserService){locationsService.init().then(function(){$scope.locationsService=locationsService,$scope.location={},$scope.accountsService=accountsService,$scope.currentUserService=CurrentUserService}),$scope.editLocation=function(location){locationsService.editLocation=location,console.log("editLocation %O",locationsService.editLocation),$state.go("manager.locations.edit",{id:location.locationId})}}),angular.module("users").controller("ManagerUploadController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","constants",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,constants){$scope.authentication=Authentication;var self=this;$scope.links=[],$scope.list_categories=[],$scope.init=function(){},$scope.viewImage=function(image){ImageService.image=image,$state.go("supplier.assets",image)},$scope.getFile=function(){$http.get(constants.API_URL+"/media/"+$scope.authentication.user.username).then(function(response,err){if(err&&console.log(err),response)for(var i in response.data)$scope.links.push(response.data[i].mediaAssetId+"-"+response.data[i].fileName)})},$scope.upload=function(file){var obj={payload:{fileName:file[0].name,userName:$scope.authentication.user.username}};$http.post(constants.API_URL+"/ads",obj).then(function(response,err){if(err&&console.log(err),response){$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});console.log(response.data);var params={Key:response.data.assetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};console.dir(params.Metadata.fileKey),bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),!1):(console.dir(data),void alert("Upload Done"))}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),self.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})}}]),angular.module("users.manager").controller("ProfileController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants){function debounce(func,wait,context){var timer;return function(){var context=$scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer),timer=$timeout(function(){timer=void 0,func.apply(context,args)},wait||10)}}function buildDelayedToggler(navID){return debounce(function(){$mdSidenav(navID).toggle().then(function(){console.log("toggle "+navID+" is done")})},200)}$scope.authentication=Authentication;var self=this;$scope.links=[],$scope.sources=[],$scope.sortingLog=[],$scope.rightArray=[],$scope.leftArray=[],$scope.ads=!1,$scope.activeAds=!1,$scope.storeDevices=!1,$scope.toggleLeft=buildDelayedToggler("left"),$scope.init=function(){$scope.sources=[],$http.get(constants.API_URL+"/store/location/"+$scope.authentication.user.username).then(function(res,err){err&&console.log(err),res&&($scope.list_categories=res,$scope.storeDevices=!0)}),$http.get(constants.API_URL+"/media/"+$scope.authentication.user.username).then(function(response,err){if(err&&console.log(err),response){console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];console.log(ext),ext=ext.toLowerCase(),"jpg"==ext||"png"==ext||"svg"==ext?(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.sources.push(myData)):("mp4"==ext||"mov"==ext||"m4v"==ext)&&(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.sources.push(myData))}}})},$scope.getDevice=function(loc){console.log("HELLO"),$http.get(constants.API_URL+"/devices/location/"+loc).then(function(response,err){err&&console.log(err),response&&(console.log(response),$scope.list_devices=response)})},$scope.getAds=function(deviceId){$scope.currentDevice=deviceId,$scope.leftArray=[],$scope.rightArray=[],$scope.links=[],$http.get(constants.API_URL+"/ads/device/"+deviceId).then(function(response,err){if(err&&console.log(err),response){$scope.ads=!0,console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];console.log(ext),ext=ext.toLowerCase(),console.log(response.data),"jpg"==ext||"png"==ext||"svg"==ext?(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.links.push(myData)):("mp4"==ext||"mov"==ext||"m4v"==ext)&&(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.links.push(myData))}}})},$scope.activate=function(){console.log($scope.rightArray);$scope.rightArray},$scope.sortableOptions={connectWith:".connectedItemsExample .list"},$scope.activateAd=function(adId,deviceId){console.log(deviceId),console.log(adId);var asset={payload:{adId:adId,deviceId:deviceId}};$http.post(constants.API_URL+"/ads/",asset).then(function(response,err){err&&console.log(err),response&&$scope.getAds(deviceId)})},$scope.deactivateAd=function(adId,deviceId){$http["delete"](constants.API_URL+"/ads/"+adId).then(function(response,err){err&&console.log(err),response&&$scope.getAds(deviceId)})},$scope.upload=function(file){var obj={payload:{fileName:file[0].name,userName:$scope.authentication.user.username}};$http.post(constants.API_URL+"/media",obj).then(function(response,err){if(err&&console.log(err),response){$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});console.log(response.data);var params={Key:response.data.assetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};console.dir(params.Metadata.fileKey),bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),!1):(console.dir(data),self.determinateValue=0,$scope.init(),void 0)}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),self.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})},$scope.viewFile=function(file){ImageService.image=file,$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"};var params={Key:ImageService.image};AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});bucket.getObject(params,function(err,data){if($scope.loading=!0,err)return alert(err.message),!1;var re=/(?:\.([^.]+))?$/,ext=re.exec(ImageService.image)[1];console.log(ext),ext=ext.toLowerCase(),self.imageName=JSON.stringify(ImageService.image),"jpg"==ext||"png"==ext||"svg"==ext?($scope.media="image",$scope.$apply()):("mp4"==ext||"mov"==ext||"wmv"==ext)&&($scope.media="video",$scope.$apply())})}}]),angular.module("users.supplier").filter("trustUrl",["$sce",function($sce){return function(recordingUrl){return $sce.trustAsResourceUrl(recordingUrl)}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/dashboard")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("productEditorController",function($scope,Authentication,productEditorService,$location,$state,$stateParams,Countries){productEditorService.init(),$scope.pes=productEditorService,$scope.userId=Authentication.userId||localStorage.getItem("userId"),$scope.detail={template:"modules/users/client/views/productEditor/productEditor.detail.html"},$scope.permissions={editor:Authentication.user.roles.indexOf("editor")>-1,curator:Authentication.user.roles.indexOf("curator")>-1},$scope.Countries=Countries.allCountries,$scope.selectProductType=function(type){productEditorService.currentType=type,productEditorService.currentStatus=productEditorService.productStatuses[0],$state.go("editor.products",{type:type.name}),productEditorService.updateProductList()},$scope.selectProductStatus=function(status){productEditorService.currentStatus=status,productEditorService.updateProductList()},$scope.viewProduct=function(product){productEditorService.setCurrentProduct(product),$state.go("editor.products.detail",{productId:product.productId,task:"view"}),$scope.detail.template="modules/users/client/views/productEditor/productEditor.detail.view.html"},$scope.editProduct=function(product){productEditorService.setCurrentProduct(product),$state.go("editor.products.detail",{productId:product.productId,task:"edit"}),$scope.detail.template="modules/users/client/views/productEditor/productEditor.detail.edit.html"},$scope.sendBack=function(feedback){},$scope.submitForApproval=function(prod){productEditorService.finishProduct(prod)},$scope.approveProduct=function(prod){productEditorService.approveProduct(prod)},$scope.unsubmitProduct=function(prod){productEditorService.saveProduct(prod)},$scope.updateProduct=function(prod){productEditorService.saveProduct(prod)},$scope.playAudio=function(){productEditorService.currentProduct.audio.play()},$scope.pauseAudio=function(){productEditorService.currentProduct.audio.pause()},$scope.seekAudio=function(){productEditorService.currentProduct.audio.currentTime=productEditorService.currentProduct.audio.progress*productEditorService.currentProduct.audio.duration}}),angular.module("users").controller("productEditorDetailController",function($scope,Authentication,productEditorService,$location,$state,$stateParams,type,status){$scope.userId=Authentication.userId||localStorage.getItem("userId"),$scope.permissions={editor:Authentication.user.roles.indexOf("editor")>-1,curator:Authentication.user.roles.indexOf("curator")>-1},console.log("state params %O",type,status),console.log("starting product detail controller"),$scope.productEditorService=productEditorService}),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){
$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users.admin").controller("StoreOwnerInviteController",["$scope","Authentication","$filter","Admin","$http","$state","CurrentUserService","constants","accountsService","toastr",function($scope,Authentication,$filter,Admin,$http,$state,CurrentUserService,constants,accountsService,toastr){function onInviteSuccess(response){toastr.success("User Invited","Invite Success!"),console.dir(response),$state.go($state.previous.state.name||"home",$state.previous.params)}function onInviteError(err){toastr.error("There was a problem inviting this user."),console.error(err)}$scope.CurrentUserService=CurrentUserService,$scope.userview=$state.params,$scope.locations=[],CurrentUserService.locations?$scope.locations=CurrentUserService.locations:$scope.locations=["No Locations"],$scope.addLocs=function(){console.log("helllo, %O",$scope.locations)},$scope.userEditView=function(user){$http.get(constants.API_URL+"/users?email="+user.email).then(function(res,err){err&&console.log(err),res&&(console.log(res),CurrentUserService.userBeingEdited=res.data[0],$state.go("admin.users.user-edit",{userId:user._id}),console.log("currentUserService userBeingEdited %O",CurrentUserService.userBeingEdited))})},$scope.inviteStoreView=function(){$state.go("admin.users.store",{},{reload:!0})},$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")(CurrentUserService.userList,{$:$scope.search}),$scope.newUsers=$scope.filteredItems},$scope.buildPager(),$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()},$scope.removeLocationBox=!1,$scope.addNewLocation=function(locs){var newItemNo=$scope.locations.length+1;$scope.locations.push({id:"location"+newItemNo}),$scope.removeLocationBox=!0},$scope.removeLocation=function(){if($scope.locations.length>1){$scope.locations.length-1;$scope.locations.pop()}1==$scope.locations.length&&($scope.removeLocationBox=!1)},$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.authentication=Authentication,console.log("authentication %O",$scope.authentication),$scope.roles=[{text:"admin",id:1004},{text:"owner",id:1009},{text:"manager",id:1002},{text:"supplier",id:1007},{text:"user",id:1003},{text:"editor",id:1010},{text:"curator",id:1011}],$scope.user={accountId:localStorage.getItem("accountId")},$scope.toggleRole=function(roleId){$scope.user.roles=$scope.user.roles||[],$scope.user.roles.indexOf(roleId)>-1?$scope.user.roles.splice($scope.user.roles.indexOf(roleId),1):$scope.user.roles.push(roleId)},console.log("userRoles %O",$scope.user.roles),$scope.invite=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var payload={payload:$scope.user};$http.post(constants.API_URL+"/users",payload).then(onInviteSuccess,onInviteError)}}]),angular.module("users.supplier").controller("AssetController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants){function debounce(func,wait,context){var timer;return function(){var context=$scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer),timer=$timeout(function(){timer=void 0,func.apply(context,args)},wait||10)}}function buildDelayedToggler(navID){return debounce(function(){$mdSidenav(navID).toggle().then(function(){console.log("toggle "+navID+" is done")})},200)}function encode(data){var str=data.reduce(function(a,b){return a+String.fromCharCode(b)},"");return btoa(str).replace(/.{76}(?=.)/g,"$&\n")}$scope.authentication=Authentication;var self=this;$scope.links=[],$scope.toggleLeft=buildDelayedToggler("left"),$scope.init=function(){$http.get(constants.API_URL+"/media/"+$scope.authentication.user.username).then(function(response,err){if(err&&console.log(err),response)for(var i in response.data)$scope.links.push(response.data[i].mediaAssetId+"-"+response.data[i].fileName)})},$scope.viewFile=function(file){ImageService.image=file,$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"};var params={Key:ImageService.image};AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});bucket.getObject(params,function(err,data){if($scope.loading=!0,err)return alert(err.message),!1;var re=/(?:\.([^.]+))?$/,ext=re.exec(ImageService.image)[1];console.log(ext),ext=ext.toLowerCase(),self.imageName=JSON.stringify(ImageService.image),"jpg"==ext||"png"==ext||"svg"==ext?($scope.media="image",self.news3image="data:image/jpg;base64,"+encode(data.Body),$scope.$apply()):("mp4"==ext||"mov"==ext||"wmv"==ext)&&($scope.media="video",self.news3image=$sce.trustAsResourceUrl("http://s3.amazonaws.com/beta.cdn.expertoncue.com/"+ImageService.image),$scope.$apply())})}}]),angular.module("users.supplier").controller("MediaController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","constants",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,constants){$scope.authentication=Authentication;var self=this;$scope.links=[],$scope.upload=function(file){var obj={payload:{fileName:file[0].name,userName:$scope.authentication.user.username}};$http.post(constants.API_URL+"/ads",obj).then(function(response,err){if(err&&console.log(err),response){$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}}),params={Key:response.data.assetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};console.dir(params.Metadata.fileKey),bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),!1):(console.dir(data),void alert("Upload Done"))}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),self.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})}}]),function(){var indexOf=[].indexOf||function(item){for(var i=0,l=this.length;l>i;i++)if(i in this&&this[i]===item)return i;return-1};angular.module("users").directive("countrySelect",function(){var allCountries;return allCountries=[{code:"AF",name:"Afghanistan"},{code:"AL",name:"Albania"},{code:"DZ",name:"Algeria"},{code:"AS",name:"American Samoa"},{code:"AD",name:"Andorre"},{code:"AO",name:"Angola"},{code:"AI",name:"Anguilla"},{code:"AQ",name:"Antarctica"},{code:"AG",name:"Antigua and Barbuda"},{code:"AR",name:"Argentina"},{code:"AM",name:"Armenia"},{code:"AW",name:"Aruba"},{code:"AU",name:"Australia"},{code:"AT",name:"Austria"},{code:"AZ",name:"Azerbaijan"},{code:"BS",name:"Bahamas"},{code:"BH",name:"Bahrain"},{code:"BD",name:"Bangladesh"},{code:"BB",name:"Barbade"},{code:"BY",name:"Belarus"},{code:"BE",name:"Belgium"},{code:"BZ",name:"Belize"},{code:"BJ",name:"Benin"},{code:"BM",name:"Bermuda"},{code:"BT",name:"Bhutan"},{code:"BO",name:"Bolivia"},{code:"BQ",name:"Bonaire, Sint Eustatius and Saba"},{code:"BA",name:"Bosnia and Herzegovina"},{code:"BW",name:"Botswana"},{code:"BV",name:"Bouvet Island"},{code:"BR",name:"Brazil"},{code:"IO",name:"British Indian Ocean Territory"},{code:"VG",name:"British Virgin Islands"},{code:"BN",name:"Brunei"},{code:"BG",name:"Bulgaria"},{code:"BF",name:"Burkina Faso"},{code:"BI",name:"Burundi"},{code:"KH",name:"Cambodia"},{code:"CM",name:"Cameroon"},{code:"CA",name:"Canada"},{code:"CV",name:"Cape Verde"},{code:"KY",name:"Cayman Islands"},{code:"CF",name:"Central African Republic"},{code:"TD",name:"Chad"},{code:"CL",name:"Chile"},{code:"CN",name:"China"},{code:"CX",name:"Christmas Island"},{code:"CC",name:"Cocos (Keeling) Islands"},{code:"CO",name:"Colombia"},{code:"KM",name:"Comoros"},{code:"CG",name:"Congo"},{code:"CD",name:"Congo (Dem. Rep.)"},{code:"CK",name:"Cook Islands"},{code:"CR",name:"Costa Rica"},{code:"ME",name:"Crna Gora"},{code:"HR",name:"Croatia"},{code:"CU",name:"Cuba"},{code:"CW",name:"Curaçao"},{code:"CY",name:"Cyprus"},{code:"CZ",name:"Czech Republic"},{code:"CI",name:"Côte D'Ivoire"},{code:"DK",name:"Denmark"},{code:"DJ",name:"Djibouti"},{code:"DM",name:"Dominica"},{code:"DO",name:"Dominican Republic"},{code:"TL",name:"East Timor"},{code:"EC",name:"Ecuador"},{code:"EG",name:"Egypt"},{code:"SV",name:"El Salvador"},{code:"GQ",name:"Equatorial Guinea"},{code:"ER",name:"Eritrea"},{code:"EE",name:"Estonia"},{code:"ET",name:"Ethiopia"},{code:"FK",name:"Falkland Islands"},{code:"FO",name:"Faroe Islands"},{code:"FJ",name:"Fiji"},{code:"FI",name:"Finland"},{code:"FR",name:"France"},{code:"GF",name:"French Guiana"},{code:"PF",name:"French Polynesia"},{code:"TF",name:"French Southern Territories"},{code:"GA",name:"Gabon"},{code:"GM",name:"Gambia"},{code:"GE",name:"Georgia"},{code:"DE",name:"Germany"},{code:"GH",name:"Ghana"},{code:"GI",name:"Gibraltar"},{code:"GR",name:"Greece"},{code:"GL",name:"Greenland"},{code:"GD",name:"Grenada"},{code:"GP",name:"Guadeloupe"},{code:"GU",name:"Guam"},{code:"GT",name:"Guatemala"},{code:"GG",name:"Guernsey and Alderney"},{code:"GN",name:"Guinea"},{code:"GW",name:"Guinea-Bissau"},{code:"GY",name:"Guyana"},{code:"HT",name:"Haiti"},{code:"HM",name:"Heard and McDonald Islands"},{code:"HN",name:"Honduras"},{code:"HK",name:"Hong Kong"},{code:"HU",name:"Hungary"},{code:"IS",name:"Iceland"},{code:"IN",name:"India"},{code:"ID",name:"Indonesia"},{code:"IR",name:"Iran"},{code:"IQ",name:"Iraq"},{code:"IE",name:"Ireland"},{code:"IM",name:"Isle of Man"},{code:"IL",name:"Israel"},{code:"IT",name:"Italy"},{code:"JM",name:"Jamaica"},{code:"JP",name:"Japan"},{code:"JE",name:"Jersey"},{code:"JO",name:"Jordan"},{code:"KZ",name:"Kazakhstan"},{code:"KE",name:"Kenya"},{code:"KI",name:"Kiribati"},{code:"KP",name:"Korea (North)"},{code:"KR",name:"Korea (South)"},{code:"KW",name:"Kuwait"},{code:"KG",name:"Kyrgyzstan"},{code:"LA",name:"Laos"},{code:"LV",name:"Latvia"},{code:"LB",name:"Lebanon"},{code:"LS",name:"Lesotho"},{code:"LR",name:"Liberia"},{code:"LY",name:"Libya"},{code:"LI",name:"Liechtenstein"},{code:"LT",name:"Lithuania"},{code:"LU",name:"Luxembourg"},{code:"MO",name:"Macao"},{code:"MK",name:"Macedonia"},{code:"MG",name:"Madagascar"},{code:"MW",name:"Malawi"},{code:"MY",name:"Malaysia"},{code:"MV",name:"Maldives"},{code:"ML",name:"Mali"},{code:"MT",name:"Malta"},{code:"MH",name:"Marshall Islands"},{code:"MQ",name:"Martinique"},{code:"MR",name:"Mauritania"},{code:"MU",name:"Mauritius"},{code:"YT",name:"Mayotte"},{code:"MX",name:"Mexico"},{code:"FM",name:"Micronesia"},{code:"MD",name:"Moldova"},{code:"MC",name:"Monaco"},{code:"MN",name:"Mongolia"},{code:"MS",name:"Montserrat"},{code:"MA",name:"Morocco"},{code:"MZ",name:"Mozambique"},{code:"MM",name:"Myanmar"},{code:"NA",name:"Namibia"},{code:"NR",name:"Nauru"},{code:"NP",name:"Nepal"},{code:"NL",name:"Netherlands"},{code:"AN",name:"Netherlands Antilles"},{code:"NC",name:"New Caledonia"},{code:"NZ",name:"New Zealand"},{code:"NI",name:"Nicaragua"},{code:"NE",name:"Niger"},{code:"NG",name:"Nigeria"},{code:"NU",name:"Niue"},{code:"NF",name:"Norfolk Island"},{code:"MP",name:"Northern Mariana Islands"},{code:"NO",name:"Norway"},{code:"OM",name:"Oman"},{code:"PK",name:"Pakistan"},{code:"PW",name:"Palau"},{code:"PS",name:"Palestine"},{code:"PA",name:"Panama"},{code:"PG",name:"Papua New Guinea"},{code:"PY",name:"Paraguay"},{code:"PE",name:"Peru"},{code:"PH",name:"Philippines"},{code:"PN",name:"Pitcairn"},{code:"PL",name:"Poland"},{code:"PT",name:"Portugal"},{code:"PR",name:"Puerto Rico"},{code:"QA",name:"Qatar"},{code:"RO",name:"Romania"},{code:"RU",name:"Russia"},{code:"RW",name:"Rwanda"},{code:"RE",name:"Réunion"},{code:"BL",name:"Saint Barthélemy"},{code:"SH",name:"Saint Helena"},{code:"KN",name:"Saint Kitts and Nevis"},{code:"LC",name:"Saint Lucia"},{code:"MF",name:"Saint Martin"},{code:"PM",name:"Saint Pierre and Miquelon"},{code:"VC",name:"Saint Vincent and the Grenadines"},{code:"WS",name:"Samoa"},{code:"SM",name:"San Marino"},{code:"SA",name:"Saudi Arabia"},{code:"SN",name:"Senegal"},{code:"RS",name:"Serbia"},{code:"SC",name:"Seychelles"},{code:"SL",name:"Sierra Leone"},{code:"SG",name:"Singapore"},{code:"SX",name:"Sint Maarten"},{code:"SK",name:"Slovakia"},{code:"SI",name:"Slovenia"},{code:"SB",name:"Solomon Islands"},{code:"SO",name:"Somalia"},{code:"ZA",name:"South Africa"},{code:"GS",name:"South Georgia and the South Sandwich Islands"},{code:"SS",name:"South Sudan"},{code:"ES",name:"Spain"},{code:"LK",name:"Sri Lanka"},{code:"SD",name:"Sudan"},{code:"SR",name:"Suriname"},{code:"SJ",name:"Svalbard and Jan Mayen"},{code:"SZ",name:"Swaziland"},{code:"SE",name:"Sweden"},{code:"CH",name:"Switzerland"},{code:"SY",name:"Syria"},{code:"ST",name:"São Tomé and Príncipe"},{code:"TW",name:"Taiwan"},{code:"TJ",name:"Tajikistan"},{code:"TZ",name:"Tanzania"},{code:"TH",name:"Thailand"},{code:"TG",name:"Togo"},{code:"TK",name:"Tokelau"},{code:"TO",name:"Tonga"},{code:"TT",name:"Trinidad and Tobago"},{code:"TN",name:"Tunisia"},{code:"TR",name:"Turkey"},{code:"TM",name:"Turkmenistan"},{code:"TC",name:"Turks and Caicos Islands"},{code:"TV",name:"Tuvalu"},{code:"UG",name:"Uganda"},{code:"UA",name:"Ukraine"},{code:"AE",name:"United Arab Emirates"},{code:"GB",name:"United Kingdom"},{code:"UM",name:"United States Minor Outlying Islands"},{code:"US",name:"United States of America"},{code:"UY",name:"Uruguay"},{code:"UZ",name:"Uzbekistan"},{code:"VU",name:"Vanuatu"},{code:"VA",name:"Vatican City"},{code:"VE",name:"Venezuela"},{code:"VN",name:"Vietnam"},{code:"VI",name:"Virgin Islands of the United States"},{code:"WF",name:"Wallis and Futuna"},{code:"EH",name:"Western Sahara"},{code:"YE",name:"Yemen"},{code:"ZM",name:"Zambia"},{code:"ZW",name:"Zimbabwe"},{code:"AX",name:"Åland Islands"}],{restrict:"AE",replace:!0,scope:{priorities:"@csPriorities",only:"@csOnly",except:"@csExcept"},template:'<select ng-options="country.name as country.name for country in countries"> <option value="" ng-if="isSelectionOptional"></option> </select>',controller:["$scope","$attrs",function($scope,$attrs){var countryCodesIn,findCountriesIn,includeOnlyRequestedCountries,removeCountry,removeExcludedCountries,separator,updateWithPriorityCountries;return separator={code:"-",name:"────────────────────",disabled:!0},countryCodesIn=function(codesString){var codes;return codes=codesString?codesString.split(","):[],codes.map(function(code){return code.trim()})},findCountriesIn=function(_this){return function(codesString){var country,countryCodes,i,len,ref,ref1,results;for(countryCodes=countryCodesIn(codesString),ref=_this.countries,results=[],i=0,len=ref.length;len>i;i++)country=ref[i],ref1=country.code,indexOf.call(countryCodes,ref1)>=0&&results.push(country);return results}}(this),removeCountry=function(_this){return function(country){return _this.countries.splice(_this.countries.indexOf(country),1)}}(this),includeOnlyRequestedCountries=function(_this){return function(){return $scope.only?_this.countries=findCountriesIn($scope.only):void 0}}(this),removeExcludedCountries=function(){var country,i,len,ref,results;if($scope.except){for(ref=findCountriesIn($scope.except),results=[],i=0,len=ref.length;len>i;i++)country=ref[i],results.push(removeCountry(country));return results}},updateWithPriorityCountries=function(_this){return function(){var i,len,priorityCountries,priorityCountry,ref,results;if(priorityCountries=findCountriesIn($scope.priorities),0!==priorityCountries.length){for(_this.countries.unshift(separator),ref=priorityCountries.reverse(),results=[],i=0,len=ref.length;len>i;i++)priorityCountry=ref[i],removeCountry(priorityCountry),results.push(_this.countries.unshift(priorityCountry));return results}}}(this),this.countries=allCountries.slice(),includeOnlyRequestedCountries(),removeExcludedCountries(),updateWithPriorityCountries(),$scope.countries=this.countries,$scope.isSelectionOptional=void 0===$attrs.csRequired}]}})}.call(this),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").service("accountsService",function($http,constants,toastr){function getAccounts(){function onGetAccountSuccess(res){me.accounts=[],res.data.forEach(function(account){"undefined"!=account.preferences&&(account.logo=JSON.parse(account.preferences).s3url||JSON.parse(account.preferences).logo),account.accountId==me.selectAccountId&&(me.currentAccount=account,console.log("setting current account %O",me.currentAccount))}),me.accounts=res.data}function onGetAccountError(err){toastr.error("We're experiencing some technical difficulties with our database, please check back soon"),console.error(err)}me.accounts=[],console.log("selectAccountId %O",me.selectAccountId),$http.get(constants.API_URL+"/accounts?status=1").then(onGetAccountSuccess,onGetAccountError)}var me=this;return me.init=function(){me.selectAccountId=localStorage.getItem("accountId"),me.accounts=[],me.editAccount={},me.currentAccount={},getAccounts()},me.init(),me.deleteAccount=function(account){function onCreateAccountSuccess(res){toastr.success("Account Deactivated!"),console.log("accounts Service, createAccount %O",res),getAccounts()}function onCreateAccountError(err){toastr.error("There was a problem deactivating this account"),console.error(err)}var url=constants.API_URL+"/accounts/deactivate/"+account;$http.put(url).then(onCreateAccountSuccess,onCreateAccountError)},me.createAccount=function(account){function onCreateAccountSuccess(res){toastr.success("New Account Created!"),console.log("accounts Service, createAccount %O",res),getAccounts()}function onCreateAccountError(err){toastr.error("There was a problem creating this account"),console.error(err)}var url=constants.API_URL+"/accounts";account.status=1;var payload={payload:account};$http.post(url,payload).then(onCreateAccountSuccess,onCreateAccountError)},me.updateAccount=function(){function onUpdateSuccess(res){console.log("updated account response %O",res),toastr.success("Account Updated!")}function onUpdateError(err){console.error("Error updating account %O",err),toastr.error("There was a problem updating this account")}me.editAccount.preferences={logo:me.editAccount.logo,style:me.editAccount.style};var payload={payload:me.editAccount};console.log("about to update %O",me.editAccount);var url=constants.API_URL+"/accounts/"+me.editAccount.accountId;console.log("putting to "+url),$http.put(url,payload).then(onUpdateSuccess,onUpdateError)},me.generateAuthCode=function(authCode){var url=constants.API_URL+"/accounts/auth",payload={payload:{accountId:me.editAccount.accountId,authCode:authCode}};console.log("authCode Payload %O",payload),$http.post(url,payload).then(function(res,err){err?console.error(err):me.editAccount.authCode=res.data.authCode})},me}),angular.module("users.supplier").factory("ImageService",[function(){var me=this;return me.image="",me}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("core").service("chartService",function($http,$q,constants){function getChartData(accountId){me.data=[[0],[0]],me.labels=[],accountId=accountId||localStorage.getItem("accountId");var defer=$q.defer(),results={sku:[],page:[]};return $http.get(constants.API_URL+"/analytics?category=sku&account="+accountId).then(function(res){me.skuData=res.data,console.log("skus by account %O",res),results.sku=res.data.reverse(),$http.get(constants.API_URL+"/analytics?category=pageview&account="+accountId).then(function(pageViewRes){me.pageData=pageViewRes.data,results.page=pageViewRes.data.reverse(),defer.resolve(results)})}),defer.promise}function groupAndFormatDate(accountId){getChartData(accountId).then(function(results){results.sku.forEach(function(analytic){var message=analytic.analyticsId+" ",date=moment(analytic.createdDate.split("T")[0]).format("MMM DD"),i=me.labels.indexOf(date);0>i&&(me.labels.push(date),i=me.labels.indexOf(date),message+="added new label "),me.data[0][i]?(me.data[0][i]++,message+="incremented data point "):(me.data[0][i]=1,message+="added new data point ")}),results.page.forEach(function(analytic){var message="page: "+analytic.analyticsId,date=moment(analytic.createdDate.split("T")[0]).format("MMM DD"),i=me.labels.indexOf(date);0>i&&(me.labels.push(date),i=me.labels.indexOf(date)),me.data[1][i]?(me.data[1][i]++,message+="incremented data point "):(me.data[1][i]=1,message+="added new data point ")});for(var i=0;i<me.labels.length;i++)me.data[0][i]||(me.data[0][i]=0),me.data[1][i]||(me.data[1][i]=0)})}var me=this;return me.groupAndFormatDate=groupAndFormatDate,me.data=[[0],[0]],me.labels=[],me.series=["Sku Scans","Page Views"],me.colors=[{fillColor:"#B4B7B9",strokeColor:"#B4B7B9",pointColor:"#B4B7B9",pointStrokeColor:"#B4B7B9",pointHighlightFill:"#B4B7B9",pointHighlightStroke:"#B4B7B9"},{fillColor:"#3299BB",strokeColor:"#3299BB",pointColor:"#3299BB",pointStrokeColor:"#3299BB",pointHighlightFill:"#3299BB",pointHighlightStroke:"#3299BB"}],groupAndFormatDate(),me}),angular.module("core").service("constants",function(envService){var me=this;return me.API_URL=envService.read("API_URL"),me.BWS_API=envService.read("BWS_API"),me.ADS_URL="http://s3.amazonaws.com/beta.cdn.expertoncue.com/",console.log("constants %O",me),me}),angular.module("users").service("Countries",function(){var me=this;return me.allCountries=[{code:"AF",name:"Afghanistan"},{code:"AL",name:"Albania"},{code:"DZ",name:"Algeria"},{code:"AS",name:"American Samoa"},{code:"AD",name:"Andorre"},{code:"AO",name:"Angola"},{code:"AI",name:"Anguilla"},{code:"AQ",name:"Antarctica"},{code:"AG",name:"Antigua and Barbuda"},{code:"AR",name:"Argentina"},{code:"AM",name:"Armenia"},{code:"AW",name:"Aruba"},{code:"AU",name:"Australia"},{code:"AT",name:"Austria"},{code:"AZ",name:"Azerbaijan"},{code:"BS",name:"Bahamas"},{code:"BH",name:"Bahrain"},{code:"BD",name:"Bangladesh"},{code:"BB",name:"Barbade"},{code:"BY",name:"Belarus"},{code:"BE",name:"Belgium"},{code:"BZ",name:"Belize"},{code:"BJ",name:"Benin"},{code:"BM",name:"Bermuda"},{code:"BT",name:"Bhutan"},{code:"BO",name:"Bolivia"},{code:"BQ",name:"Bonaire, Sint Eustatius and Saba"},{code:"BA",name:"Bosnia and Herzegovina"},{code:"BW",name:"Botswana"},{code:"BV",name:"Bouvet Island"},{code:"BR",name:"Brazil"},{code:"IO",name:"British Indian Ocean Territory"},{code:"VG",name:"British Virgin Islands"},{code:"BN",name:"Brunei"},{code:"BG",name:"Bulgaria"},{code:"BF",name:"Burkina Faso"},{code:"BI",name:"Burundi"},{code:"KH",name:"Cambodia"},{code:"CM",name:"Cameroon"},{code:"CA",name:"Canada"},{code:"CV",name:"Cape Verde"},{code:"KY",name:"Cayman Islands"},{code:"CF",name:"Central African Republic"},{code:"TD",name:"Chad"},{code:"CL",name:"Chile"},{code:"CN",name:"China"},{code:"CX",name:"Christmas Island"},{code:"CC",name:"Cocos (Keeling) Islands"},{code:"CO",name:"Colombia"},{code:"KM",name:"Comoros"},{code:"CG",name:"Congo"},{code:"CD",name:"Congo (Dem. Rep.)"},{code:"CK",name:"Cook Islands"},{code:"CR",name:"Costa Rica"},{code:"ME",name:"Crna Gora"},{code:"HR",name:"Croatia"},{code:"CU",name:"Cuba"},{code:"CW",name:"Curaçao"},{code:"CY",name:"Cyprus"},{code:"CZ",name:"Czech Republic"},{code:"CI",name:"Côte D'Ivoire"},{code:"DK",name:"Denmark"},{code:"DJ",name:"Djibouti"},{code:"DM",name:"Dominica"},{code:"DO",name:"Dominican Republic"},{code:"TL",name:"East Timor"},{code:"EC",name:"Ecuador"},{code:"EG",name:"Egypt"},{code:"SV",name:"El Salvador"},{code:"GQ",name:"Equatorial Guinea"},{code:"ER",name:"Eritrea"},{code:"EE",name:"Estonia"},{code:"ET",name:"Ethiopia"},{code:"FK",name:"Falkland Islands"},{code:"FO",name:"Faroe Islands"},{code:"FJ",name:"Fiji"},{code:"FI",name:"Finland"},{code:"FR",name:"France"},{code:"GF",name:"French Guiana"},{code:"PF",name:"French Polynesia"},{code:"TF",name:"French Southern Territories"},{code:"GA",name:"Gabon"},{code:"GM",name:"Gambia"},{code:"GE",name:"Georgia"},{code:"DE",name:"Germany"},{code:"GH",name:"Ghana"},{code:"GI",name:"Gibraltar"},{code:"GR",name:"Greece"},{code:"GL",name:"Greenland"},{code:"GD",name:"Grenada"},{code:"GP",name:"Guadeloupe"},{code:"GU",name:"Guam"},{code:"GT",name:"Guatemala"},{code:"GG",name:"Guernsey and Alderney"},{code:"GN",name:"Guinea"},{code:"GW",name:"Guinea-Bissau"},{code:"GY",name:"Guyana"},{code:"HT",name:"Haiti"},{code:"HM",name:"Heard and McDonald Islands"},{code:"HN",name:"Honduras"},{code:"HK",name:"Hong Kong"},{code:"HU",name:"Hungary"},{code:"IS",name:"Iceland"},{code:"IN",name:"India"},{code:"ID",name:"Indonesia"},{code:"IR",name:"Iran"},{code:"IQ",name:"Iraq"},{code:"IE",name:"Ireland"},{code:"IM",name:"Isle of Man"},{code:"IL",name:"Israel"},{code:"IT",name:"Italy"},{code:"JM",name:"Jamaica"},{code:"JP",name:"Japan"},{code:"JE",name:"Jersey"},{code:"JO",name:"Jordan"},{code:"KZ",name:"Kazakhstan"},{code:"KE",name:"Kenya"},{code:"KI",name:"Kiribati"},{code:"KP",name:"Korea (North)"},{code:"KR",name:"Korea (South)"},{code:"KW",name:"Kuwait"},{code:"KG",name:"Kyrgyzstan"},{code:"LA",name:"Laos"},{code:"LV",name:"Latvia"},{code:"LB",name:"Lebanon"},{code:"LS",name:"Lesotho"},{code:"LR",name:"Liberia"},{code:"LY",name:"Libya"},{code:"LI",name:"Liechtenstein"},{code:"LT",name:"Lithuania"},{code:"LU",name:"Luxembourg"},{code:"MO",name:"Macao"},{code:"MK",name:"Macedonia"},{code:"MG",name:"Madagascar"},{code:"MW",name:"Malawi"},{code:"MY",name:"Malaysia"},{code:"MV",name:"Maldives"},{code:"ML",name:"Mali"},{code:"MT",name:"Malta"},{code:"MH",name:"Marshall Islands"},{code:"MQ",name:"Martinique"},{code:"MR",name:"Mauritania"},{code:"MU",name:"Mauritius"},{code:"YT",name:"Mayotte"},{code:"MX",name:"Mexico"},{code:"FM",name:"Micronesia"},{code:"MD",name:"Moldova"},{code:"MC",name:"Monaco"},{code:"MN",name:"Mongolia"},{code:"MS",name:"Montserrat"},{code:"MA",name:"Morocco"},{code:"MZ",name:"Mozambique"},{code:"MM",name:"Myanmar"},{code:"NA",name:"Namibia"},{code:"NR",name:"Nauru"},{code:"NP",name:"Nepal"},{code:"NL",name:"Netherlands"},{code:"AN",name:"Netherlands Antilles"},{code:"NC",name:"New Caledonia"},{code:"NZ",name:"New Zealand"},{code:"NI",name:"Nicaragua"},{code:"NE",name:"Niger"},{code:"NG",name:"Nigeria"},{code:"NU",name:"Niue"},{code:"NF",name:"Norfolk Island"},{code:"MP",name:"Northern Mariana Islands"},{code:"NO",name:"Norway"},{code:"OM",name:"Oman"},{code:"PK",name:"Pakistan"},{code:"PW",name:"Palau"},{code:"PS",name:"Palestine"},{code:"PA",name:"Panama"},{code:"PG",name:"Papua New Guinea"},{code:"PY",name:"Paraguay"},{code:"PE",name:"Peru"},{code:"PH",name:"Philippines"},{code:"PN",name:"Pitcairn"},{code:"PL",name:"Poland"},{code:"PT",name:"Portugal"},{code:"PR",name:"Puerto Rico"},{code:"QA",name:"Qatar"},{code:"RO",name:"Romania"},{code:"RU",name:"Russia"},{code:"RW",name:"Rwanda"},{code:"RE",name:"Réunion"},{code:"BL",name:"Saint Barthélemy"},{code:"SH",name:"Saint Helena"},{code:"KN",name:"Saint Kitts and Nevis"},{code:"LC",name:"Saint Lucia"},{code:"MF",name:"Saint Martin"},{code:"PM",name:"Saint Pierre and Miquelon"},{code:"VC",name:"Saint Vincent and the Grenadines"},{code:"WS",name:"Samoa"},{code:"SM",name:"San Marino"},{code:"SA",name:"Saudi Arabia"},{code:"SN",name:"Senegal"},{code:"RS",name:"Serbia"},{code:"SC",name:"Seychelles"},{code:"SL",name:"Sierra Leone"},{code:"SG",name:"Singapore"},{code:"SX",name:"Sint Maarten"},{code:"SK",name:"Slovakia"},{code:"SI",name:"Slovenia"},{code:"SB",name:"Solomon Islands"},{code:"SO",name:"Somalia"},{code:"ZA",name:"South Africa"},{code:"GS",name:"South Georgia and the South Sandwich Islands"},{code:"SS",name:"South Sudan"},{code:"ES",name:"Spain"},{code:"LK",name:"Sri Lanka"},{code:"SD",name:"Sudan"},{code:"SR",name:"Suriname"},{code:"SJ",name:"Svalbard and Jan Mayen"},{code:"SZ",name:"Swaziland"},{code:"SE",name:"Sweden"
},{code:"CH",name:"Switzerland"},{code:"SY",name:"Syria"},{code:"ST",name:"São Tomé and Príncipe"},{code:"TW",name:"Taiwan"},{code:"TJ",name:"Tajikistan"},{code:"TZ",name:"Tanzania"},{code:"TH",name:"Thailand"},{code:"TG",name:"Togo"},{code:"TK",name:"Tokelau"},{code:"TO",name:"Tonga"},{code:"TT",name:"Trinidad and Tobago"},{code:"TN",name:"Tunisia"},{code:"TR",name:"Turkey"},{code:"TM",name:"Turkmenistan"},{code:"TC",name:"Turks and Caicos Islands"},{code:"TV",name:"Tuvalu"},{code:"UG",name:"Uganda"},{code:"UA",name:"Ukraine"},{code:"AE",name:"United Arab Emirates"},{code:"GB",name:"United Kingdom"},{code:"UM",name:"United States Minor Outlying Islands"},{code:"US",name:"United States"},{code:"UY",name:"Uruguay"},{code:"UZ",name:"Uzbekistan"},{code:"VU",name:"Vanuatu"},{code:"VA",name:"Vatican City"},{code:"VE",name:"Venezuela"},{code:"VN",name:"Vietnam"},{code:"VI",name:"Virgin Islands of the United States"},{code:"WF",name:"Wallis and Futuna"},{code:"EH",name:"Western Sahara"},{code:"YE",name:"Yemen"},{code:"ZM",name:"Zambia"},{code:"ZW",name:"Zimbabwe"},{code:"AX",name:"Åland Islands"}],me}),angular.module("users").service("CurrentUserService",["Admin","$state",function(Admin,$state){var me=this;return me.user="",me.locations="",me.currentUserRoles=[],me.userBeingEdited={},me.myPermissions=localStorage.getItem("roles"),Admin.query(function(data){me.userList=data,console.log("admin returned %O",data)}),me.update=function(){Admin.query(function(data){me.userList=data,window.location.reload(),console.log("admin returned %O",data)})},me}]),angular.module("users").service("locationsService",function($http,constants,toastr,$q){function onCreateLocationSuccess(res){200==res.status&&toastr.success("New Location Created","Success!")}function onCreateLocationFail(err){console.error(err),toastr.error("Could not create new location.")}function onUpdateLocationSuccess(res){200==res.statusCode&&toastr.success("Location Updated","Success!")}function onUpdateLocationFail(err){console.error(err),toastr.error("Could not update location.")}function onDeleteSuccess(res){200==res.statusCode&&toastr.success("Location deleted","Success!")}function onDeleteFail(err){console.error(err),toastr.error("Could not delete location.")}var me=this;return me.init=function(){var defer=$q.defer();return me.locations=[],me.accountId=localStorage.getItem("accountId"),me.editLocation={},me.getLocations(),defer.resolve(),defer.promise},me.createLocation=function(location){console.log("location service location object %O",location);var url=constants.API_URL+"/locations";location.accountId=localStorage.getItem("accountId"),location.defaultLoc=0;var payload={payload:location};$http.post(url,payload).then(onCreateLocationSuccess,onCreateLocationFail)},me.getLocations=function(){me.locations=[];var url=constants.API_URL+"/locations?account="+me.accountId;return $http.get(url).then(function(res){console.log("locationsService getLocations %O",res),me.locations=res.data})},me.updateLocation=function(){var url=constants.API_URL+"/locations/"+me.editLocation.locationId,payload={payload:me.editLocation};$http.put(url,payload).then(onUpdateLocationSuccess,onUpdateLocationFail,getLocations)},me.deleteLocation=function(location){var url=constants.API_URL+"/locations/"+location.locationId;return location.name.includes("default_")?void toastr.error("Cannot delete the default location!","I'm afraid I can't do that."):void $http["delete"](url).then(onDeleteSuccess,onDeleteFail)},me}),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return owaspPasswordStrengthTest.config({allowPassphrases:!0,maxLength:128,minLength:5,minPhraseLength:20,minOptionalTestsToPass:1}),{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password greater than 6 characters.";return popoverMsg}}}]),angular.module("users").service("productEditorService",function($http,$location,constants,Authentication,$stateParams,$q){var me=this,debugLogs=!0,log=function(title,data){debugLogs&&(title+="%O",console.log(title,data))};return me.init=function(){me.productTypes=[{name:"wine",productTypeId:1},{name:"beer",productTypeId:2},{name:"spirits",productTypeId:3}],me.productStatuses=[{name:"Available",value:"new"},{name:"In Progress",value:"inprogress"},{name:"Done",value:"done"},{name:"Approved",value:"approved"}],me.productStats={},me.productList=[],me.myProducts=[],me.stats={},me.currentProduct={},me.currentType=me.productTypes[0],me.currentStatus=me.productStatuses[0],me.getStats(),me.updateProductList()},me.getProductList=function(options){function rand(){return Math.floor(100*Math.random())}options.type&&options.status||console.error("getAvailableProducts: Please add a type and status to get available products %O",options);constants.BWS_API+"/edit?status="+options.status+"&type="+options.type;me.productList=[{name:"Awesome "+options.type.name+" 1",productId:155220,lastEdit:rand()+" min ago",status:"inprogress"},{name:"Awesome "+options.type.name+" 2",productId:222222,lastEdit:rand()+" week(s) ago",status:"new"},{name:"Awesome "+options.type.name+" 3",productId:333333,lastEdit:rand()+" hour(s) ago",status:"done"},{name:"Awesome "+options.type.name+" 4",productId:444444,lastEdit:rand()+" day(s) ago",status:"inprogress"}]},me.updateProductList=function(){me.getProductList({type:me.currentType.productTypeId,status:me.currentStatus.value})},me.getMyProducts=function(options){function getMyProdSuccess(response){200===response.status&&(me.productList=response.data)}function getMyProdError(error){console.error("getMyProdError %O",error)}var options=options|{};options.type&&options.status&&options.userId||(options={type:me.currentType.productTypeId,status:me.currentStatus.value,userId:407});var url=constants.BWS_API+"/edit?status="+options.status+"&type="+options.type+"&user="+options.userId;$http.get(url).then(getMyProdSuccess,getMyProdError)},me.setCurrentProduct=function(product){function onGetProductDetailSuccess(res){res.data.length>0?me.formatProductDetail(res.data[0]).then(function(formattedProduct){log("formattedProduct",formattedProduct),me.currentProduct=formattedProduct}):me.currentProduct={}}function onGetProductDetailError(err){console.error("onGetProductDetailError %O",err)}return product.productId?void me.getProductDetail(product.productId).then(onGetProductDetailSuccess,onGetProductDetailError):void console.error("setCurrentProduct: please provide productId")},me.getProductDetail=function(productId){if(!productId)return void console.error("getProductDetail: please provide productId");var url=constants.BWS_API+"/products/"+productId;return log("getting product detail for ",url),$http.get(url)},me.claim=function(options){options.productId&&options.userId||console.error("could not claim, wrong options");var payload={payload:options},url=constants.BWS_API+"/edit/claim";return $http.post(url,payload)},me.saveProduct=function(product){function onUpdateSuccess(response){console.log("onUpdateSuccess %O",response)}function onUpdateError(error){console.error("onUpdateError %O",error)}product.productId||console.error("saveProduct: no productId specified %O",product),product.status="inprogress";var payload={payload:product},url=constants.BWS_API+"/products/"+product.productId;$http.put(url,payload).then(onUpdateSuccess,onUpdateError)},me.finishProduct=function(product){function onFinishSuccess(response){console.log("onFinishSuccess %O",response)}function onFinishError(error){console.error("onFinishError %O",error)}product.productId||console.error("finishProduct: no productId specified %O",product),product.status="done";var payload={payload:product},url=constants.BWS_API+"/products/"+product.productId;$http.put(url,payload).then(onFinishSuccess,onFinishError)},me.approveProduct=function(product){function onApproveSuccess(response){console.log("onApproveSuccess %O",response)}function onApproveError(error){console.error("onApproveError %O",error)}product.productId||console.error("approveProduct: no productId specified %O",product),product.status="approved";var payload={payload:product},url=constants.BWS_API+"/products/"+product.productId;$http.put(url,payload).then(onApproveSuccess,onApproveError)},me.getStats=function(){constants.BWS_API+"/edit/count";me.productStats={1:{"new":15,inprogress:12,done:62,approved:92},2:{"new":14,inprogress:6,done:1,approved:918},3:{"new":56,inprogress:234,done:151,approved:342}}},me.formatProductDetail=function(product){var defer=$q.defer();return product.title=product.title||product.displayName||product.name,product.properties.forEach(function(prop){switch(prop.label){case"Country":prop.type="countryselect";break;case"Script":prop.type="textarea";break;case"Description":prop.type="textarea";break;case"foodpairing":prop.type="textarea";break;default:prop.type="input"}}),product.mediaAssets.forEach(function(m){switch(m.type){case"AUDIO":product.description=m.script,product.audio=document.createElement("AUDIO"),product.audio.src=m.publicUrl,product.audio.ontimeupdate=function(){product.audio.progress=Number(product.audio.currentTime/product.audio.duration)};break;case"IMAGE":product.hasImages=!0,product.images=product.images||[],product.images.push(m)}}),defer.resolve(product),defer.promise},me.uploadMedia=function(file){var mediaAssetId,obj={payload:{fileName:file[0].name,userName:Authentication.user.username,type:"IMAGE"}};$http.post(constants.API_URL+"/media",obj).then(function(response,err){if(err&&console.log(err),response){console.log("oncue API response %O",response),mediaAssetId=response.data.assetId;var creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"};AWS.config.update({accessKeyId:creds.access_key,secretAccessKey:creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:creds.bucket}}),params={Key:mediaAssetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};bucket.putObject(params,function(err,data){return err?(alert(err.message),!1):void console.log("s3 response to upload %O",data)}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done")})}else alert("No File Selected")})},me}),angular.module("users.supplier").filter("trustUrl",["$sce",function($sce){return function(recordingUrl){return $sce.trustAsResourceUrl(recordingUrl)}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);