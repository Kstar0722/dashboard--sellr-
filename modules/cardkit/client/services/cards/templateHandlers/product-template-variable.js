// e.g. loadCardProducts('[data-product-template]', 'Aaron Harris');

window.loadCardProducts = function(container, client, products) {
    if (!container || !client) return;

    var $container = $(container);

    var template = ($container.find('.template').html() || '').trim();
    var productCardUrl = $container.attr('data-product-template') || '';

    var productsApi = $container.attr('data-products-api') || '';
    if (!productsApi) {
        $container.attr('data-products-api', productsApi = 'https://bws.sllr.io/products/eesync/{accountId}');
    }

    productCardUrl = productCardUrl.replace(/{{.+}}/g, '').trim();
    if (!productCardUrl && !template) {
        $container.find('.autogenerated,.placeholder').remove();
        return;
    }

    var pagePath = window.location.href;
    if (pagePath.indexOf('#/') >= 0) pagePath = pagePath.split('#/')[1];
    if (pagePath.indexOf('?/') >= 0) pagePath = pagePath.split('?/')[1];

    var productCardRequest = productCardUrl
        ? $.ajax({
            type: 'GET',
            url: window.location.origin + '/cards/json/' + client + '/' + productCardUrl,
            dataType: "json",
            cache: false
        })
        : $.when([{ 'Html Markup': template }]);

    var accountId = parseInt($container.attr('data-account-id'), 10);
    var productsUrl = productsApi.replace(/\{accountId}/g, String(accountId));
    var singleItem = $container.attr('data-single') == 'true';

    var productsRequest = products ? $.Deferred.resolve(products) : $.ajax({
        type: 'GET',
        url: productsUrl,
        dataType: "json",
        cache: false
    });

    if (!products && singleItem) {
        productsRequest = productsRequest.then(filterSelectedProduct);
    }

    return $.when(productsRequest, productCardRequest).then(function(productsResponse, productCardResponse) {
        var productCard = productCardResponse[0] || {};
        var products = productsResponse || [];

        var productTemplate = productCard['Html Markup'] || '';
        var baseUrl = pagePath.split('/').slice(3, -3).join('/') || '';

        $container.find('.autogenerated,.placeholder').remove();
        products.forEach(function(product) {
            product = initProduct(product);

            var defaultSize = (product.Prices || [])[0] || {};

            var html = productTemplate
                .replace(paramBinding('product_id'), product.productId)
                .replace(paramBinding('product_name'), product.Title)
                .replace(paramBinding('product_name_excerpt'), product.title_excerpt || product.Title)
                .replace(paramBinding('product_description'), product.Description)
                .replace(paramBinding('product_image'), product.ImageImgix || product.Image)
                .replace(paramBinding('product_price'), defaultSize.price || 0)
                .replace(paramBinding('product_oprice'), defaultSize.onsale && defaultSize.oprice || '')
                .replace(paramBinding('product_size'), defaultSize.size || '')
                .replace(paramBinding('product_sizes'), _.compact(_.map(product.Prices, 'size')).join(';'))
                .replace(paramBinding('product_prices_json'), JSON.stringify(product.Prices || ''))
                .replace(paramBinding('product_slug'), product.Slug)
                .replace(paramBinding('product_verified'), product.verified ? product.verified == 1 : false)
                .replace(paramBinding('category_id'), product.planId)
                .replace(paramBinding('category_name'), product.PlanName)
                .replace(paramBinding('category_slug'), product.PlanSlug)
                .replace(paramBinding('products_base_url'), baseUrl);

            $('<div>').html(html).contents().addClass('autogenerated row').unwrap().appendTo($container);
        });

        if (productCard.css) $(document.createElement('style')).html(productCard.css).appendTo($container);

        $container.triggerHandler('loaded', products);
    });

    function initProduct(product) {
        if (!product) return product;
        if (product.Image && !product.ImageImgix) {
            var key = product.Image.split(/cdn.expertoncue.com/i)[1];
            product.ImageImgix = key ? 'https://sllr.imgix.net' + key : product.Image;
        }
        return product;
    }

    function filterSelectedProduct(products) {
        var param = '\/?([^/]*)';
        var match = pagePath.match(new RegExp(param + '/product/' + param + '$', 'i'));
        if (!match) return null;
        var categorySlug = decodeURIComponent(match[1]).toLowerCase();
        var productSlug = decodeURIComponent(match[2]).toLowerCase();
        var result = products.filter(function(p) {
            return p.PlanSlug == categorySlug && p.Slug == productSlug;
        });
        return result;
    }

    function paramBinding(name) {
        return new RegExp('[{\\[]+' + _.escapeRegex(name) + '[}\\]]+', 'gi');
    }
};

window.loadCardProductCategories = function(container, client, products) {
    if (!container || !client) return;

    var $container = $(container);
    $container.find('.autogenerated,.placeholder').remove();

    var template = ($container.find('.template').html() || '').trim();
    var categoryCardUrl = $container.attr('data-product-category-template') || '';

    var productsApi = $container.attr('data-products-api') || '';
    if (!productsApi) {
        $container.attr('data-products-api', productsApi = 'https://bws.sllr.io/products/eesync/{accountId}');
    }

    categoryCardUrl = categoryCardUrl.replace(/{{.+}}/g, '').trim();
    if (!categoryCardUrl && !template) return;

    var categoryCardRequest = categoryCardUrl
        ? $.ajax({
            type: 'GET',
            url: window.location.origin + '/cards/json/' + client + '/' + categoryCardUrl,
            dataType: "json",
            cache: false
        })
        : $.when([{ 'Html Markup': template }]);

    var accountId = parseInt($container.attr('data-account-id'), 10);
    var productsUrl = productsApi.replace(/\{accountId}/g, String(accountId));

    var productsRequest = products ? $.Deferred.resolve(products) : $.ajax({
        type: 'GET',
        url: productsUrl,
        dataType: "json",
        cache: false
    });

    return $.when(productsRequest, categoryCardRequest).then(function(productsResponse, categoryCardResponse) {
        var categoryCard = categoryCardResponse && categoryCardResponse[0] || {};
        var categories = mapCategories(productsResponse);

        var categoryTemplate = categoryCard['Html Markup'] || '';

        if (categoryCard.css) $(document.createElement('style')).html(categoryCard.css).appendTo($container);

        categories.forEach(function(category) {
            var html = categoryTemplate
                .replace(paramBinding('category_id'), category.id)
                .replace(paramBinding('category_name'), category.name)
                .replace(paramBinding('category_slug'), category.slug);

            $('<li>').html(html).addClass('autogenerated').appendTo($container);
        });

        $container.triggerHandler('loaded', categories);
    });

    function mapCategories(products) {
        var result = [];
        var unique = [];
        (products || []).forEach(function(p) {
            if (p.PlanName && unique.indexOf(p.planId) == -1) {
                unique.push(p.planId);
                result.push({ id: p.planId, name: p.PlanName, slug: p.PlanSlug });
            }
        });
        result.sort(function(c1, c2) {
            return c1.name > c2.name;
        });
        return result;
    }

    function paramBinding(name) {
        return new RegExp('[{\\[]+' + _.escapeRegex(name) + '[}\\]]+', 'gi');
    }
};
