"use strict";function onError(error){console.error("Merge Service :: error :",error)}var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.utils","angularFileUpload","btford.socket-io","ngCsvImport","selectize"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider","envServiceProvider",function($locationProvider,$httpProvider,envServiceProvider){if($locationProvider.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor"),$httpProvider.interceptors.push("oncueAuthInterceptor"),$httpProvider.interceptors.push("errorInterceptor"),JSON.parse(localStorage.getItem("userObject")))var email=JSON.parse(localStorage.getItem("userObject")).email,displayName=JSON.parse(localStorage.getItem("userObject")).displayName;window.rg4js&&rg4js("setUser",{identifier:localStorage.getItem("userId"),isAnonymous:!1,email:email,fullName:displayName}),envServiceProvider.config({domains:{local:["localhost"],development:["dashdev.sllr.io"],staging:["dashqa.sllr.io","dashboard.sllr.io"],production:["www.sellrdashboard.com","sellrdashboard.com","dashboard.sellr.io"]},vars:{local:{API_URL:"http://localhost:7272",BWS_API:"http://localhost:7171",env:"local"},development:{API_URL:"https://apidev.sllr.io",BWS_API:"https://bwsdev.sllr.io",env:"dev"},staging:{API_URL:"https://apiqa.sllr.io",BWS_API:"https://bwsqa.sllr.io",env:"staging"},production:{API_URL:"https://api.sllr.io",BWS_API:"https://bws.sllr.io",env:"production"}}}),envServiceProvider.check()}]).value("ProductTypes",[{productTypeId:1,name:"Wine"},{productTypeId:2,name:"Beer"},{productTypeId:3,name:"Spirits"}]),angular.module(ApplicationConfiguration.applicationModuleName).run(function($rootScope,$state,Authentication,authToken,$window){function isPublicState(state){var flag=!1;return flag="home"===state,flag=flag||state.indexOf("authentication")!==-1,flag=flag||state.indexOf("password")!==-1}function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}function cssClassOf(name){return"string"!=typeof name?name:name.replace(/[^a-z0-9\-]+/gi,"-")}$rootScope.$stateClass=cssClassOf($state.current.name),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(!authToken.hasTokenInStorage()&&!isPublicState(toState.name))return event.preventDefault(),window.localStorage.clear(),localStorage.clear(),$window.localStorage.clear(),Authentication.user=void 0,$state.go("home"),!1;if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){if(void 0!==Authentication.user.roles&&Authentication.user.roles.indexOf(role)!==-1)return allowed=!0,!0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){console.log("changed state from %O to %O",fromState,toState),storePreviousState(fromState,fromParams),$rootScope.$stateClass=cssClassOf(toState.name)})}),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core",["ngAnimate","ngAria","ngMaterial","ngFileUpload","ui.sortable","ui.grid","ngCsv","ngSanitize","environment","toastr","chart.js","angular-medium-editor","ui.grid.resizeColumns","ui.grid.selection","ui.grid.edit","ui.grid.rowEdit"]),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.supplier",["core"]),ApplicationConfiguration.registerModule("core.supplier.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.editor",["core"]),ApplicationConfiguration.registerModule("core.editor.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.curator",["core"]),ApplicationConfiguration.registerModule("core.curator.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.manager",["core"]),ApplicationConfiguration.registerModule("core.manager.routes",["ui.router"]),ApplicationConfiguration.registerModule("core.storeOwner",["core"]),ApplicationConfiguration.registerModule("core.storeOwner.routes",["ui.router"]),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),ApplicationConfiguration.registerModule("users.supplier",["core.supplier"]),ApplicationConfiguration.registerModule("users.supplier.routes",["core.supplier.routes"]),ApplicationConfiguration.registerModule("users.curator",["core.curator"]),ApplicationConfiguration.registerModule("users.curator.routes",["core.curator.routes"]),ApplicationConfiguration.registerModule("users.editor",["core.editor"]),ApplicationConfiguration.registerModule("users.editor.routes",["core.editor.routes"]),ApplicationConfiguration.registerModule("users.manager",["core.manager"]),ApplicationConfiguration.registerModule("users.manager.routes",["core.manager.routes"]),ApplicationConfiguration.registerModule("users.storeOwner",["core.storeOwner"]),ApplicationConfiguration.registerModule("users.storeOwner.routes",["core.storeOwner.routes"]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:[1004],position:3}),Menus.addMenuItem("main",{title:"Stats",icon:"/img/navbar/stats_icon.svg",state:"dashboard",type:"button",roles:[1004,1003,1007,1009],position:0})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:[1004]}})}]),angular.module("core.editor").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Product Editor",state:"editor",type:"dropdown",roles:[1010,1011,1004],position:4}),Menus.addMenuItem("editor",{title:"Adult Beverage",state:"editor.products",type:"button",roles:[1010,1011,1004],position:0})}]),angular.module("core.editor.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("editor",{url:"/editor",templateUrl:"modules/users/client/views/productEditor/productEditor.parent.html",data:{roles:[1010,1011,1004]}})}]),angular.module("core.manager").run(["Menus",function(Menus){}]),angular.module("core.manager.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("manager",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:[1002]}})}]),angular.module("core.storeOwner").run(["Menus",function(Menus){}]),angular.module("core.storeOwner.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("storeOwner",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:[1009,1002,1004]}})}]),angular.module("core.supplier").run(["Menus",function(Menus){}]),angular.module("core.supplier.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("supplier",{"abstract":!0,url:"",template:"<ui-view/>",data:{roles:[1007]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html",controller:"HomeController"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$http","$window","$state","$stateParams","accountsService","constants",function($scope,Authentication,Menus,$http,$window,$state,$stateParams,accountsService,constants){function updateOrdersCount(){if($scope.$root.selectAccountId&&null!==$scope.$root.selectAccountId&&$scope.$root.renderTopMenu){var ordersUrl=API_URL+"/mobile/reservations/store/"+$scope.$root.selectAccountId;$http.get(ordersUrl).then(function(response){accountsService.ordersCount=_.filter(response.data,function(order){return moment().isSame(order.pickupTime,"day")&&"Completed"!==order.status&&"Cancelled"!==order.status}).length})}}function init(){$stateParams.accountId?$scope.$root.selectAccountId=$stateParams.accountId:$scope.$root.selectAccountId=$scope.$root.selectAccountId||localStorage.getItem("accountId")}function shouldRenderMenu(menu,user){user=user||$scope.authentication.user;var result=_.some(menu.items,function(item){return item.shouldRender(user)});return result}function updateMenuVisibility(user,accountId){$scope.renderTopMenu=shouldRenderMenu($scope.menu,user)||!accountId,$scope.$root.renderTopMenu=$scope.renderTopMenu}var API_URL=constants.API_URL;$scope.authentication=Authentication,$scope.ui={},$scope.$state=$state,$scope.accountsService=accountsService,$scope.renderTopMenu=!0;var originatorEv;$scope.isCollapsed=!1,$scope.mainMenu=Menus.getMenu("main"),$scope.menu=Menus.getMenu("topbar"),$scope.editorMenu=Menus.getMenu("editor"),console.log("editor Menu %O",$scope.editorMenu),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.openMenu=function($mdOpenMenu,ev){originatorEv=ev,$mdOpenMenu(ev)},$scope.signOut=function(){window.localStorage.clear(),localStorage.clear(),$window.localStorage.clear(),$window.location.href="/"},$scope.closeDropdown=function(e){setTimeout(function(){$("body > md-backdrop").click()})},$scope.$watch("authentication.user",function(user){updateMenuVisibility(user,$scope.$root.selectAccountId)}),$scope.$watch("$root.selectAccountId",function(accountId){updateMenuVisibility($scope.authentication.user,accountId),updateOrdersCount()}),$scope.$watch("$root.selectAccountId",function(accountId){$stateParams.accountId=accountId,accountId&&$state.current.name&&$state.go(".",$stateParams,{notify:!1})}),$scope.$root.$on("$stateChangeSuccess",function(e,toState,toParams){init(),"dashboard"!==toState.name&&"storeOwner.orders"!==toState.name&&"manager.ads"!==toState.name?$scope.$root.selectAccountId=null:toState&&(toParams.accountId=$scope.$root.selectAccountId,$state.go(toState.name,toParams,{notify:!1}))}),init()}]),angular.module("core").controller("HomeController",["$scope","Authentication","$mdDialog","$state","$http","toastr","constants","authToken",function($scope,Authentication,$mdDialog,$state,$http,toastr,constants,authToken){function redirect(){hasRole(1002)||hasRole(1004)||hasRole(1007)||hasRole(1009)?$state.go("dashboard"):hasRole(1010)||hasRole(1011)?$state.go("editor.products"):hasRole(1012)&&$state.go("supplier.media")}function hasRole(role){return _.contains(Authentication.user.roles,role)}$scope.authentication=Authentication,$scope.stuff={},Authentication.user&&authToken.hasTokenInStorage()&&redirect(),$scope.askForPasswordReset=function(isValid){if(console.log("ask for password called %O",$scope.stuff),$scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1;$scope.stuff.username=$scope.stuff.passuser;var payload={payload:{username:$scope.stuff.username}};$http.post(constants.API_URL+"/users/auth/forgot",payload).then(function(response,err){err&&toastr.error("Can not reset password. Please contact Support"),$scope.credentials=null;var mailOptions={payload:{source:"password",email:response.data.email,title:"Password Reset Success",body:"<body> <p>Dear "+$scope.stuff.username+",</p> <br /> <p>You have requested to have your password reset for your account at the Sellr Dashboard </p> <p>Please visit this url to reset your password:</p> <p>https://sellrdashboard.com/authentication/reset?token="+response.data.token+"&username="+response.data.username+"</p> <strong>If you didn't make this request, you can ignore this email.</strong> <br /> <br /> <p>The Sellr Support Team</p> </body>"}};response&&$http.post(constants.API_URL+"/emails",mailOptions).then(function(res,err){err&&toastr.error("Can not reset password. Please contact Support"),$scope.reset=!1,toastr.success("Reset Password Email Sent")})})},$scope.testFunction=function(ev){$mdDialog.show($mdDialog.alert().parent(angular.element(document.querySelector("#popupContainer"))).clickOutsideToClose(!0).title("This is an alert title").textContent("You can specify some description text in here.").ariaLabel("Alert Dialog Demo").ok("Got it!").targetEvent(ev)),console.log("test")}}]),angular.module("core").controller("statsController",function($scope,$http,$stateParams,constants,chartService,$timeout){function refreshData(){$scope.locations=[],getDevicesLocations(),chartService.groupAndFormatDate(accountId),$timeout(function(){refreshData()},1e3*refreshInterval)}function getDevicesLocations(){$http.get(constants.API_URL+"/locations?account="+accountId).then(function(res,err){err&&console.log(err),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){console.log(device),console.log(device.niceDate);var rightNow=moment(),time=moment(device.lastCheck).subtract(4,"hours");device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"minutes");device.unhealthy=timeDiff<=-60}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})})}$scope.chartService=chartService,$scope.locations=[];var accountId=$stateParams.accountId,refreshInterval=60;localStorage.clear(),refreshData()}),angular.module("core").directive("enterKeyHandler",function(){return{restrict:"A",link:function(scope,element,attrs){function handleKey(event,keyCode,handlerAttr){event.which===keyCode&&(scope.$apply(function(){scope.$eval(handlerAttr)}),event.preventDefault())}element.bind("keydown keypress keyup",function(event){handleKey(event,13,attrs.enterKeyHandler)})}}}),angular.module("core").directive("inlineSvg",function(){return{restrict:"AC",link:function(scope,element,attrs){var $img=$(element),imgID=$img.attr("id"),imgClass=$img.attr("class"),imgURL=attrs.ngSrc||attrs.src;$.get(imgURL,function(data){var $svg=$(data).find("svg");"undefined"!=typeof imgID&&($svg=$svg.attr("id",imgID)),"undefined"!=typeof imgClass&&($svg=$svg.attr("class",imgClass+" replaced-svg")),$svg=$svg.removeAttr("xmlns:a"),$img.replaceWith($svg)},"xml")}}}),angular.module("core").directive("mdMenuContainerClass",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var containerClass=attrs.mdMenuContainerClass;attrs.$observe("mdMenuContainerClass",function(cClass){containerClass=cClass}),scope.$on("$mdMenuOpen",function(){containerClass&&$(".md-open-menu-container").addClass(containerClass)}),scope.$on("$mdMenuClose",function(){containerClass&&$timeout(function(){$(".md-open-menu-container").removeClass(containerClass)},500)})}}}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)}),scope.$on("show-errors-reset",function(event,name){if(angular.isUndefined(name)||formCtrl.$name===name)return reset()}),toggleClasses=function(invalid){if(el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess)return el.toggleClass("has-success",showValidationMessages&&!invalid)}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(attrs.showErrors.indexOf("skipFormGroupCheck")===-1&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authToken",function($window){function setToken(token){cachedToken=token,storage.setItem(userToken,token)}function getToken(){return cachedToken||(cachedToken=storage.getItem(userToken)),cachedToken}function isAuthenticated(){return!!getToken()}function hasTokenInStorage(){return null!==storage.getItem(userToken)}function removeToken(){cachedToken=null,storage.removeItem(userToken)}var cachedToken,me=this,storage=$window.localStorage,userToken="token";return me.setToken=setToken,me.getToken=getToken,me.isAuthenticated=isAuthenticated,me.removeToken=removeToken,me.hasTokenInStorage=hasTokenInStorage,me}),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(rejection.config&&!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").factory("oncueAuthInterceptor",function(authToken){return{request:function(config){var token=authToken.getToken();return token&&(config.headers.Authorization="Bearer "+token),config},response:function(response){return response}}}),angular.module("core").factory("errorInterceptor",function($q,Authentication){return{requestError:function(rejection){if(rejection.data)var title=rejection.data.message||JSON.stringify(rejection.data);return Raygun.send(new Error(title),{error:rejection,user:Authentication.user}),$q.reject(rejection)},responseError:function(rejection){if(rejection.data)var title=rejection.data.message||JSON.stringify(rejection.data);return Raygun.send(new Error(title),{error:rejection,user:Authentication.user}),$q.reject(rejection)}}}),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",icon:options.icon||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:function(user){return!(angular.isFunction(options.shouldRender)&&!options.shouldRender(user))&&shouldRender.call(this,user)}}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:[1004,1003]}),this.addMenu("editor",{roles:[1010]}),this.addMenu("main",{roles:[1004,1003]})}]),angular.module("core").config(function($provide){$provide.decorator("$exceptionHandler",["$delegate","Authentication",function($delegate,Authentication){return function(exception,cause){window.Raygun&&Raygun.send(exception,{cause:cause,user:Authentication.user}),$delegate(exception,cause)}}])}),angular.module("core").service("SocketAPI",["SocketFactory","constants",function(SocketFactory,constants){return SocketFactory({ioSocketUrl:constants.API_URL})}]),angular.module("core").service("SocketBWS",["SocketFactory","constants",function(SocketFactory,constants){return SocketFactory({ioSocketUrl:constants.BWS_API})}]),angular.module("core").service("SocketFactory",["socketFactory",function(socketFactory){return function(options){options=options||{},options.ioSocketUrl&&(options.ioSocket=io.connect(options.ioSocketUrl));var socket=socketFactory(options),connected=!1,_connect=socket.connect;socket.connect=function(){return connected||(_connect.apply(this,arguments),connected=!0),socket};var _disconnect=socket.disconnect;return socket.disconnct=function(){connected&&(_disconnect.apply(this,arguments),connected=!1)},socket.bindTo=function(scope){var scopeSocket=angular.copy(socket),listeners=[];return scopeSocket.on=function(eventName,callback){socket&&(socket.on(eventName,callback),listeners.push({eventName:eventName,callback:callback}))},scope.$on("$destroy",function(){_.each(listeners,function(listener){socket.removeListener(listener.eventName,listener.callback)})}),scopeSocket},socket}}]),angular.module("users.editor").run(["Menus","productEditorService",function(Menus,productEditorService){Menus.addSubMenuItem("topbar","editor",{title:"Beer Wine & Spirits",state:"editor.products",position:9})}]),angular.module("users.editor.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("editor.products",{url:"/products",views:{detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.html"}}}).state("editor.view",{url:"/view/:productId",views:{detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.view.html"}}}).state("editor.edit",{url:"/edit/:productId",views:{detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.edit.html"}}}).state("editor.merge",{url:"/merge",views:{detail:{templateUrl:"modules/users/client/views/productEditor/productEditor.merge.html"}}}).state("editor.match",{url:"/match/:id",views:{detail:{templateUrl:"modules/users/client/views/admin/storeDb.match.html"}}}).state("editor.match.view",{url:"/view/:productId",views:{rightSide:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.view.html"}}}).state("editor.match.edit",{url:"/edit/:productId",views:{rightSide:{templateUrl:"modules/users/client/views/productEditor/productEditor.detail.edit.html"}}}).state("editor.match.merge",{url:"/merge",views:{rightSide:{templateUrl:"modules/users/client/views/productEditor/productEditor.merge.html"}}}).state("editor.match.new",{url:"/new",views:{rightSide:{templateUrl:"modules/users/client/views/productEditor/productEditor.new.html",controller:"newProductController"}}})}]),angular.module("users.manager").run(["Menus",function(Menus){Menus.addMenuItem("main",{title:"Ads",icon:"/img/navbar/tv_icon.svg",state:"manager.ads",type:"button",roles:[1002],position:2})}]),angular.module("users.manager.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("dashboard",{url:"/dashboard/:accountId?",templateUrl:"modules/users/client/views/manager/dashboard.client.view.html"}).state("manager.ads",{url:"/ads/:accountId?",templateUrl:"modules/users/client/views/manager/admanager.client.view.html",controller:"AdmanagerController"}).state("manager.uploads",{url:"/manager/uploader",templateUrl:"modules/users/client/views/manager/managerUpload.client.view.html"}).state("manager.locations",{url:"/manager/locations",templateUrl:"modules/users/client/views/manager/locationManager.client.view.html",controller:"LocationManagerController"}).state("manager.locations.edit",{url:"/edit/:id",templateUrl:"modules/users/client/views/manager/locationManager.edit.client.view.html"}).state("manager.locations.create",{url:"/new",templateUrl:"modules/users/client/views/manager/locationManager.create.client.view.html"}).state("manager.accounts",{url:"/manager/accounts",templateUrl:"modules/users/client/views/manager/accountManager.client.view.html",controller:"AccountManagerController"}).state("manager.accounts.edit",{url:"/edit/:id",templateUrl:"modules/users/client/views/manager/accountManager.edit.client.view.html"}).state("manager.accounts.create",{url:"/new",templateUrl:"modules/users/client/views/manager/accountManager.create.client.view.html"})}]),angular.module("users.storeOwner").run(["Menus","accountsService",function(Menus,accountsService){Menus.addMenuItem("main",{title:"Orders",icon:"/img/navbar/shopping_icon.svg",state:"storeOwner.orders",type:"button",roles:[1002,1004,1009],position:1,shouldRender:function(){var account=accountsService.currentAccount,preferences=account&&angular.fromJson(account.preferences||null)||{};return preferences.shoppr}})}]),angular.module("users.storeOwner.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("storeOwner.inviteUser",{url:"/invite",templateUrl:"modules/users/client/views/storeOwner/userInvite.client.view.html",controller:"StoreOwnerInviteController"}).state("storeOwner.orders",{url:"/orders/:accountId?",templateUrl:"modules/users/client/views/storeOwner/orders.client.view.html",controller:"StoreOwnerOrdersController"})}]),angular.module("users.supplier").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Supplier",state:"supplier.media",type:"button",roles:[1007],position:2})}]),angular.module("users.supplier.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("supplier.media",{url:"/supplier",templateUrl:"modules/users/client/views/supplier/media.client.view.html"}).state("supplier.assets",{url:"/supplier/assets",templateUrl:"modules/users/client/views/supplier/assets.client.view.html"})}]),angular.module("users.admin").run(["Menus",function(Menus,ord){Menus.addSubMenuItem("topbar","admin",{title:"Account Manager",state:"admin.accounts",position:3}),Menus.addSubMenuItem("topbar","admin",{title:"User Management",state:"admin.users",position:5}),Menus.addSubMenuItem("topbar","admin",{title:"Invite User",state:"storeOwner.inviteUser",position:6}),Menus.addSubMenuItem("topbar","admin",{title:"Pricing Calculator",state:"admin.pricing",position:7}),Menus.addSubMenuItem("topbar","admin",{title:"Store Database Management",state:"admin.store",position:8}),Menus.addSubMenuItem("topbar","admin",{title:"Location Manager",state:"manager.locations",position:10})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/admin/accountManager.client.view.html",controller:"AccountManagerController"}).state("admin.accounts.edit",{url:"/edit/:id",templateUrl:"modules/users/client/views/admin/accountManager.edit.client.view.html"}).state("admin.accounts.create",{url:"/new",templateUrl:"modules/users/client/views/admin/accountManager.create.client.view.html"}).state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.users.edit",{url:"/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.users.store",{templateUrl:"modules/users/client/views/admin/invite-user.client.view.html",controller:"inviteUserController"}).state("admin.users.user-edit",{url:"/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.pricing",{url:"/pricing",templateUrl:"modules/users/client/views/admin/pricing.client.view.html",controller:"AdminPricingController"}).state("admin.device",{url:"/device",templateUrl:"modules/users/client/views/admin/device-manager.client.view.html",controller:"DeviceManagerController"}).state("admin.store",{url:"/store",templateUrl:"modules/users/client/views/admin/storeDB.client.view.html",controller:"StoreDbController"})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("admanager",{"abstract":!0,url:"/admanager",templateUrl:"modules/users/client/views/settings/admanager.client.view.html",data:{roles:["user"]}}).state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",
data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.reset",{url:"/reset",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("mypassword.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("AccountManagerController",function($scope,locationsService,$state,accountsService,CurrentUserService,Authentication,$http,constants,uploadService,toastr){accountsService.init(),$scope.accountsService=accountsService,$scope.determinateValue=0,$scope.accountLogo="",$scope.account={createdBy:""},Authentication.user&&($scope.account.createdBy=Authentication.user.username),console.log($scope.account),$scope.editAccount=function(account){console.log("editing account %O",account),$scope.currentAccountLogo="",accountsService.editAccount=account,console.log("editAccount is now %O",accountsService.editAccount),$state.go("admin.accounts.edit",{id:account.accountId}),window.scrollTo(0,0)},$scope.upload=function(files,accountId){var mediaConfig={mediaRoute:"media",folder:"logo",type:"LOGO",accountId:accountId};uploadService.upload(files[0],mediaConfig).then(function(response,err){response&&(accountsService.editAccount.logo=constants.ADS_URL+"logo/"+response[0].mediaAssetId+"-"+response[0].fileName,$scope.currentAccountLogo=accountsService.editAccount.logo,toastr.success("Logo Updated","Success!"))})},$scope.uploadGraphic=function(files,accountId){var mediaConfig={mediaRoute:"media",folder:"storeImg",type:"STOREIMG",accountId:accountId};uploadService.upload(files[0],mediaConfig).then(function(response,err){response&&(accountsService.editAccount.storeImg=constants.ADS_URL+"storeImg/"+response[0].mediaAssetId+"-"+response[0].fileName,$scope.currentAccountStoreImg=accountsService.editAccount.storeImg,toastr.success("Store Image Updated","Success!"))})}}),angular.module("users.admin").controller("DeviceManagerController",["$scope","$state","$http","Authentication","constants","toastr","accountsService","$stateParams",function($scope,$state,$http,Authentication,constants,toastr,accountsService,$stateParams){$scope.authentication=Authentication;$scope.myPermissions=localStorage.getItem("roles"),$stateParams.accountId?$scope.selectAccountId=$stateParams.accountId:$scope.selectAccountId=localStorage.getItem("accountId"),$scope.accountsService=accountsService,$scope.onClick=function(points,evt){console.log(points,evt)},$scope.chartOptions={},$scope.init=function(){$state.go(".",{accountId:$scope.selectAccountId},{notify:!1}),$scope.emails=[],$scope.phones=[],$scope.loyalty=[],$scope.analytics=[],$scope.locations=[],$scope.stores=[],$scope.specificLoc=[],console.log("state params %O",$stateParams),$scope.sources=[],$http.get(constants.API_URL+"/locations?account="+$scope.selectAccountId).then(function(res,err){err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){var rightNow=moment(),time=moment(device.lastCheck);device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"hours");device.unhealthy=timeDiff<=-3}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})}),$http.get(constants.API_URL+"/loyalty?account="+$scope.selectAccountId).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res)for(var i in res.data){var contact=JSON.parse(res.data[i].contactInfo);contact.email?$scope.emails.push({email:contact.email}):$scope.phones.push({phone:contact.phone})}});var url=constants.API_URL+"/analytics/top-products?account="+$scope.selectAccountId;$http.get(url).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res){console.log("analytics topProducts %O",res);for(var i in res.data)"Product-Request"==res.data[i].action&&$scope.analytics.push(res.data[i])}})}}]),angular.module("users.admin").controller("inviteUserController",["$scope","$state","$http","Authentication","constants","toastr","accountsService",function($scope,$state,$http,Authentication,constants,toastr,accountsService){function onInviteSuccess(response){console.log("success!"),toastr.success("User Invited","Invite Success!"),console.dir(response),$scope.success=!0,$state.go($state.previous.state.name||"home",$state.previous.params)}function onInviteError(err){console.log("error"),toastr.error("There was a problem inviting this user."),console.error(err)}$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.authentication=Authentication,console.log("authentication %O",$scope.authentication),$scope.allRoles=[{text:"admin",id:1004},{text:"owner",id:1009},{text:"manager",id:1002},{text:"supplier",id:1007},{text:"user",id:1003},{text:"editor",id:1010},{text:"curator",id:1011}],$scope.roles=[{text:"admin",id:1004},{text:"owner",id:1009},{text:"manager",id:1002},{text:"supplier",id:1007},{text:"editor",id:1010},{text:"curator",id:1011}],$scope.user={accountId:localStorage.getItem("accountId")},$scope.invite=function(isValid){switch($scope.selected){case 1004:$scope.user.roles=[1004,1009,1002,1007,1003,1010,1011];break;case 1009:$scope.user.roles=[1009,1002,1003];break;case 1002:$scope.user.roles=[1002,1007,1003];break;case 1007:$scope.user.roles=[1007,1003];break;case 1010:$scope.user.roles=[1010,1003];break;case 1011:$scope.user.roles=[1011,1010,1003];break;default:$scope.user.roles=[1003]}if(console.log("user roes",$scope.user.roles),!isValid)return console.log("failed"),$scope.$broadcast("show-errors-check-validity","userForm"),!1;var payload={payload:$scope.user};console.log(payload.payload),$http.post(constants.API_URL+"/users",payload).then(onInviteSuccess,onInviteError)}}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin","$http","$state","CurrentUserService","constants",function($scope,$filter,Admin,$http,$state,CurrentUserService,constants){$scope.CurrentUserService=CurrentUserService,$scope.userview=$state.params,$scope.locations=[],CurrentUserService.locations?$scope.locations=CurrentUserService.locations:$scope.locations=["No Locations"],$scope.addLocs=function(){console.log("helllo, %O",$scope.locations)},$scope.userEditView=function(user){$http.get(constants.API_URL+"/users?email="+user.email).then(function(res,err){err&&console.log(err),res&&(console.log(res),CurrentUserService.userBeingEdited=res.data[0],$state.go("admin.users.user-edit",{userId:user.userId}),console.log("currentUserService userBeingEdited %O",CurrentUserService.userBeingEdited))})},$scope.inviteStoreView=function(){$state.go("admin.users.store",{},{reload:!0})},$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")(CurrentUserService.userList,{$:$scope.search}),$scope.newUsers=$scope.filteredItems},$scope.buildPager(),$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()},$scope.removeLocationBox=!1,$scope.addNewLocation=function(locs){var newItemNo=$scope.locations.length+1;$scope.locations.push({id:"location"+newItemNo}),$scope.removeLocationBox=!0},$scope.removeLocation=function(){if($scope.locations.length>1){$scope.locations.length-1;$scope.locations.pop()}1==$scope.locations.length&&($scope.removeLocationBox=!1)}}]),angular.module("users.admin").controller("AdminPricingController",["$scope","$state","$http","Authentication","$timeout","Admin","Upload","$sce","ImageService","constants",function($scope,$state,$http,Authentication,$timeout,Admin,Upload,$sce,ImageService,constants){$scope.authentication=Authentication,Admin.query(function(data){$scope.users=data});$scope.amountDiscount=0,$scope.itemPrice=[],$scope.deviceImage="dist/ipadair.jpeg",$scope.images=[],$scope.currentDiscount=0,$scope.priceTotal=0,$scope.addPackage=function(number){$scope.priceTotal=0,devices[0].qty=Math.round(.66*number*1)/1,devices[1].qty=Math.round(.33*number*1)/1,apps[0].qty=number,accessories[0].qty=Math.round(.66*number*1)/1,accessories[1].qty=number,accessories[2].qty=Math.round(.33*number*1)/1,$scope.cart.pricelist.totalDevices=number,$scope.cart.pricelist.totalApps=number,$scope.cart.pricelist.totalAccessories=2*number;var packageTotal=devices[0].price*Math.round(.66*number*1)/1+devices[1].price*Math.round(.33*number*1)/1+apps[0].price*number+accessories[0].price*Math.round(.66*number*1)/1+accessories[1].price*number*1/1+accessories[2].price*Math.round(.33*number*1)/1;$scope.total(packageTotal)},$scope.clear=function(){console.log("hit"),angular.merge($scope.cart,$scope.emptyCart),$scope.priceTotal=0},$scope.formatNumber=function(i){return Math.round(1*i)/1},$scope.total=function(price){console.log(price),$scope.priceTotal+=price},$scope.addDiscount=function(amount){$scope.currentDiscount=Number(amount)},$scope.sendOrder=function(){$http.post(constants.API_URL+"/media",obj).then(function(response,err){err&&console.log(err)})},$scope.subtractTotal=function(price){$scope.priceTotal-price>=0?$scope.priceTotal-=price:$scope.priceTotal=0},$scope.switchItem=function(cart,mod){switch(cart.name){case"iPad Air 16GB":"add"==mod?devices[0].qty+=1:0!=devices[0].qty&&(devices[0].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/ipadair.jpeg"});break;case"iPad Pro 32GB":"add"==mod?devices[1].qty+=1:0!=devices[1].qty&&(devices[1].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/ipad-pro-250x306.jpg"});break;case"iPad Air 16GB 4G":"add"==mod?devices[2].qty+=1:0!=devices[2].qty&&(devices[2].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/ipadair.jpeg"});break;case"iPad Pro 128GB 4G":"add"==mod?devices[3].qty+=1:0!=devices[3].qty&&(devices[3].qty-=1);break;case"BWS bundle":"add"==mod?apps[0].qty+=1:0!=apps[0].qty&&(apps[0].qty-=1);break;case"Beer Lookup":"add"==mod?apps[1].qty+=1:0!=apps[1].qty&&(apps[1].qty-=1);break;case"Wine Lookup":"add"==mod?apps[2].qty+=1:0!=apps[2].qty&&(apps[2].qty-=1);break;case"Spirits Lookup":"add"==mod?apps[3].qty+=1:0!=apps[3].qty&&(apps[3].qty-=1);break;case"Pharmacy":"add"==mod?apps[4].qty+=1:0!=apps[4].qty&&(apps[4].qty-=1);break;case"Digital Signage":"add"==mod?apps[5].qty+=1:0!=apps[5].qty&&(apps[5].qty-=1);break;case"Dashboard":"add"==mod?apps[6].qty+=1:0!=apps[6].qty&&(apps[6].qty-=1);break;case"VESA Shelf Mount":"add"==mod?accessories[0].qty+=1:0!=accessories[0].qty&&(accessories[0].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/vesa.jpg"});break;case"2D Scanner":"add"==mod?accessories[1].qty+=1:0!=accessories[1].qty&&(accessories[1].qty-=1);break;case"Floor Stand":"add"==mod?accessories[2].qty+=1:0!=accessories[2].qty&&(accessories[2].qty-=1),$scope.images.push({name:cart.name,fileName:"dist/armodillo-floor.png"});break;case"4G Hotspot":"add"==mod?accessories[3].qty+=1:0!=accessories[3].qty&&(accessories[3].qty-=1)}},$scope.addItem=function(item,id){var obj=item;"device"==id&&($scope.cart.pricelist.totalDevices+=1),"apps"==id&&($scope.cart.pricelist.totalApps+=1),"accessories"==id&&($scope.cart.pricelist.totalAccessories+=1),0==$scope.itemPrice.length?(obj.total+=1,$scope.total(obj.price),$scope.switchItem(item,"add")):(obj.total+=1,$scope.switchItem(item,"add"),$scope.total(obj.price))},$scope.removeItem=function(item,id){var obj=item;"device"==id&&0!=item.qty&&($scope.cart.pricelist.totalDevices-=1),"apps"==id&&0!=item.qty&&($scope.cart.pricelist.totalApps-=1),"accessories"==id&&0!=item.qty&&($scope.cart.pricelist.totalAccessories-=1);for(var y in $scope.images)$scope.images[y].name==obj.name&&$scope.images.splice(y,1);obj.total-=1,0!=obj.qty&&$scope.subtractTotal(obj.price),$scope.switchItem(item,"subtract")},$scope.appcheck,$scope.checkClick=function(item){0==$scope.appcheck?$scope.addItem(item):$scope.removeItem(item)},$scope.cart={},$scope.emptyCart={pricelist:{devices:[{name:"iPad Air 16GB",price:499,qty:0},{name:"iPad Pro 32GB",price:799,qty:0},{name:"iPad Air 16GB 4G",price:629,qty:0},{name:"iPad Pro 128GB 4G",price:1079,qty:0}],apps:[{name:"BWS bundle",price:2500,"max-quantity":1,qty:0},{name:"Beer Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Wine Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Spirits Lookup",price:1e3,"max-quantity":1,qty:0},{name:"Pharmacy",price:1e3,"max-quantity":1,qty:0},{name:"Digital Signage",price:1e3,"max-quantity":1,qty:0},{name:"Dashboard",price:1e3,"max-quantity":1,qty:0}],accessories:[{name:"VESA Shelf Mount",price:130,qty:0},{name:"2D Scanner",price:275,qty:0},{name:"Floor Stand",price:350,qty:0},{name:"4G Hotspot",price:600,qty:0}],totalDevices:0,totalApps:0,totalAccessories:0}},$scope.discounts=[{amount:0,name:"0%"},{amount:.05,name:"5%"},{amount:.1,name:"10%"},{amount:.2,name:"20%"},{amount:.3,name:"30%"},{amount:.4,name:"40%"}],angular.copy($scope.emptyCart,$scope.cart);var devices=$scope.cart.pricelist.devices,apps=$scope.cart.pricelist.apps,accessories=$scope.cart.pricelist.accessories}]),angular.module("users.admin").controller("StoreDbController",function($scope,locationsService,orderDataService,$state,accountsService,CurrentUserService,Authentication,$http,constants,uploadService,toastr,$q,csvStoreMapper){function init(){Authentication.user&&($scope.account={createdBy:Authentication.user.username}),$scope.storeFields=wrapFields(DEFAULT_STORE_FIELDS),$scope.storeFields.unshift({name:EMPTY_FIELD_NAME,displayName:"- Ignore Field"});var url=constants.BWS_API+"/storedb/stores?supc=true";$http.get(url).then(getStoresSuccess,getStoresError)}function getStoresSuccess(response){200===response.status&&($scope.orders=response.data,$scope.storesDropdown=$scope.orders.slice(),$scope.storesDropdown=_.sortBy($scope.storesDropdown,"name"),$scope.storesDropdown.unshift({storeId:EMPTY_FIELD_NAME,name:"Create New Store"}),console.log($scope.orders),updateStoreColors())}function updateStoreColors(){_.each($scope.orders,function(elm,ind,orders){elm.status.received>0?elm.status.barClass="red":elm.status.processed>0||elm.status.done>0?elm.status.barClass="orange":elm.status.barClass="green"})}function getStoresError(error){console.error("getStoresError %O",error)}function handleResponse(response){if(200!==response.status)throw Error(response.statusText);var data=response.data;if(data.error)throw console.error(data.error),Error(data.message||data.error);return data}function selectOrCreateStore(storeId){var store=findStore($scope.orders,storeId);return store?$q.when(store):(store=findStore($scope.storesDropdown,storeId),store||(store={accountId:localStorage.getItem("accountId"),name:storeId.toString().trim()}),$http.post(constants.BWS_API+"/storedb/stores",{payload:store}).then(handleResponse).then(function(data){return getStoreById(data.storeId)}))}function importStoreProducts(storeDb,storeItems){var payload={id:storeDb.storeId,items:storeItems};return storeDb&&0!=storeDb.length?$http.post(constants.BWS_API+"/storedb/stores/products/import",{payload:payload}).then(handleResponse).then(function(){return getStoreById(storeDb.storeId)}):$q.reject("no store db found in csv file")}function getStoreById(id){return $http.get(constants.BWS_API+"/storedb/stores/"+id).then(handleResponse).then(function(data){return data instanceof Array?data[0]:data})}function toPascalCase(str){if(!str)return str;var words=_.compact(str.split(/\s+/)),result=words.map(function(w){return w[0].toUpperCase()+w.substr(1)}).join(" ");return result}function initCsvColumns(columns){return columns=wrapFields(columns),_.each(columns,function(col){col.mapping=mapStoreField(col.name).name}),columns}function mapStoreField(column){var cUpper=column&&column.toUpperCase(),field=cUpper&&_.find($scope.storeFields,function(f){return cUpper==f.name.toUpperCase()||cUpper==f.displayName.toUpperCase()});return field||_.findWhere($scope.storeFields,{name:EMPTY_FIELD_NAME})}function wrapFields(fields){return _.map(fields,function(v){return{name:v,displayName:toPascalCase(v)}})}function populateMappingDropdowns(columns){var selectedMappings=_.pluck(columns,"mapping"),availableFields=_.filter($scope.storeFields,function(f){return f.name==EMPTY_FIELD_NAME||!_.contains(selectedMappings,f.name)});return _.each(columns,function(column){column.availableFields=availableFields.slice();var field=_.findWhere($scope.storeFields,{name:column.mapping});column.availableFields.push(field)}),$scope.$$phase||$scope.$digest(),availableFields}function randomId(){return-Math.floor(1e5*Math.random())}function findStore(arr,id){return _.find(arr,{storeId:parseInt(id,10)})||_.find(arr,{name:id})}var EMPTY_FIELD_NAME=csvStoreMapper.EMPTY_FIELD_NAME,DEFAULT_STORE_FIELDS=csvStoreMapper.STORE_FIELDS;$scope.account=void 0,$scope.orders=[],$scope.orderItems=[],$scope.storesDropdown=[],$scope.importView=null,$scope.storeFields=null,$scope.csv={header:!0},$scope.selectStoreConfig={create:!1,maxItems:1,allowEmptyOption:!1,valueField:"storeId",labelField:"name",searchField:["name","storeId"]},$scope.selectStoreFieldConfig={create:!1,maxItems:1,allowEmptyOption:!1,valueField:"name",labelField:"displayName",sortField:"displayName",searchField:["displayName"],onChange:function(){populateMappingDropdowns($scope.csv.columns)}},$scope.selectCsvImport=function(selector){$(selector).find('input[type="file"]').click()},$scope.cancelCsvImport=function(selector){$scope.csv={header:!0};var $input=$(selector).find('input[type="file"]');$input.replaceWith($input.val("").clone(!0))},$scope.initCsvImport=function(e){$scope.csv.columns=initCsvColumns(_.keys(($scope.csv.result||[])[0])),populateMappingDropdowns($scope.csv.columns),$scope.csv.loaded=!0,console.log("csv file selected",$scope.csv)},$scope.submitStore=function(selectedStore){if(!selectedStore)return void toastr.error("store not selected");$scope.storeSubmitBusy=!0;try{selectOrCreateStore(selectedStore).then(function(store){var products=csvStoreMapper.mapProducts($scope.csv.result,$scope.csv.columns);return importStoreProducts(store,products).then(function(store){$scope.orders.push(store),$scope.cancelImport(),toastr.success("Store csv file imported")},function(error){toastr.error(error&&error.toString()||"Failed to import csv file")})})["finally"](function(){$scope.storeSubmitBusy=!1})}catch(ex){console.error("unable to submit store",ex),$scope.storeSubmitBusy=!1}},$scope.cancelImport=function(){$scope.selectedStore=null,$scope.importView=null,$scope.cancelCsvImport("#storeCsv")},$scope.goToMatch=function(id){orderDataService.currentOrderId=id,orderDataService.getData(id).then(function(response){$state.go("editor.match",{id:id})})},$scope.refreshStoreStatus=function(i,storeId){var url=constants.BWS_API+"/storedb/stores/"+storeId;$http.get(url).then(function(res){$scope.orders[i]=res.data[0],updateStoreColors()},function(err){console.error(err)})},$scope.openNewDialog=function(store){if(store===EMPTY_FIELD_NAME){$scope.newStore={storeId:randomId(),accountId:localStorage.getItem("accountId")};var $createModal=$("#createStoreModal").on("shown.bs.modal",function(e){var autofocus=$(e.target).find("[autofocus]")[0];autofocus&&autofocus.focus()});$createModal.modal("show")}},$scope.selectNewStore=function(newStore){newStore&&($scope.storesDropdown.splice(1,0,newStore),$scope.selectedStore=newStore.storeId||newStore.name)},$scope.$watch("csv.header",function(){$scope.csv.loaded=!1,setTimeout(function(){$("#storeCsv").find(".separator-input").triggerHandler("keyup"),$scope.csv.loaded=!0,$scope.$digest()})}),init()}),angular.module("users.admin").controller("StoreDbDetailController",function($scope,$location,$mdDialog,$mdMedia,locationsService,orderDataService,$state,accountsService,CurrentUserService,productEditorService,Authentication,$stateParams,constants,toastr,$q,$rootScope){function onProductLoad(){productEditorService.productList=[];var name=orderDataService.currentItem.name,upc=orderDataService.currentItem.upc,type=orderDataService.currentItem.productTypeId;name?productEditorService.getProductList(null,{sum:!0,name:name,types:[{type:type}]}).then(function(productList){productEditorService.searchSkuResults({upc:upc,productList:productList,type:type})}):productEditorService.searchSkuResults({upc:upc,type:type})}function onInit(){0===orderDataService.allItems.length&&$stateParams.id&&orderDataService.getData($stateParams.id).then(function(){})}Authentication.user&&($scope.account={createdBy:Authentication.user.username}),console.log("stateParams %O",0===orderDataService.allItems.length),onInit(),$scope.orderDataService=orderDataService,$scope.orders={},$scope.displayIndex=0,$scope.searchDatabase=function(){$rootScope.$broadcast("searchdb"),productEditorService.clearProductList(),onProductLoad()},$scope.increaseIndex=function(){$state.go("editor.match",$stateParams,{reload:!0}),productEditorService.clearProductList(),orderDataService.increaseIndex()},$scope.decreaseIndex=function(){$state.go("editor.match",$stateParams,{reload:!0}),productEditorService.clearProductList(),orderDataService.decreaseIndex()},$scope.markAsNew=function(prod){orderDataService.createNewProduct(prod).then(function(data){toastr.success("New Product Created"),$scope.displayIndex+=1})},$scope.showConfirm=function(ev){var defer=$q.defer(),confirm=$mdDialog.confirm().title("Mark this product as new?").textContent("This will set the product status for this product.").targetEvent(ev).ok("Mark as New").cancel("Mark as Done");return $mdDialog.show(confirm).then(function(){$scope.status="You decided to get rid of your debt.",defer.resolve("new")},function(){$scope.status="You decided to keep your debt.",defer.resolve("done")}),defer.promise},$scope.matchProduct=function(ev){$scope.showConfirm(ev).then(function(status){orderDataService.matchProduct().then(function(selected){productEditorService.getProduct(selected).then(function(product){product.status=status,productEditorService.save(product),toastr.success("Product Matched"),$scope.increaseIndex()})})})},$scope.updateFilter=function(value){$scope.checked=!1;for(var i in $scope.filter)$scope.filter[i].type===value.type&&($scope.filter.splice(i,1),$scope.checked=!0);$scope.checked||$scope.filter.push(value),console.log($scope.filter)}}),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve","$timeout","CurrentUserService","constants","$http","toastr","$q",function($scope,$state,Authentication,userResolve,$timeout,CurrentUserService,constants,$http,toastr,$q){function updateAPI(){function onUpdateSuccess(res){toastr.success("User updated","Success!")}function onUpdateError(err){toastr.error("There was an error updating this user"),console.error(err)}$scope.user.roles=[],$scope.roles.forEach(function(role){role.selected&&$scope.user.roles.push(role.id)});var user=$scope.user;console.log("userBeingEditied %O",user);var url=constants.API_URL+"/users/"+user.userId,payload={payload:user};$http.put(url,payload).then(onUpdateSuccess,onUpdateError)}$scope.authentication=Authentication,$scope.user=userResolve,console.log("userResolve %O",userResolve),$timeout(function(){$scope.roles=[{text:"admin",id:1004,selected:$scope.user.roles.indexOf(1004)>-1},{text:"owner",id:1009,selected:$scope.user.roles.indexOf(1009)>-1},{text:"manager",id:1002,selected:$scope.user.roles.indexOf(1002)>-1},{text:"supplier",id:1007,selected:$scope.user.roles.indexOf(1007)>-1},{text:"user",id:1003,selected:$scope.user.roles.indexOf(1003)>-1},{text:"editor",id:1010,selected:$scope.user.roles.indexOf(1010)>-1},{text:"curator",id:1011,selected:$scope.user.roles.indexOf(1011)>-1}]},500),$scope.update=function(isValid){return console.dir(isValid),isValid?void updateAPI():($scope.$broadcast("show-errors-check-validity","userForm"),!1)}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","constants","toastr","authToken","intercomService","SocketAPI",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,constants,toastr,authToken,intercomService,SocketAPI){function onValidReg(response){var userUpdate={payload:{email:$scope.credentials.email,firstName:$scope.credentials.firstName,lastName:$scope.credentials.lastName,username:$scope.credentials.username,password:$scope.credentials.password,roles:userInfo.roles,userId:userInfo.regCode,accountId:userInfo.accountId}},url=constants.API_URL+"/users/signup/"+userInfo.regCode;$http.put(url,userUpdate).then(onUpdateSuccess,onUpdateError)}function onInvalidReg(err){toastr.error("User is not a valid user. Please contact support."),console.error(err),$scope.credentials={}}function onUpdateSuccess(apiRes){apiRes&&(authToken.setToken(apiRes.data.token),localStorage.setItem("roles",apiRes.data.roles),localStorage.setItem("accountId",apiRes.data.accountId),localStorage.setItem("roles",apiRes.data.roles),localStorage.setItem("userId",apiRes.data.userId),localStorage.setItem("userObject",JSON.stringify(apiRes.data)),$scope.authentication.user=apiRes.data,userInfo.roles.forEach(function(role){$scope.authentication.user.roles.push(Number(role))}),console.log($scope.authentication),toastr.success("Success! User Created. Logging you in now..."),$scope.authentication.user.roles.indexOf(1002)<0&&$scope.authentication.user.roles.indexOf(1009)<0&&$scope.authentication.user.roles.indexOf(1004)<0?(console.log("1"),$scope.authentication.user.roles.indexOf(1010)>=0&&(console.log("2"),$state.go("editor.products",{type:"wine",status:"new"}))):$state.go("dashboard",$state.previous.params))}function onUpdateError(err){toastr.error(err.message),console.error(err)}function onSigninSuccess(response){authToken.setToken(response.data.token.token),localStorage.setItem("roles",response.data.roles),localStorage.setItem("accountId",response.data.accountId),localStorage.setItem("roles",response.data.roles),localStorage.setItem("userId",response.data.userId),localStorage.setItem("userObject",JSON.stringify(response.data)),$scope.authentication.user=response.data,SocketAPI.connect(),$scope.authentication.user.roles.indexOf(1002)<0&&$scope.authentication.user.roles.indexOf(1009)<0&&$scope.authentication.user.roles.indexOf(1004)<0?$scope.authentication.user.roles.indexOf(1010)>=0&&$state.go("editor.products",{type:"wine",status:"new"}):$state.go("dashboard",$state.previous.params)}function onSigninError(err){console.error(err),toastr.error("Failed To Connect, Please Contact Support."),$scope.error=err.message,$scope.credentials={}}$scope.reset=!1,$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg();var userInfo={};$location.search().r&&(userInfo={accountId:Number($location.search().a),regCode:Number($location.search().u),roles:$location.search().r.split("~")}),$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.get(constants.API_URL+"/users/validate/"+userInfo.regCode).then(onValidReg,onInvalidReg)},$scope.signin=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var url=constants.API_URL+"/users/login",payload={payload:$scope.credentials};console.log(payload),$http.post(url,payload).then(onSigninSuccess,onSigninError)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users.manager").controller("AdmanagerController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants","toastr","accountsService","uploadService",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants,toastr,accountsService,uploadService){function debounce(func,wait,context){var timer;return function(){var context=$scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer),timer=$timeout(function(){timer=void 0,func.apply(context,args)},wait||10)}}function buildDelayedToggler(navID){return debounce(function(){$mdSidenav(navID).toggle().then(function(){console.log("toggle "+navID+" is done")})},200)}$scope.authentication=Authentication,$scope.activeAds=[],$scope.allMedia=[],$scope.allAccountMedia=[],$scope.sortingLog=[],$scope.ads=!1,$scope.activeAds=!1,$scope.storeDevices=!1,$scope.toggleLeft=buildDelayedToggler("left"),$scope.profiles=[],$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.files=[],accountsService.bindSelectedAccount($scope),$scope.$watch("selectAccountId",function(){$scope.init()}),$scope.init=function(){$scope.getProfiles(),$scope.getAllMedia()},$scope.getProfiles=function(){$scope.profiles=[],$http.get(constants.API_URL+"/profiles?accountId="+$scope.selectAccountId).then(function(res,err){err&&console.log(err),res.data.length>0&&($scope.profiles=res.data,$scope.currentProfile=res.data[0].profileId,$scope.getActiveAds($scope.currentProfile))})},$scope.getDevice=function(loc){$http.get(constants.API_URL+"/devices/location/"+loc).then(function(response,err){err&&console.log(err),response&&($scope.list_devices=response)})},$scope.getActiveAds=function(profileId){$scope.activeAds=[],$http.get(constants.API_URL+"/ads?profileId="+profileId).then(function(response,err){if(err&&console.log(err),response.data.length>0){$scope.ads=!0;for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];if(ext=(ext||"").toLowerCase(),"jpg"==ext||"jpeg"==ext||"png"==ext||"gif"==ext){myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId};for(var i in $scope.allMedia)$scope.allMedia[i].name==myData.name&&$scope.allMedia.splice(i,1);$scope.activeAds.push(myData)}else if("mp4"==ext||"mov"==ext||"m4v"==ext){myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId};for(var i in $scope.allMedia)$scope.allMedia[i].name==myData.name&&$scope.allMedia.splice(i,1);
$scope.activeAds.push(myData)}}}})},$scope.getAllMedia=function(){$scope.allMedia=[],$http.get(constants.API_URL+"/ads?accountId="+$scope.selectAccountId).then(function(response,err){if(err&&console.log(err),response){console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];ext=(ext||"").toLowerCase(),"jpg"==ext||"jpeg"==ext||"png"==ext||"gif"==ext?(myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.allMedia.push(myData)):"mp4"!=ext&&"mov"!=ext&&"m4v"!=ext||(myData={name:response.data[i].fileName,value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.allMedia.push(myData))}}})},$scope.setCurrentProfile=function(profileId){$scope.currentProfile=profileId},$scope.activateAd=function(adId,profileId){var asset={payload:{adId:adId,profileId:profileId}};$http.post(constants.API_URL+"/ads/profile",asset).then(function(response,err){err&&(console.log(err),toastr.error("Could not push ad to device. Please try again later.")),response&&($scope.getActiveAds(profileId),toastr.success("Ad pushed to devices!"))})},$scope.deactivateAd=function(adId,profileId){console.log(adId),console.log(profileId),$http["delete"](constants.API_URL+"/ads/profile?profileId="+profileId+"&adId="+adId).then(function(response,err){err&&(console.log(err),toastr.error("Could not remove ad from devices.")),response&&(console.log(response),$scope.getActiveAds(profileId),toastr.success("Ad removed from devices."),$scope.getAllMedia())})},$scope.$watch("files",function(){$scope.upload($scope.files)}),$scope.$watch("file",function(){null!=$scope.file&&($scope.files=[$scope.file])}),$scope.upload=function(files){for(var responses=[],i=0;i<files.length;i++){var mediaConfig={mediaRoute:"ads",folder:"ads",accountId:$scope.selectAccountId};uploadService.upload(files[i],mediaConfig).then(function(response,err){response&&(toastr.success("New Ad Uploaded","Success!"),responses.push(response),responses.length==files.length&&$scope.getAllMedia())})}},$scope.deleteAd=function(ad){console.log("delete ad %O",ad);var url=constants.API_URL+"/ads/"+ad.adId;$http["delete"](url).then(function(){toastr.success("Ad removed","Success"),$scope.init()})}}]),angular.module("users.manager").controller("DashboardController",["$scope","$stateParams","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants","chartService","accountsService",function($scope,$stateParams,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants,chartService,accountsService){$scope.authentication=Authentication,accountsService.bindSelectedAccount($scope),$scope.$watch("selectAccountId",function(){$scope.init()}),$scope.myPermissions=localStorage.getItem("roles"),$scope.chartService=chartService,$scope.accountsService=accountsService,$scope.onClick=function(points,evt){console.log(points,evt)},$scope.chartOptions={},$scope.init=function(){$scope.emails=[],$scope.phones=[],$scope.loyalty=[],$scope.analytics=[],$scope.locations=[],$scope.stores=[],$scope.specificLoc=[],chartService.groupAndFormatDate($scope.selectAccountId),console.log("state params %O",$stateParams),$scope.sources=[],$http.get(constants.API_URL+"/locations?account="+$scope.selectAccountId).then(function(res,err){err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res.data.length>0&&res.data.forEach(function(thisLocation){thisLocation.devices=[],$http.get(constants.API_URL+"/devices/location/"+thisLocation.locationId).then(function(response,err){err&&console.log(err),response.data.length>0&&(response.data.forEach(function(device){var rightNow=moment(),time=moment(device.lastCheck);device.moment=moment(time).fromNow();var timeDiff=time.diff(rightNow,"hours");device.unhealthy=timeDiff<=-3}),thisLocation.devices=response.data||[],$scope.locations.push(thisLocation))})})}),$http.get(constants.API_URL+"/loyalty?account="+$scope.selectAccountId).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res)for(var i in res.data){var contact=JSON.parse(res.data[i].contactInfo);contact.email?$scope.emails.push({email:contact.email}):$scope.phones.push({phone:contact.phone})}});var url=constants.API_URL+"/analytics/top-products?account="+$scope.selectAccountId;$http.get(url).then(function(res,err){if(err&&(console.log(err),toastr.error("We're experiencing some technical difficulties with our database, please check back soon")),res){console.log("analytics topProducts %O",res);for(var i in res.data)"Product-Request"==res.data[i].action&&$scope.analytics.push(res.data[i])}})}}]),angular.module("users.manager").controller("LocationManagerController",function($scope,locationsService,$state,accountsService,CurrentUserService){locationsService.init().then(function(){$scope.locationsService=locationsService,$scope.location={},$scope.accountsService=accountsService,$scope.currentUserService=CurrentUserService}),$scope.editLocation=function(location){locationsService.editLocation=location,console.log("editLocation %O",locationsService.editLocation),$state.go("manager.locations.edit",{id:location.locationId})}}),angular.module("users.manager").controller("ProfileController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","$mdSidenav","constants",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,$mdSidenav,constants){function debounce(func,wait,context){var timer;return function(){var context=$scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer),timer=$timeout(function(){timer=void 0,func.apply(context,args)},wait||10)}}function buildDelayedToggler(navID){return debounce(function(){$mdSidenav(navID).toggle().then(function(){console.log("toggle "+navID+" is done")})},200)}$scope.authentication=Authentication;var self=this;$scope.links=[],$scope.sources=[],$scope.sortingLog=[],$scope.rightArray=[],$scope.leftArray=[],$scope.ads=!1,$scope.activeAds=!1,$scope.storeDevices=!1,$scope.toggleLeft=buildDelayedToggler("left"),$scope.init=function(){$scope.sources=[],$http.get(constants.API_URL+"/store/location/"+$scope.authentication.user.username).then(function(res,err){err&&console.log(err),res&&($scope.list_categories=res,$scope.storeDevices=!0)}),$http.get(constants.API_URL+"/media/"+$scope.authentication.user.username).then(function(response,err){if(err&&console.log(err),response){console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];console.log(ext),ext=ext.toLowerCase(),"jpg"==ext||"png"==ext||"svg"==ext?(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.sources.push(myData)):"mp4"!=ext&&"mov"!=ext&&"m4v"!=ext||(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.sources.push(myData))}}})},$scope.getDevice=function(loc){console.log("HELLO"),$http.get(constants.API_URL+"/devices/location/"+loc).then(function(response,err){err&&console.log(err),response&&(console.log(response),$scope.list_devices=response)})},$scope.getAds=function(deviceId){$scope.currentDevice=deviceId,$scope.leftArray=[],$scope.rightArray=[],$scope.links=[],$http.get(constants.API_URL+"/ads/device/"+deviceId).then(function(response,err){if(err&&console.log(err),response){$scope.ads=!0,console.log(response);for(var i in response.data){var myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName},re=/(?:\.([^.]+))?$/,ext=re.exec(myData.value)[1];console.log(ext),ext=ext.toLowerCase(),console.log(response.data),"jpg"==ext||"png"==ext||"svg"==ext?(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"image",adId:response.data[i].adId},$scope.links.push(myData)):"mp4"!=ext&&"mov"!=ext&&"m4v"!=ext||(myData={value:response.data[i].mediaAssetId+"-"+response.data[i].fileName,ext:"video",adId:response.data[i].adId},$scope.links.push(myData))}}})},$scope.activate=function(){console.log($scope.rightArray);$scope.rightArray},$scope.sortableOptions={connectWith:".connectedItemsExample .list"},$scope.activateAd=function(adId,deviceId){console.log(deviceId),console.log(adId);var asset={payload:{adId:adId,deviceId:deviceId}};$http.post(constants.API_URL+"/ads/",asset).then(function(response,err){err&&console.log(err),response&&$scope.getAds(deviceId)})},$scope.deactivateAd=function(adId,deviceId){$http["delete"](constants.API_URL+"/ads/"+adId).then(function(response,err){err&&console.log(err),response&&$scope.getAds(deviceId)})},$scope.upload=function(file){var obj={payload:{fileName:file[0].name,userName:$scope.authentication.user.username}};$http.post(constants.API_URL+"/media",obj).then(function(response,err){if(err&&console.log(err),response){$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"},AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});console.log(response.data);var params={Key:response.data.assetId+"-"+file[0].name,ContentType:file[0].type,Body:file[0],ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};console.dir(params.Metadata.fileKey),bucket.putObject(params,function(err,data){return $scope.loading=!0,err?(alert(err.message),!1):(console.dir(data),self.determinateValue=0,$scope.init(),void 0)}).on("httpUploadProgress",function(progress){console.log(Math.round(progress.loaded/progress.total*100)+"% done"),self.determinateValue=Math.round(progress.loaded/progress.total*100),$scope.$apply()})}else alert("No File Selected")})},$scope.viewFile=function(file){ImageService.image=file,$scope.creds={bucket:"beta.cdn.expertoncue.com",access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"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"};var params={Key:ImageService.image};AWS.config.update({accessKeyId:$scope.creds.access_key,secretAccessKey:$scope.creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:$scope.creds.bucket}});bucket.getObject(params,function(err,data){if($scope.loading=!0,err)return alert(err.message),!1;var re=/(?:\.([^.]+))?$/,ext=re.exec(ImageService.image)[1];console.log(ext),ext=ext.toLowerCase(),self.imageName=JSON.stringify(ImageService.image),"jpg"==ext||"png"==ext||"svg"==ext?($scope.media="image",$scope.$apply()):"mp4"!=ext&&"mov"!=ext&&"wmv"!=ext||($scope.media="video",$scope.$apply())})}}]),angular.module("users.supplier").filter("trustUrl",["$sce",function($sce){return function(recordingUrl){return $sce.trustAsResourceUrl(recordingUrl)}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator","constants","toastr","authToken","$state",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator,constants,toastr,authToken,$state){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.resetUserPassword=function(isValid){$scope.success=$scope.error=null;var resetObj={payload:{token:$location.search().token,username:$location.search().username,newPass:$scope.passwordDetails.newPassword}};return isValid?(console.log("new pass details %0",resetObj),void $http.post(constants.API_URL+"/users/auth/reset",resetObj).then(function(response,err){err&&toastr.error("Invalid Token. Please contact support at support@getsellr.com");var userLogin={payload:{username:resetObj.payload.username,password:resetObj.payload.newPass}};$http.post(constants.API_URL+"/users/login",userLogin).then(function(response,err){err&&toastr.error("Invalid Token. Please contact support at support@getsellr.com"),authToken.setToken(response.data.token),localStorage.setItem("roles",response.data.roles),localStorage.setItem("accountId",response.data.accountId),localStorage.setItem("roles",response.data.roles),localStorage.setItem("userId",response.data.userId),localStorage.setItem("userObject",JSON.stringify(response.data)),$scope.authentication.user=response.data,$state.go("dashboard",$state.previous.params)})})):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("productEditorController",function($scope,Authentication,$q,$http,productEditorService,$location,$state,$stateParams,Countries,orderDataService,$mdMenu,constants,MediumS3ImageUploader,$filter,mergeService,$rootScope,ProductTypes){Authentication.user=Authentication.user||{roles:""},$scope.$state=$state,$scope.pes=productEditorService,$scope.mergeService=mergeService,$scope.Countries=Countries,$scope.userId=window.localStorage.getItem("userId"),$scope.display={myProducts:!1,feedback:!0,template:""},$scope.allSelected={value:!1},$scope.searchText="",$http.get(constants.BWS_API+"/storedb/stores?supc=true").then(function(res){console.log("allStores %O",res.data),$scope.allStores=res.data}),$scope.permissions={editor:Authentication.user.roles.indexOf(1010)>-1||Authentication.user.roles.indexOf(1004)>-1,curator:Authentication.user.roles.indexOf(1011)>-1||Authentication.user.roles.indexOf(1004)>-1},$scope.mediumEditorOptions={imageDragging:!1,extensions:{"s3-image-uploader":new MediumS3ImageUploader}},$stateParams.productId&&(productEditorService.setCurrentProduct($stateParams),$state.includes("editor.match")?$state.go("editor.match.view",{productId:$stateParams.productId}):$state.go("editor.view",{productId:$stateParams.productId})),$scope.search={},$scope.checkbox={progress:""},$scope.filter=[],$scope.searchLimit=15,$scope.listOptions={},$scope.listOptions.searchLimit=15,$scope.listOptions.orderBy="+name",window.localStorage.getItem("filterByUserId")?$scope.listOptions.filterByUserId=!0:$scope.listOptions.filterByUserId=!1,$scope.listOptions.userId=$scope.userId,$scope.showMore=function(){$scope.listOptions.searchLimit+=15,refreshList()},$scope.isStoreSelected=function(store){var i=_.findIndex($scope.allStores,function(s){return s.id===store.id});return $scope.allStores[i].selected},$scope.toggleSearchStore=function(store){$scope.allStores=$scope.allStores||[];var i=_.findIndex($scope.allStores,function(s){return s.id===store.id});$scope.allStores[i].selected=!$scope.allStores[i].selected},$scope.reOrderList=function(field){switch(field){case"name":$scope.listOptions.orderBy="+n"===$scope.listOptions.orderBy.substr(0,2)?"-name":"+name";break;case"sku":$scope.listOptions.orderBy="+s"===$scope.listOptions.orderBy.substr(0,2)?"-sku_count":"+sku_count";break;case"audio":$scope.listOptions.orderBy="+a"===$scope.listOptions.orderBy.substr(0,2)?"-audio":"+audio";break;case"image":$scope.listOptions.orderBy="+i"===$scope.listOptions.orderBy.substr(0,2)?"-image":"+image";break;case"status":$scope.listOptions.orderBy="+s"===$scope.listOptions.orderBy.substr(0,2)?"-status":"+status";break;case"type":$scope.listOptions.orderBy="+p"===$scope.listOptions.orderBy.substr(0,2)?"-productTypeId":"+productTypeId"}refreshList()},$scope.searchProducts=function(searchText){$scope.allProducts=[],$scope.selected=[],$scope.loadingData=!0;var selectedStores=_.filter($scope.allStores,function(st){return st.selected}),options={status:$scope.checkbox.progress,types:$scope.filter,stores:selectedStores};productEditorService.getProductList(searchText,options).then(function(data){$scope.allProducts=data,refreshList(),$scope.loadingData=!1})};var refreshList=function(){productEditorService.sortAndFilterProductList($scope.listOptions)};$scope.toggleSelected=function(product){$scope.selected=$scope.selected||[];var i=_.findIndex($scope.selected,function(selectedProduct){return selectedProduct.productId===product.productId});i<0?$scope.selected.push(product):$scope.selected.splice(i,1),$state.includes("editor.match")&&orderDataService.storeSelected($scope.selected)},$scope.toggleAll=function(){var sel=$scope.allSelected.value;$scope.selected=[],_.forEach(productEditorService.productList,function(p){sel&&$scope.selected.push(p),p.selected=sel}),$state.includes("editor.match")&&orderDataService.storeSelected($scope.selected)},$scope.viewProduct=function(product){productEditorService.setCurrentProduct(product),$state.includes("editor.match")?$state.go("editor.match.view",{productId:product.productId}):$state.go("editor.view",{productId:product.productId})},$scope.getModalData=function(){productEditorService.getProduct($scope.selected[$scope.selected.length-1]).then(function(response){$scope.modalData=response})},$scope.quickEdit=function(product){var options={userId:$scope.userId,productId:product.productId,status:"inprogress"};productEditorService.claim(options).then(function(){productEditorService.setCurrentProduct(product),$state.includes("editor.match")?$state.go("editor.match.edit",{productId:product.productId}):$state.go("editor.edit",{productId:product.productId})})},$scope.updateFilter=function(value){$scope.checked=!1;for(var i in $scope.filter)$scope.filter[i].type===value.type&&($scope.filter.splice(i,1),$scope.checked=!0);$scope.checked||$scope.filter.push(value)},$scope.submitForApproval=function(product){product.status="done",productEditorService.save(product),$scope.viewProduct(product),$(".modal-backdrop").remove()},$scope.issues=["Problem With Image","Problem With Text","Problem With Audio"],$scope.feedback={issue:"",comments:""},$scope.selectIssue=function(issue){$scope.feedback.issue=issue},$scope.sendBack=function(){var feedback={issue:$scope.feedback.issue,comments:$scope.feedback.comments,date:new Date};productEditorService.updateFeedback(feedback)},$scope.approveSelectedProducts=function(){productEditorService.bulkUpdateStatus($scope.selected,"approved")},$scope.rejectSelectedProducts=function(){productEditorService.bulkUpdateStatus($scope.selected,"inprogress")},$scope.approveProduct=function(product){product.status="approved",productEditorService.save(product)},$scope.save=function(product){product.status="inprogress",productEditorService.save(product)},$scope.updateProduct=function(product){"done"!==product.status&&(product.status="inprogress"),productEditorService.save(product)},$scope.assignSelectedToUser=function(editor){$scope.selected.forEach(function(product){var options={username:editor.displayName||editor.username||editor.email,userId:$scope.userId,productId:product.productId,status:"inprogress"};productEditorService.claim(options)})},$scope.playAudio=function(){productEditorService.currentProduct.audio.play()},$scope.pauseAudio=function(){productEditorService.currentProduct.audio.pause()},$scope.removeAudio=function(){var currentAudio=productEditorService.currentProduct.audio.mediaAssetId;productEditorService.removeAudio(currentAudio)},$scope.seekAudio=function(){productEditorService.currentProduct.audio.currentTime=productEditorService.currentProduct.audio.progress*productEditorService.currentProduct.audio.duration},$scope.removeImage=function(current){productEditorService.removeImage(current)},$(window).bind("keydown",function(event){if(event.ctrlKey||event.metaKey){var prod=productEditorService.currentProduct;switch(String.fromCharCode(event.which).toLowerCase()){case"s":event.preventDefault(),$scope.updateProduct(prod);break;case"d":event.preventDefault(),$scope.submitForApproval(prod)}}}),$scope.productsSelection={},$scope.productsSelection.contains=!1,$scope.mergeProducts=function(){mergeService.merge($scope.selected).then(function(){$state.includes("editor.match")?($state.go("editor.match.merge",$stateParams,{reload:!0}),$scope.selected=[]):$state.go("editor.merge")})},$scope.removeMergedImage=function(i){mergeService.newProduct.images.splice(i,1)},$scope.playMergedAudio=function(i){for(var a=0;a<mergeService.newProduct.audio.length;a++)mergeService.newProduct.audio[a].pause(),mergeService.newProduct.audio[a].currentTime=0,a===i&&mergeService.newProduct.audio[i].play()},$scope.pauseMergedAudio=function(){mergeService.newProduct.audio.forEach(function(a){a.pause()})},$scope.removeMergedAudio=function(i){mergeService.newProduct.audio[i].pause(),mergeService.newProduct.audio.splice(i,1)},$scope.toggleFilterUserId=function(){$scope.listOptions.filterByUserId?window.localStorage.setItem("filterByUserId","true"):window.localStorage.removeItem("filterByUserId"),refreshList()},$scope.createNewProduct=function(){var product=orderDataService.currentItem;productEditorService.createNewProduct(product),$state.go("editor.match.new")},$rootScope.$on("clearProductList",function(){$scope.selected=[],productEditorService.productList.forEach(function(p){p.selected=!1})}),$rootScope.$on("searchdb",function(){console.log("clearing search text"),$state.go("editor.match",$stateParams,{reload:!0})})}),angular.module("users").controller("productEditorDetailController",function($scope,Authentication,productEditorService,$location,$state,$stateParams,type,status){$scope.userId=Authentication.userId||localStorage.getItem("userId"),$scope.permissions={editor:Authentication.user.roles.indexOf("editor")>-1,curator:Authentication.user.roles.indexOf("curator")>-1},console.log("state params %O",type,status),console.log("starting product detail controller"),$scope.productEditorService=productEditorService}),angular.module("users").controller("newProductController",function($scope,productEditorService,orderDataService){$scope.pes=productEditorService,$scope.saveProduct=function(){orderDataService.createNewProduct(productEditorService.newProduct)}}),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user||{profileImageUrl:""},$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users.admin").controller("StoreOwnerOrdersController",["$scope","$http","$state","constants","toastr","$stateParams","SocketAPI","accountsService",function($scope,$http,$state,constants,toastr,$stateParams,SocketAPI,accountsService){function getOrders(){var ordersUrl=API_URL+"/mobile/reservations/store/"+$scope.selectAccountId;$http.get(ordersUrl).then(function(response){loadOrders(response.data),$scope.displayOrders=$scope.todayOrders})}function isTodayButCompleted(order){return moment().isSame(order.pickupTime,"day")&&("Completed"===order.status||"Cancelled"===order.status)}function getFilteredOrders(days){return _.filter($scope.allOrders,function(order){var flag=!0;return flag=moment().isSame(order.pickupTime,"day")&&"Completed"===order.status,flag=flag||moment().isAfter(order.pickupTime,"day"),flag=flag&&moment().startOf("day").subtract(days,"days").isBefore(order.pickupTime),flag=flag&&"Cancelled"!==order.status})}function refreshStats(){$scope.uiStatOrders.count=$scope.uiStatOrders.orders.length,$scope.uiStatOrders.shoppersCount=_.uniq(_.pluck(_.pluck($scope.uiStatOrders.orders,"user"),"_id")).length,$scope.uiStatOrders.salesTotal=_.reduce($scope.uiStatOrders.orders,function(memo,order){return memo+parseFloat(order.total)},0)}function updateOrder(order){var url=constants.API_URL+"/mobile/reservations/"+order._id;$http.put(url,order).then(function(result){"Submitted"===result.data.status&&toastr.warning("Order marked as Submitted"),"Ready for Pickup"===result.data.status&&toastr.info("Order marked as Ready for Pick Up"),"Completed"===result.data.status&&toastr.success("Order Completed"),"Cancelled"===result.data.status&&toastr.warning("Order Cancelled"),loadOrders($scope.allOrders)})}function replaceItem(arr,item){if(_.isEmpty(arr)||_.isEmpty(item))return!1;var index=_.findIndex(arr,{_id:item._id});return!(index<0)&&(arr.splice(index,1,item),!0)}var API_URL=constants.API_URL;$scope.todayOrders=[],$scope.pastOrders=[],$scope.showPastOrders=!1,$scope.uiStatOrders={orders:[],count:0,salesTotal:0,daysScope:7},$scope.statsScopeLabel="Last 7 days",$scope.init=function(){getOrders()},accountsService.bindSelectedAccount($scope),$scope.$watch("selectAccountId",function(){$scope.init()}),SocketAPI=SocketAPI.bindTo($scope),SocketAPI.on("reservation.created",function(order){loadOrders($scope.allOrders.concat(order))}),SocketAPI.on("reservation.updated",function(order){replaceItem($scope.allOrders,order),loadOrders($scope.allOrders)}),$scope.changeDisplayedOrders=function(){$scope.showPastOrders=!$scope.showPastOrders,$scope.showPastOrders?$scope.displayOrders=$scope.pastOrders:$scope.displayOrders=$scope.todayOrders};var loadOrders=function(orders){var reloadToday=$scope.displayOrders===$scope.todayOrders,reloadPast=$scope.displayOrders===$scope.pastOrders;$scope.allOrders=orders,$scope.todayOrders=_.filter(orders,function(order){return moment().isSame(order.pickupTime,"day")&&"Completed"!==order.status&&"Cancelled"!==order.status}),accountsService.ordersCount=$scope.todayOrders.length,$scope.todayOrders=_.sortBy($scope.todayOrders,"status").reverse(),$scope.pastOrders=_.filter(orders,function(order){return moment().isAfter(order.pickupTime,"day")||isTodayButCompleted(order)}),$scope.pastOrders=_.sortBy($scope.pastOrders,"pickupTime").reverse(),$scope.uiStatOrders.orders=getFilteredOrders($scope.uiStatOrders.daysScope),refreshStats(),reloadToday&&($scope.displayOrders=$scope.todayOrders),reloadPast&&($scope.displayOrders=$scope.pastOrders)};$scope.loadOrders=loadOrders,$scope.changeOrderStatsScope=function(days){$scope.uiStatOrders.daysScope=days,$scope.uiStatOrders.orders=getFilteredOrders(days),$scope.statsScopeLabel="Last "+$scope.uiStatOrders.daysScope+" days",refreshStats()},$scope.markOrder=function(order,newStatus){order.status=newStatus,updateOrder(order)}}]),angular.module("users.admin").controller("StoreOwnerInviteController",["$scope","Authentication","$filter","Admin","$http","$state","CurrentUserService","constants","accountsService","toastr",function($scope,Authentication,$filter,Admin,$http,$state,CurrentUserService,constants,accountsService,toastr){function onInviteSuccess(response){toastr.success("User Invited","Invite Success!"),console.dir(response),$state.go($state.previous.state.name||"home",$state.previous.params)}function onInviteError(err){toastr.error("There was a problem inviting this user."),console.error(err)}$scope.CurrentUserService=CurrentUserService,$scope.userview=$state.params,$scope.locations=[],CurrentUserService.locations?$scope.locations=CurrentUserService.locations:$scope.locations=["No Locations"],$scope.addLocs=function(){console.log("helllo, %O",$scope.locations)},$scope.userEditView=function(user){$http.get(constants.API_URL+"/users?email="+user.email).then(function(res,err){err&&console.log(err),res&&(console.log(res),CurrentUserService.userBeingEdited=res.data[0],$state.go("admin.users.user-edit",{userId:user._id}),console.log("currentUserService userBeingEdited %O",CurrentUserService.userBeingEdited))})},$scope.inviteStoreView=function(){$state.go("admin.users.store",{},{reload:!0})},$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")(CurrentUserService.userList,{$:$scope.search}),$scope.newUsers=$scope.filteredItems},$scope.buildPager(),$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()},$scope.removeLocationBox=!1,$scope.addNewLocation=function(locs){var newItemNo=$scope.locations.length+1;$scope.locations.push({id:"location"+newItemNo}),$scope.removeLocationBox=!0},$scope.removeLocation=function(){if($scope.locations.length>1){$scope.locations.length-1;$scope.locations.pop()}1==$scope.locations.length&&($scope.removeLocationBox=!1)},$scope.myPermissions=localStorage.getItem("roles"),$scope.accountsService=accountsService,$scope.authentication=Authentication,console.log("authentication %O",$scope.authentication),$scope.roles=[{text:"admin",id:1004},{text:"owner",id:1009},{text:"manager",id:1002},{text:"supplier",id:1007},{text:"user",id:1003},{text:"editor",id:1010},{text:"curator",id:1011}],$scope.user={accountId:localStorage.getItem("accountId")},$scope.toggleRole=function(roleId){$scope.user.roles=$scope.user.roles||[],$scope.user.roles.indexOf(roleId)>-1?$scope.user.roles.splice($scope.user.roles.indexOf(roleId),1):$scope.user.roles.push(roleId)},console.log("userRoles %O",$scope.user.roles),$scope.invite=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var payload={payload:$scope.user};$http.post(constants.API_URL+"/users",payload).then(onInviteSuccess,onInviteError)}}]),angular.module("users.supplier").controller("MediaController",["$scope","$state","$http","Authentication","$timeout","Upload","$sce","ImageService","constants","toastr","uploadService",function($scope,$state,$http,Authentication,$timeout,Upload,$sce,ImageService,constants,toastr,uploadService){$scope.authentication=Authentication;$scope.files=[],$scope.links=[],$scope.$watch("files",function(){$scope.upload($scope.files)}),$scope.$watch("file",function(){null!=$scope.file&&($scope.files=[$scope.file])}),$scope.upload=function(files){
for(var i=0;i<files.length;i++){var mediaConfig={mediaRoute:"media",type:"SUPPLIER",folder:"supplier",accountId:localStorage.getItem("accountId")};uploadService.upload(files[i],mediaConfig).then(function(response,err){console.log("mediaController::upload response %O",response),response?(toastr.success("New File Uploaded","Success!"),$scope.uploadedFile=response[0],$scope.files=[]):toastr.error("There was a problem uploading ads")})}}}]),angular.module("users").directive("backgroundImage",function(){return function(scope,element,attrs){attrs.$observe("backgroundImage",function(value){element.css({"background-image":"url("+value+")"})})}}),function(){var indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};angular.module("users").directive("countrySelect",function(){var allCountries;return allCountries=[{code:"AF",name:"Afghanistan"},{code:"AL",name:"Albania"},{code:"DZ",name:"Algeria"},{code:"AS",name:"American Samoa"},{code:"AD",name:"Andorre"},{code:"AO",name:"Angola"},{code:"AI",name:"Anguilla"},{code:"AQ",name:"Antarctica"},{code:"AG",name:"Antigua and Barbuda"},{code:"AR",name:"Argentina"},{code:"AM",name:"Armenia"},{code:"AW",name:"Aruba"},{code:"AU",name:"Australia"},{code:"AT",name:"Austria"},{code:"AZ",name:"Azerbaijan"},{code:"BS",name:"Bahamas"},{code:"BH",name:"Bahrain"},{code:"BD",name:"Bangladesh"},{code:"BB",name:"Barbade"},{code:"BY",name:"Belarus"},{code:"BE",name:"Belgium"},{code:"BZ",name:"Belize"},{code:"BJ",name:"Benin"},{code:"BM",name:"Bermuda"},{code:"BT",name:"Bhutan"},{code:"BO",name:"Bolivia"},{code:"BQ",name:"Bonaire, Sint Eustatius and Saba"},{code:"BA",name:"Bosnia and Herzegovina"},{code:"BW",name:"Botswana"},{code:"BV",name:"Bouvet Island"},{code:"BR",name:"Brazil"},{code:"IO",name:"British Indian Ocean Territory"},{code:"VG",name:"British Virgin Islands"},{code:"BN",name:"Brunei"},{code:"BG",name:"Bulgaria"},{code:"BF",name:"Burkina Faso"},{code:"BI",name:"Burundi"},{code:"KH",name:"Cambodia"},{code:"CM",name:"Cameroon"},{code:"CA",name:"Canada"},{code:"CV",name:"Cape Verde"},{code:"KY",name:"Cayman Islands"},{code:"CF",name:"Central African Republic"},{code:"TD",name:"Chad"},{code:"CL",name:"Chile"},{code:"CN",name:"China"},{code:"CX",name:"Christmas Island"},{code:"CC",name:"Cocos (Keeling) Islands"},{code:"CO",name:"Colombia"},{code:"KM",name:"Comoros"},{code:"CG",name:"Congo"},{code:"CD",name:"Congo (Dem. Rep.)"},{code:"CK",name:"Cook Islands"},{code:"CR",name:"Costa Rica"},{code:"ME",name:"Crna Gora"},{code:"HR",name:"Croatia"},{code:"CU",name:"Cuba"},{code:"CW",name:"Curaçao"},{code:"CY",name:"Cyprus"},{code:"CZ",name:"Czech Republic"},{code:"CI",name:"Côte D'Ivoire"},{code:"DK",name:"Denmark"},{code:"DJ",name:"Djibouti"},{code:"DM",name:"Dominica"},{code:"DO",name:"Dominican Republic"},{code:"TL",name:"East Timor"},{code:"EC",name:"Ecuador"},{code:"EG",name:"Egypt"},{code:"SV",name:"El Salvador"},{code:"GQ",name:"Equatorial Guinea"},{code:"ER",name:"Eritrea"},{code:"EE",name:"Estonia"},{code:"ET",name:"Ethiopia"},{code:"FK",name:"Falkland Islands"},{code:"FO",name:"Faroe Islands"},{code:"FJ",name:"Fiji"},{code:"FI",name:"Finland"},{code:"FR",name:"France"},{code:"GF",name:"French Guiana"},{code:"PF",name:"French Polynesia"},{code:"TF",name:"French Southern Territories"},{code:"GA",name:"Gabon"},{code:"GM",name:"Gambia"},{code:"GE",name:"Georgia"},{code:"DE",name:"Germany"},{code:"GH",name:"Ghana"},{code:"GI",name:"Gibraltar"},{code:"GR",name:"Greece"},{code:"GL",name:"Greenland"},{code:"GD",name:"Grenada"},{code:"GP",name:"Guadeloupe"},{code:"GU",name:"Guam"},{code:"GT",name:"Guatemala"},{code:"GG",name:"Guernsey and Alderney"},{code:"GN",name:"Guinea"},{code:"GW",name:"Guinea-Bissau"},{code:"GY",name:"Guyana"},{code:"HT",name:"Haiti"},{code:"HM",name:"Heard and McDonald Islands"},{code:"HN",name:"Honduras"},{code:"HK",name:"Hong Kong"},{code:"HU",name:"Hungary"},{code:"IS",name:"Iceland"},{code:"IN",name:"India"},{code:"ID",name:"Indonesia"},{code:"IR",name:"Iran"},{code:"IQ",name:"Iraq"},{code:"IE",name:"Ireland"},{code:"IM",name:"Isle of Man"},{code:"IL",name:"Israel"},{code:"IT",name:"Italy"},{code:"JM",name:"Jamaica"},{code:"JP",name:"Japan"},{code:"JE",name:"Jersey"},{code:"JO",name:"Jordan"},{code:"KZ",name:"Kazakhstan"},{code:"KE",name:"Kenya"},{code:"KI",name:"Kiribati"},{code:"KP",name:"Korea (North)"},{code:"KR",name:"Korea (South)"},{code:"KW",name:"Kuwait"},{code:"KG",name:"Kyrgyzstan"},{code:"LA",name:"Laos"},{code:"LV",name:"Latvia"},{code:"LB",name:"Lebanon"},{code:"LS",name:"Lesotho"},{code:"LR",name:"Liberia"},{code:"LY",name:"Libya"},{code:"LI",name:"Liechtenstein"},{code:"LT",name:"Lithuania"},{code:"LU",name:"Luxembourg"},{code:"MO",name:"Macao"},{code:"MK",name:"Macedonia"},{code:"MG",name:"Madagascar"},{code:"MW",name:"Malawi"},{code:"MY",name:"Malaysia"},{code:"MV",name:"Maldives"},{code:"ML",name:"Mali"},{code:"MT",name:"Malta"},{code:"MH",name:"Marshall Islands"},{code:"MQ",name:"Martinique"},{code:"MR",name:"Mauritania"},{code:"MU",name:"Mauritius"},{code:"YT",name:"Mayotte"},{code:"MX",name:"Mexico"},{code:"FM",name:"Micronesia"},{code:"MD",name:"Moldova"},{code:"MC",name:"Monaco"},{code:"MN",name:"Mongolia"},{code:"MS",name:"Montserrat"},{code:"MA",name:"Morocco"},{code:"MZ",name:"Mozambique"},{code:"MM",name:"Myanmar"},{code:"NA",name:"Namibia"},{code:"NR",name:"Nauru"},{code:"NP",name:"Nepal"},{code:"NL",name:"Netherlands"},{code:"AN",name:"Netherlands Antilles"},{code:"NC",name:"New Caledonia"},{code:"NZ",name:"New Zealand"},{code:"NI",name:"Nicaragua"},{code:"NE",name:"Niger"},{code:"NG",name:"Nigeria"},{code:"NU",name:"Niue"},{code:"NF",name:"Norfolk Island"},{code:"MP",name:"Northern Mariana Islands"},{code:"NO",name:"Norway"},{code:"OM",name:"Oman"},{code:"PK",name:"Pakistan"},{code:"PW",name:"Palau"},{code:"PS",name:"Palestine"},{code:"PA",name:"Panama"},{code:"PG",name:"Papua New Guinea"},{code:"PY",name:"Paraguay"},{code:"PE",name:"Peru"},{code:"PH",name:"Philippines"},{code:"PN",name:"Pitcairn"},{code:"PL",name:"Poland"},{code:"PT",name:"Portugal"},{code:"PR",name:"Puerto Rico"},{code:"QA",name:"Qatar"},{code:"RO",name:"Romania"},{code:"RU",name:"Russia"},{code:"RW",name:"Rwanda"},{code:"RE",name:"Réunion"},{code:"BL",name:"Saint Barthélemy"},{code:"SH",name:"Saint Helena"},{code:"KN",name:"Saint Kitts and Nevis"},{code:"LC",name:"Saint Lucia"},{code:"MF",name:"Saint Martin"},{code:"PM",name:"Saint Pierre and Miquelon"},{code:"VC",name:"Saint Vincent and the Grenadines"},{code:"WS",name:"Samoa"},{code:"SM",name:"San Marino"},{code:"SA",name:"Saudi Arabia"},{code:"SN",name:"Senegal"},{code:"RS",name:"Serbia"},{code:"SC",name:"Seychelles"},{code:"SL",name:"Sierra Leone"},{code:"SG",name:"Singapore"},{code:"SX",name:"Sint Maarten"},{code:"SK",name:"Slovakia"},{code:"SI",name:"Slovenia"},{code:"SB",name:"Solomon Islands"},{code:"SO",name:"Somalia"},{code:"ZA",name:"South Africa"},{code:"GS",name:"South Georgia and the South Sandwich Islands"},{code:"SS",name:"South Sudan"},{code:"ES",name:"Spain"},{code:"LK",name:"Sri Lanka"},{code:"SD",name:"Sudan"},{code:"SR",name:"Suriname"},{code:"SJ",name:"Svalbard and Jan Mayen"},{code:"SZ",name:"Swaziland"},{code:"SE",name:"Sweden"},{code:"CH",name:"Switzerland"},{code:"SY",name:"Syria"},{code:"ST",name:"São Tomé and Príncipe"},{code:"TW",name:"Taiwan"},{code:"TJ",name:"Tajikistan"},{code:"TZ",name:"Tanzania"},{code:"TH",name:"Thailand"},{code:"TG",name:"Togo"},{code:"TK",name:"Tokelau"},{code:"TO",name:"Tonga"},{code:"TT",name:"Trinidad and Tobago"},{code:"TN",name:"Tunisia"},{code:"TR",name:"Turkey"},{code:"TM",name:"Turkmenistan"},{code:"TC",name:"Turks and Caicos Islands"},{code:"TV",name:"Tuvalu"},{code:"UG",name:"Uganda"},{code:"UA",name:"Ukraine"},{code:"AE",name:"United Arab Emirates"},{code:"GB",name:"United Kingdom"},{code:"UM",name:"United States Minor Outlying Islands"},{code:"US",name:"United States of America"},{code:"UY",name:"Uruguay"},{code:"UZ",name:"Uzbekistan"},{code:"VU",name:"Vanuatu"},{code:"VA",name:"Vatican City"},{code:"VE",name:"Venezuela"},{code:"VN",name:"Vietnam"},{code:"VI",name:"Virgin Islands of the United States"},{code:"WF",name:"Wallis and Futuna"},{code:"EH",name:"Western Sahara"},{code:"YE",name:"Yemen"},{code:"ZM",name:"Zambia"},{code:"ZW",name:"Zimbabwe"},{code:"AX",name:"Åland Islands"}],{restrict:"AE",replace:!0,scope:{priorities:"@csPriorities",only:"@csOnly",except:"@csExcept"},template:'<select ng-options="country.name as country.name for country in countries"> <option value="" ng-if="isSelectionOptional"></option> </select>',controller:["$scope","$attrs",function($scope,$attrs){var countryCodesIn,findCountriesIn,includeOnlyRequestedCountries,removeCountry,removeExcludedCountries,separator,updateWithPriorityCountries;return separator={code:"-",name:"────────────────────",disabled:!0},countryCodesIn=function(codesString){var codes;return codes=codesString?codesString.split(","):[],codes.map(function(code){return code.trim()})},findCountriesIn=function(_this){return function(codesString){var country,countryCodes,i,len,ref,ref1,results;for(countryCodes=countryCodesIn(codesString),ref=_this.countries,results=[],i=0,len=ref.length;i<len;i++)country=ref[i],ref1=country.code,indexOf.call(countryCodes,ref1)>=0&&results.push(country);return results}}(this),removeCountry=function(_this){return function(country){return _this.countries.splice(_this.countries.indexOf(country),1)}}(this),includeOnlyRequestedCountries=function(_this){return function(){if($scope.only)return _this.countries=findCountriesIn($scope.only)}}(this),removeExcludedCountries=function(){var country,i,len,ref,results;if($scope.except){for(ref=findCountriesIn($scope.except),results=[],i=0,len=ref.length;i<len;i++)country=ref[i],results.push(removeCountry(country));return results}},updateWithPriorityCountries=function(_this){return function(){var i,len,priorityCountries,priorityCountry,ref,results;if(priorityCountries=findCountriesIn($scope.priorities),0!==priorityCountries.length){for(_this.countries.unshift(separator),ref=priorityCountries.reverse(),results=[],i=0,len=ref.length;i<len;i++)priorityCountry=ref[i],removeCountry(priorityCountry),results.push(_this.countries.unshift(priorityCountry));return results}}}(this),this.countries=allCountries.slice(),includeOnlyRequestedCountries(),removeExcludedCountries(),updateWithPriorityCountries(),$scope.countries=this.countries,$scope.isSelectionOptional=void 0===$attrs.csRequired}]}})}.call(this),angular.module("users").directive("mediumInsert",function($location,$timeout){var IFRAMELY_API_KEY="2d78c263b01d3413bf50d3";return{require:"ngModel",restrict:"A",link:function(scope,iElement,iAttrs,ngModel){function withoutLinksInHierarchy(element){var $e=$(element);return!$e.is("a")&&0==$e.closest("a").length&&0==$e.find("a").length}var $mediumInsertCompatible=iElement.filter(withoutLinksInHierarchy);if(0!=$mediumInsertCompatible.length){var embedproxy_url=$location.protocol()+"://iframe.ly/api/oembed?iframe=1&api_key="+IFRAMELY_API_KEY;iElement.not($mediumInsertCompatible).data("plugin_mediumInsert",{disable:$.noop}),ngModel.$parsers.push(function(html){var $tmp=$("<div>").html(html||"");return $tmp.find(".medium-insert-buttons").remove(),$tmp.find(".image.uploading").remove(),$tmp.find(".image > img").unwrap(),$tmp.find(".medium-insert-active").removeClass("medium-insert-active"),$tmp.html()}),$timeout(function(){$mediumInsertCompatible.mediumInsert({editor:ngModel.editor,addons:{embeds:{placeholder:"Paste a link and press Enter",oembedProxy:embedproxy_url}}})})}}}}),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").filter("stringToClass",function(){return function(input){return"string"!=typeof input?"":input.trim().toLowerCase().replace(/\s/g,"-")}}),angular.module("users").filter("hour",function(){return function(momentDate){return moment(momentDate).format("h")}}).filter("time",function(){return function(momentDate){return moment(momentDate).format("A")}}).filter("customDate",function(){return function(momentDate){return moment(momentDate).format("MMMM D, YYYY h:mm A")}}),angular.module("users").service("accountsService",function($http,constants,toastr,intercomService,$rootScope){function getAccounts(){function onGetAccountSuccess(res){me.accounts=[],res.data.forEach(function(account){"undefined"!==account.preferences&&(account.logo=JSON.parse(account.preferences).s3url||JSON.parse(account.preferences).logo,account.storeImg=JSON.parse(account.preferences).storeImg,account.shoppr=Boolean(JSON.parse(account.preferences).shoppr)),account.accountId===me.selectAccountId&&(me.currentAccount=account,intercomService.intercomActivation(),console.log("setting current account %O",me.currentAccount))}),me.accounts=res.data}function onGetAccountError(err){toastr.error("We're experiencing some technical difficulties with our database, please check back soon"),console.error(err)}me.accounts=[],console.log("selectAccountId %O",me.selectAccountId),$http.get(constants.API_URL+"/accounts?status=1").then(onGetAccountSuccess,onGetAccountError)}function bindRootProperty($scope,name,context){$scope.$watch("$root."+name,function(value){(context||$scope)[name]=value}),$scope.$watch(function(){return(context||$scope)[name]},function(value){$scope.$root[name]=value})}var me=this;return me.init=function(){me.selectAccountId=localStorage.getItem("accountId"),me.accounts=[],me.editAccount={},me.currentAccount={},me.ordersCount=0,bindRootProperty($rootScope,"selectAccountId",me),getAccounts()},me.init(),me.deleteAccount=function(account){function onCreateAccountSuccess(res){toastr.success("Account Deactivated!"),console.log("accounts Service, createAccount %O",res),getAccounts()}function onCreateAccountError(err){toastr.error("There was a problem deactivating this account"),console.error(err)}var url=constants.API_URL+"/accounts/deactivate/"+account;$http.put(url).then(onCreateAccountSuccess,onCreateAccountError)},me.createAccount=function(account){function onCreateAccountSuccess(res){toastr.success("New Account Created!"),console.log("accounts Service, createAccount %O",res),getAccounts()}function onCreateAccountError(err){toastr.error("There was a problem creating this account"),console.error(err)}var url=constants.API_URL+"/accounts";account.status=1;var payload={payload:account};$http.post(url,payload).then(onCreateAccountSuccess,onCreateAccountError)},me.updateAccount=function(){function onUpdateSuccess(res){console.log("updated account response %O",res),toastr.success("Account Updated!")}function onUpdateError(err){console.error("Error updating account %O",err),toastr.error("There was a problem updating this account")}me.editAccount.preferences={logo:me.editAccount.logo,storeImg:me.editAccount.storeImg,style:me.editAccount.style,shoppr:me.editAccount.shoppr};var payload={payload:me.editAccount};console.log("about to update %O",me.editAccount);var url=constants.API_URL+"/accounts/"+me.editAccount.accountId;console.log("putting to "+url),$http.put(url,payload).then(onUpdateSuccess,onUpdateError)},me.generateAuthCode=function(authCode){var url=constants.API_URL+"/accounts/auth",payload={payload:{accountId:me.editAccount.accountId,authCode:authCode}};console.log("authCode Payload %O",payload),$http.post(url,payload).then(function(res,err){err?console.error(err):me.editAccount.authCode=res.data.authCode})},me.bindSelectedAccount=function(scope){bindRootProperty(scope,"selectAccountId")},$rootScope.$watch(function(){return me.selectAccountId},function(accountId){me.currentAccount=_.find(me.accounts,{accountId:parseInt(accountId,10)})}),me}),angular.module("users.supplier").factory("ImageService",[function(){var me=this;return me.image="",me}]),angular.module("users").factory("Authentication",["$window",function(){var auth={user:JSON.parse(localStorage.getItem("userObject"))};return auth}]),angular.module("core").service("chartService",function($http,$q,constants){function getChartData(accountId){me.data=[[0],[0]],me.labels=[],accountId=accountId||localStorage.getItem("accountId");var defer=$q.defer(),results={sku:[],page:[]};return $http.get(constants.API_URL+"/analytics?category=sku&account="+accountId).then(function(res){me.skuData=res.data,console.log("skus by account %O",res),results.sku=res.data.reverse(),$http.get(constants.API_URL+"/analytics?category=pageview&account="+accountId).then(function(pageViewRes){me.pageData=pageViewRes.data,results.page=pageViewRes.data.reverse(),defer.resolve(results)})}),defer.promise}function groupAndFormatDate(accountId){getChartData(accountId).then(function(results){results.sku.forEach(function(analytic){var message=analytic.analyticsId+" ",date=moment(analytic.createdDate.split("T")[0]).format("MMM DD"),i=me.labels.indexOf(date);i<0&&(me.labels.push(date),i=me.labels.indexOf(date),message+="added new label "),me.data[0][i]?(me.data[0][i]++,message+="incremented data point "):(me.data[0][i]=1,message+="added new data point ")}),results.page.forEach(function(analytic){var message="page: "+analytic.analyticsId,date=moment(analytic.createdDate.split("T")[0]).format("MMM DD"),i=me.labels.indexOf(date);i<0&&(me.labels.push(date),i=me.labels.indexOf(date)),me.data[1][i]?(me.data[1][i]++,message+="incremented data point "):(me.data[1][i]=1,message+="added new data point ")});for(var i=0;i<me.labels.length;i++)me.data[0][i]||(me.data[0][i]=0),me.data[1][i]||(me.data[1][i]=0)})}var me=this;return me.groupAndFormatDate=groupAndFormatDate,me.data=[[0],[0]],me.labels=[],me.series=["Sku Scans","Page Views"],me.colors=[{fillColor:"#B4B7B9",strokeColor:"#B4B7B9",pointColor:"#B4B7B9",pointStrokeColor:"#B4B7B9",pointHighlightFill:"#B4B7B9",pointHighlightStroke:"#B4B7B9"},{fillColor:"#3299BB",strokeColor:"#3299BB",pointColor:"#3299BB",pointStrokeColor:"#3299BB",pointHighlightFill:"#3299BB",pointHighlightStroke:"#3299BB"}],groupAndFormatDate(),me}),angular.module("core").service("constants",function(envService){var me=this;return me.API_URL=envService.read("API_URL"),me.BWS_API=envService.read("BWS_API"),me.env=envService.read("env"),me.ADS_URL="http://s3.amazonaws.com/cdn.expertoncue.com/",console.log("constants %O",me),me}),angular.module("users").service("Countries",function(){var me=this;return me.allCountries=[{code:"AF",name:"Afghanistan"},{code:"AL",name:"Albania"},{code:"DZ",name:"Algeria"},{code:"AS",name:"American Samoa"},{code:"AD",name:"Andorre"},{code:"AO",name:"Angola"},{code:"AI",name:"Anguilla"},{code:"AQ",name:"Antarctica"},{code:"AG",name:"Antigua and Barbuda"},{code:"AR",name:"Argentina"},{code:"AM",name:"Armenia"},{code:"AW",name:"Aruba"},{code:"AU",name:"Australia"},{code:"AT",name:"Austria"},{code:"AZ",name:"Azerbaijan"},{code:"BS",name:"Bahamas"},{code:"BH",name:"Bahrain"},{code:"BD",name:"Bangladesh"},{code:"BB",name:"Barbade"},{code:"BY",name:"Belarus"},{code:"BE",name:"Belgium"},{code:"BZ",name:"Belize"},{code:"BJ",name:"Benin"},{code:"BM",name:"Bermuda"},{code:"BT",name:"Bhutan"},{code:"BO",name:"Bolivia"},{code:"BQ",name:"Bonaire, Sint Eustatius and Saba"},{code:"BA",name:"Bosnia and Herzegovina"},{code:"BW",name:"Botswana"},{code:"BV",name:"Bouvet Island"},{code:"BR",name:"Brazil"},{code:"IO",name:"British Indian Ocean Territory"},{code:"VG",name:"British Virgin Islands"},{code:"BN",name:"Brunei"},{code:"BG",name:"Bulgaria"},{code:"BF",name:"Burkina Faso"},{code:"BI",name:"Burundi"},{code:"KH",name:"Cambodia"},{code:"CM",name:"Cameroon"},{code:"CA",name:"Canada"},{code:"CV",name:"Cape Verde"},{code:"KY",name:"Cayman Islands"},{code:"CF",name:"Central African Republic"},{code:"TD",name:"Chad"},{code:"CL",name:"Chile"},{code:"CN",name:"China"},{code:"CX",name:"Christmas Island"},{code:"CC",name:"Cocos (Keeling) Islands"},{code:"CO",name:"Colombia"},{code:"KM",name:"Comoros"},{code:"CG",name:"Congo"},{code:"CD",name:"Congo (Dem. Rep.)"},{code:"CK",name:"Cook Islands"},{code:"CR",name:"Costa Rica"},{code:"ME",name:"Crna Gora"},{code:"HR",name:"Croatia"},{code:"CU",name:"Cuba"},{code:"CW",name:"Curaçao"},{code:"CY",name:"Cyprus"},{code:"CZ",name:"Czech Republic"},{code:"CI",name:"Côte D'Ivoire"},{code:"DK",name:"Denmark"},{code:"DJ",name:"Djibouti"},{code:"DM",name:"Dominica"},{code:"DO",name:"Dominican Republic"},{code:"TL",name:"East Timor"},{code:"EC",name:"Ecuador"},{code:"EG",name:"Egypt"},{code:"SV",name:"El Salvador"},{code:"GQ",name:"Equatorial Guinea"},{code:"ER",name:"Eritrea"},{code:"EE",name:"Estonia"},{code:"ET",name:"Ethiopia"},{code:"FK",name:"Falkland Islands"},{code:"FO",name:"Faroe Islands"},{code:"FJ",name:"Fiji"},{code:"FI",name:"Finland"},{code:"FR",name:"France"},{code:"GF",name:"French Guiana"},{code:"PF",name:"French Polynesia"},{code:"TF",name:"French Southern Territories"},{code:"GA",name:"Gabon"},{code:"GM",name:"Gambia"},{code:"GE",name:"Georgia"},{code:"DE",name:"Germany"},{code:"GH",name:"Ghana"},{code:"GI",name:"Gibraltar"},{code:"GR",name:"Greece"},{code:"GL",name:"Greenland"},{code:"GD",name:"Grenada"},{code:"GP",name:"Guadeloupe"},{code:"GU",name:"Guam"},{code:"GT",name:"Guatemala"},{code:"GG",name:"Guernsey and Alderney"},{code:"GN",name:"Guinea"},{code:"GW",name:"Guinea-Bissau"},{code:"GY",name:"Guyana"},{code:"HT",name:"Haiti"},{code:"HM",name:"Heard and McDonald Islands"},{code:"HN",name:"Honduras"},{code:"HK",name:"Hong Kong"},{code:"HU",name:"Hungary"},{code:"IS",name:"Iceland"},{code:"IN",name:"India"},{code:"ID",name:"Indonesia"},{code:"IR",name:"Iran"},{code:"IQ",name:"Iraq"},{code:"IE",name:"Ireland"},{code:"IM",name:"Isle of Man"},{code:"IL",name:"Israel"},{code:"IT",name:"Italy"},{code:"JM",name:"Jamaica"},{code:"JP",name:"Japan"},{code:"JE",name:"Jersey"},{code:"JO",name:"Jordan"},{code:"KZ",name:"Kazakhstan"},{code:"KE",name:"Kenya"},{code:"KI",name:"Kiribati"},{code:"KP",name:"Korea (North)"},{code:"KR",name:"Korea (South)"},{code:"KW",name:"Kuwait"},{code:"KG",name:"Kyrgyzstan"},{code:"LA",name:"Laos"},{code:"LV",name:"Latvia"},{code:"LB",name:"Lebanon"},{code:"LS",name:"Lesotho"},{code:"LR",name:"Liberia"},{code:"LY",name:"Libya"},{code:"LI",name:"Liechtenstein"},{code:"LT",name:"Lithuania"},{code:"LU",name:"Luxembourg"},{code:"MO",name:"Macao"},{code:"MK",name:"Macedonia"},{code:"MG",name:"Madagascar"},{code:"MW",name:"Malawi"},{code:"MY",name:"Malaysia"},{code:"MV",name:"Maldives"},{code:"ML",name:"Mali"},{code:"MT",name:"Malta"},{code:"MH",name:"Marshall Islands"},{code:"MQ",name:"Martinique"},{code:"MR",name:"Mauritania"},{code:"MU",name:"Mauritius"},{code:"YT",name:"Mayotte"},{code:"MX",name:"Mexico"},{code:"FM",name:"Micronesia"},{code:"MD",name:"Moldova"},{code:"MC",name:"Monaco"},{code:"MN",name:"Mongolia"},{code:"MS",name:"Montserrat"},{code:"MA",name:"Morocco"},{code:"MZ",name:"Mozambique"},{code:"MM",name:"Myanmar"},{code:"NA",name:"Namibia"},{code:"NR",name:"Nauru"},{code:"NP",name:"Nepal"},{code:"NL",name:"Netherlands"},{code:"AN",name:"Netherlands Antilles"},{code:"NC",name:"New Caledonia"},{code:"NZ",name:"New Zealand"},{code:"NI",name:"Nicaragua"},{code:"NE",name:"Niger"},{code:"NG",name:"Nigeria"},{code:"NU",name:"Niue"},{code:"NF",name:"Norfolk Island"},{code:"MP",name:"Northern Mariana Islands"},{code:"NO",name:"Norway"},{code:"OM",name:"Oman"},{code:"PK",name:"Pakistan"},{code:"PW",name:"Palau"},{code:"PS",name:"Palestine"},{code:"PA",name:"Panama"},{code:"PG",name:"Papua New Guinea"},{code:"PY",name:"Paraguay"},{code:"PE",name:"Peru"},{code:"PH",name:"Philippines"},{code:"PN",name:"Pitcairn"},{code:"PL",name:"Poland"},{code:"PT",name:"Portugal"},{code:"PR",name:"Puerto Rico"},{code:"QA",name:"Qatar"},{code:"RO",name:"Romania"},{code:"RU",name:"Russia"},{code:"RW",name:"Rwanda"},{code:"RE",name:"Réunion"},{code:"BL",name:"Saint Barthélemy"},{code:"SH",name:"Saint Helena"},{code:"KN",name:"Saint Kitts and Nevis"},{code:"LC",name:"Saint Lucia"},{code:"MF",name:"Saint Martin"},{code:"PM",name:"Saint Pierre and Miquelon"},{code:"VC",name:"Saint Vincent and the Grenadines"},{code:"WS",name:"Samoa"},{code:"SM",name:"San Marino"},{code:"SA",name:"Saudi Arabia"},{code:"SN",name:"Senegal"},{code:"RS",name:"Serbia"},{code:"SC",name:"Seychelles"},{code:"SL",name:"Sierra Leone"},{code:"SG",name:"Singapore"},{code:"SX",name:"Sint Maarten"},{code:"SK",name:"Slovakia"},{code:"SI",name:"Slovenia"},{code:"SB",name:"Solomon Islands"},{code:"SO",name:"Somalia"},{code:"ZA",name:"South Africa"},{code:"GS",name:"South Georgia and the South Sandwich Islands"},{code:"SS",name:"South Sudan"},{code:"ES",name:"Spain"},{code:"LK",name:"Sri Lanka"},{code:"SD",name:"Sudan"},{code:"SR",name:"Suriname"},{code:"SJ",name:"Svalbard and Jan Mayen"},{code:"SZ",name:"Swaziland"},{code:"SE",name:"Sweden"},{code:"CH",name:"Switzerland"},{code:"SY",name:"Syria"},{code:"ST",name:"São Tomé and Príncipe"},{code:"TW",name:"Taiwan"},{code:"TJ",name:"Tajikistan"},{code:"TZ",name:"Tanzania"},{code:"TH",name:"Thailand"},{code:"TG",name:"Togo"},{code:"TK",name:"Tokelau"},{code:"TO",name:"Tonga"},{code:"TT",name:"Trinidad and Tobago"},{code:"TN",name:"Tunisia"},{code:"TR",name:"Turkey"},{code:"TM",name:"Turkmenistan"},{code:"TC",name:"Turks and Caicos Islands"},{code:"TV",name:"Tuvalu"},{code:"UG",name:"Uganda"},{code:"UA",name:"Ukraine"},{code:"AE",name:"United Arab Emirates"},{code:"GB",name:"United Kingdom"},{code:"UM",name:"United States Minor Outlying Islands"},{code:"US",name:"United States"},{code:"UY",name:"Uruguay"},{code:"UZ",name:"Uzbekistan"},{code:"VU",name:"Vanuatu"},{code:"VA",name:"Vatican City"},{code:"VE",name:"Venezuela"},{code:"VN",name:"Vietnam"},{code:"VI",name:"Virgin Islands of the United States"},{code:"WF",name:"Wallis and Futuna"},{code:"EH",name:"Western Sahara"},{code:"YE",name:"Yemen"},{code:"ZM",name:"Zambia"},{code:"ZW",name:"Zimbabwe"},{code:"AX",name:"Åland Islands"}],me}),angular.module("users").service("csvStoreMapper",function(ProductTypes){function extractMappings(columns){var mappings={};return _.each(columns,function(col){col.mapping!=self.EMPTY_FIELD_NAME&&(mappings[col.name]=col.mapping)}),mappings}function autoResolveMappings(obj){if(!obj)return null;var keys=_.keys(obj),mapping={};return _.each(self.STORE_FIELDS,function(field){var mappedKey=_.find(keys,function(k){return k.toUpperCase()==field.toUpperCase()});mappedKey&&(mapping[field]=mappedKey)}),mapping}function mapStoreDto(obj,mapping){var result={};return _.each(mapping,function(field,from){result[field]=obj[mapping[from]]}),result.type&&(result.type=mapProductTypeId(result.type)),result}function mapProductTypeId(value){value=(value+"").toUpperCase();var productType=_.find(ProductTypes,function(type){return value==type.name[0].toUpperCase()||value==type.name.toUpperCase()||value==type.productTypeId});return productType&&productType.productTypeId}var self=this;this.EMPTY_FIELD_NAME="-",this.STORE_FIELDS=["name","type","upc","description"],this.mapProducts=function(items,columns){var mapping=columns?extractMappings(columns):autoResolveMappings(items[0]);if(_.isEmpty(mapping))return[];var result=_.map(items,function(store){return mapStoreDto(store,mapping)});return result}}),angular.module("users").service("CurrentUserService",["Admin","$state",function(Admin,$state){var me=this;return me.user="",me.locations="",me.currentUserRoles=[],me.userBeingEdited={},me.myPermissions=localStorage.getItem("roles"),Admin.query().then(function(data,err){me.userList=data,console.log("admin returned %O",data)}),me.update=function(){Admin.query(function(data){me.userList=data,window.location.reload(),console.log("admin returned %O",data)})},me}]),angular.module("users").service("intercomService",function($http,constants,toastr,Authentication,$q){var me=this;return me.intercomActivation=function(){console.log("intercom service called!"),window.Intercom("boot",{app_id:"ugnow3fn",name:Authentication.user.displayName,email:Authentication.user.email,created_at:Authentication.user.created,widget:{activator:"#IntercomDefaultWidget"}})},me}),angular.module("users").service("locationsService",function($http,constants,toastr,$q){function onCreateLocationSuccess(res){200==res.status&&toastr.success("New Location Created","Success!")}function onCreateLocationFail(err){console.error(err),toastr.error("Could not create new location.")}function onUpdateLocationSuccess(res){200==res.statusCode&&toastr.success("Location Updated","Success!")}function onUpdateLocationFail(err){console.error(err),toastr.error("Could not update location.")}function onDeleteSuccess(res){200==res.statusCode&&toastr.success("Location deleted","Success!")}function onDeleteFail(err){console.error(err),toastr.error("Could not delete location.")}var me=this;return me.init=function(){var defer=$q.defer();return me.locations=[],me.accountId=localStorage.getItem("accountId"),me.editLocation={},me.getLocations(),defer.resolve(),defer.promise},me.createLocation=function(location){console.log("location service location object %O",location);var url=constants.API_URL+"/locations";location.accountId=localStorage.getItem("accountId"),location.defaultLoc=0;var payload={payload:location};$http.post(url,payload).then(onCreateLocationSuccess,onCreateLocationFail)},me.getLocations=function(){me.locations=[];var url=constants.API_URL+"/locations?account="+me.accountId;return $http.get(url).then(function(res){console.log("locationsService getLocations %O",res),me.locations=res.data})},me.updateLocation=function(){var url=constants.API_URL+"/locations/"+me.editLocation.locationId,payload={payload:me.editLocation};$http.put(url,payload).then(onUpdateLocationSuccess,onUpdateLocationFail,getLocations)},me.deleteLocation=function(location){var url=constants.API_URL+"/locations/"+location.locationId;return location.name.includes("default_")?void toastr.error("Cannot delete the default location!","I'm afraid I can't do that."):void $http["delete"](url).then(onDeleteSuccess,onDeleteFail)},me}),function(){function url(addr){return"string"!=typeof addr?addr:(addr.trim().match(/^(http|#|\/)/)||(addr="http://"+addr),addr)}var _createLink=MediumEditor.util.createLink;MediumEditor.util.createLink=function(document,textNodes,href,target){var anchor=_createLink.apply(this,arguments);return anchor.setAttribute("href","#"),anchor.setAttribute("onclick","window.open('"+url(href)+"', '_system', 'location=yes'); return false;"),anchor};var _createLinkPro=MediumEditor.prototype.createLink;MediumEditor.prototype.createLink=function(opts){var result=_createLinkPro.apply(this,arguments),$sel=$(MediumEditor.selection.getSelectedElements(document)),$a=$sel.is("a")?$sel:$sel.find("a");
if($a.length){var href=url($a.attr("href"));$a.attr("onclick","window.open('"+href+"', '_system', 'location=yes'); return false;"),$a.attr("href","#"),this.events.enableCustomEvent("editableInput")}return result}}(),angular.module("users").factory("MediumS3ImageUploader",["$window","uploadService","toastr",function($window,uploadService,toastr){var isContentEmpty=function(element){var $element=$(element);return 0==$element.length||""==$element.text().trim()&&0==$element.find("img").length},handleGlobalDragAndDrop=function(callback){window.addEventListener("dragover",function(e){e=e||event,e.preventDefault()},!1),window.addEventListener("drop",function(e){e=e||event,e.preventDefault();var handled=(callback||$.noop)(event);handled&&e.stopPropagation()},!1)};return $window.MediumEditor.Extension.extend({name:"image-dropping-to-s3",init:function(){this.subscribe("editableDrag",this.handleDrag.bind(this)),this.subscribe("editableDrop",this.handleDrop.bind(this)),handleGlobalDragAndDrop(function(event){var editor=$(this.base.getFocusedElement()).closest(".editable");if(editor.length)return this.handleDrop(event,editor),!0}.bind(this));var self=this,pluginName="mediumInsert",oldImagesFn=$.fn[pluginName+"Images"];$.fn[pluginName+"Images"]=function(options){return oldImagesFn.apply(this,arguments),this.each(function(){var plugin=$(this).data("plugin_"+pluginName+"Images");return plugin.uploadAdd=function(e,data){return self.upload(data.files)}})}},handleDrag:function(event){var className="medium-editor-dragover";event.preventDefault(),event.dataTransfer.dropEffect="copy","dragover"==event.type?(event.target.classList.add(className),this.base.selectElement(event.target)):"dragleave"==event.type&&event.target.classList.remove(className)},handleDrop:function(event,editor){var className="medium-editor-dragover";event.preventDefault(),event.stopPropagation(),event.target.classList.remove(className),$(editor).find(".medium-editor-dragover").removeClass("medium-editor-dragover"),this.upload(event.dataTransfer.files),event.target.classList.remove(className)},upload:function(files){if(files)return files=Array.prototype.slice.call(files,0),files.some(function(file){if(file.type.match("image")){var id="medium-img-"+ +new Date,fileReader=new FileReader;fileReader.readAsDataURL(file);var focused=this.base.getFocusedElement();if(focused&&!isContentEmpty(focused)){var selection=this.base.exportSelection();selection.start=selection.end,this.base.importSelection(selection)}return $(this.base.elements).data("plugin_mediumInsert").hideButtons(),this.base.pasteHTML('<img class="medium-image-loading" id="'+id+'">'),$("#"+id).wrap('<span class="image">'),fileReader.onload=function(){var img=this.base.options.ownerDocument.getElementById(id);if(img){img.removeAttribute("id"),img.removeAttribute("class"),img.src=fileReader.result;var $image=$(img).closest(".image").addClass("uploading"),$progress=$("<span>").addClass("progress").text("Uploading... 0%").appendTo($image),mediaConfig={mediaRoute:"media",folder:"editor",fileType:"IMAGE",type:"SUPPLIER",accountId:localStorage.getItem("accountId")};return uploadService.upload(file,mediaConfig).then(function(response,err){var url=response[0].publicUrl;return img.src=url,$(img).trigger("change"),url},function(err){$image.remove(),console.error(err),toastr.error("Failed to upload image")},function(progress){$progress.text("Uploading... "+progress+"%"),$(img).trigger("change")})["finally"](function(){$image.removeClass("uploading"),$progress.remove(),this.base.trigger("editableInput",null,this.base.elements[0])}.bind(this))}}.bind(this)}}.bind(this))}})}]),angular.module("users").factory("orderDataService",function($http,$location,constants,Authentication,$stateParams,$q,toastr,$rootScope,uploadService,$timeout,productEditorService){function getData(id){var defer=$q.defer();me.currentIndex=0,console.log(id);var orderUrl=API_URL+"/storedb/stores/products?supc=true&id="+id;return $http.get(orderUrl).then(function(response){me.allItems=response.data,me.currentItem=me.allItems[me.currentIndex],console.log("orderDataService::getData response %O",me.allItems),defer.resolve(me.allItems)}),defer.promise}function increaseIndex(){me.selected=[],me.currentIndex+1===me.allItems.length?me.currentIndex=0:me.currentIndex++,me.currentItem=me.allItems[me.currentIndex]}function decreaseIndex(){me.selected=[],me.currentIndex-1<0?me.currentIndex=me.allItems.length-1:me.currentIndex--,me.currentItem=me.allItems[me.currentIndex]}function storeSelected(selected){return me.selected=selected,me.selected}function matchProduct(){var prod=me.currentItem,selected=me.selected,defer=$q.defer(),skuUrl=API_URL+"/edit/sku",payload={duplicates:[],sku:prod.upc};prod.url&&(payload.publicUrl=prod.url);for(var i in selected)payload.duplicates.push(selected[i].productId);return $http.post(skuUrl,{payload:payload}).then(function(results){me.currentItem.productId=me.selected[0].productId,console.log("orderDataService[matchProduct] %O",results),defer.resolve(me.selected[0])},function(err){console.error("could not mark duplicate %O",err)}),defer.promise}function createNewProduct(prod){var defer=$q.defer(),skuUrl=API_URL+"/edit/products",payload={name:prod.name,description:prod.description,notes:"",productTypeId:prod.type,requestedBy:"sellr",feedback:"0",properties:[],mediaAssets:[],skus:[prod.upc]};return prod.url&&payload.mediaAssets.push({type:"RESEARCH_IMG",fileName:"",script:null,publicUrl:prod.url}),console.log(payload),$http.post(skuUrl,{payload:payload}).then(function(response){console.log("orderDataService[createNewProduct] %O",response),defer.resolve(response)},function(err){console.error("orderDataService[createNewProduct] %O",err),defer.reject(err)}),defer.promise}var me=this,API_URL=constants.BWS_API;return me.allItems=[],me.selected=[],me.getData=getData,me.createNewProduct=createNewProduct,me.matchProduct=matchProduct,me.storeSelected=storeSelected,me.increaseIndex=increaseIndex,me.decreaseIndex=decreaseIndex,$rootScope.$on("clearProductList",function(){me.selected=[]}),me}),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return owaspPasswordStrengthTest.config({allowPassphrases:!0,maxLength:128,minLength:5,minPhraseLength:20,minOptionalTestsToPass:1}),{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password greater than 6 characters.";return popoverMsg}}}]),angular.module("users").service("productEditorService",function($http,$location,constants,Authentication,$stateParams,$q,toastr,$rootScope,uploadService,$timeout,$filter){function compareToCachedProduct(prod){if(log("updatedProd",prod),log("cachedProd",cachedProduct),me.changes=[],prod.title&&prod.title!==cachedProduct.title&&me.changes.push("Changed title to "+prod.title),prod.status&&prod.status!==cachedProduct.status&&me.changes.push("Changed status to "+prod.status),prod.properties){for(var i=0;i<prod.properties.length;i++){var updated=prod.properties[i],cached=cachedProduct.properties[i];updated.value!==cached.value?cached.valueId?(updated.changed="update",me.changes.push("Updated "+updated.label+'. Changed "'+cached.value+'" to "'+updated.value+'"')):(updated.changed="new",me.changes.push("Added "+updated.label+" as "+updated.value)):updated.changed="false"}return log("changes added",prod),prod}return prod}function refreshProduct(product){me.getProductDetail(product).then(function(res){res.data.length>0?me.formatProductDetail(res.data[0]).then(function(formattedProduct){log("formattedProduct",formattedProduct),me.currentProduct=formattedProduct,cachedProduct=jQuery.extend(!0,{},formattedProduct),me.productStorage[product.productId]=formattedProduct}):toastr.error("Could not get product detail for "+product.name)})}function getProductEditors(){var url=constants.API_URL+"/users/editors";$http.get(url).then(function(res){console.log("gotProductEditors %O",res),me.productEditors=res.data},function(err){console.error("Error with getProductEditor: %O",err)})}var cachedProduct,me=this,debugLogs=!1,log=function(title,data){debugLogs&&(title+="%O",console.log(title,data))};return me.changes=[],localStorage.getItem("userId")&&(me.userId=localStorage.getItem("userId")),me.show={loading:!0},localStorage.getItem("edit-account")?me.currentAccount=localStorage.getItem("edit-account"):me.currentAccount="",me.init=function(){me.productTypes=[{name:"wine",productTypeId:1},{name:"beer",productTypeId:2},{name:"spirits",productTypeId:3}],me.productStatuses=[{name:"Available",value:"new"},{name:"In Progress",value:"inprogress"},{name:"Done",value:"done"},{name:"Approved",value:"approved"}],me.productStorage={},me.productStats={},me.allProducts=[],me.productList=[],me.myProducts=[],me.currentProduct={},me.currentType={},me.currentStatus={},me.newProduct={},getProductEditors(),me.show.loading=!1},me.getProductList=function(searchText,options){me.show.loading=!0;var defer=$q.defer();me.productList=[],me.allProducts=[];var url=constants.BWS_API+"/edit/search?";if(options.types)for(var i in options.types)url+="&type="+options.types[i].type;if(options.name&&(url+="&name="+options.name+"&des="+options.name),options.sku&&(url+="&sku="+options.sku),options.status&&(url+="&status="+JSON.stringify(options.status).replace(/"/g,"")),options.stores&&options.stores[0]){url+="&store="+options.stores[0].id;for(var k=1;k<options.stores.length;k++)url+=","+options.stores[k].id}return searchText&&(url+="&q="+searchText),url+="&v=sum",$http.get(url).then(function(response){me.productList=response.data,me.allProducts=response.data,me.show.loading=!1,defer.resolve(me.productList)},function(err){console.error("could not get product list %O",err),defer.reject(err),me.show.loading=!1}),defer.promise},me.sortAndFilterProductList=function(listOptions){me.allProducts=$filter("orderBy")(me.allProducts,listOptions.orderBy),me.productList=me.allProducts,listOptions.filterByUserId&&(me.productList=$filter("filter")(me.productList,{userId:listOptions.userId})),me.productList=$filter("limitTo")(me.productList,listOptions.searchLimit)},me.getMyProducts=function(options){function getMyProdSuccess(response){200===response.status&&(me.productList=response.data)}function getMyProdError(error){console.error("getMyProdError %O",error)}options|={},options.type&&options.status&&options.userId||(options={type:me.currentType.productTypeId,status:me.currentStatus.value,userId:me.userId});var url=constants.BWS_API+"/edit?status="+options.status+"&type="+options.type+"&user="+options.userId;$http.get(url).then(getMyProdSuccess,getMyProdError)},me.getProductDetail=function(product){return $http.get(constants.BWS_API+"/edit/products/"+product.productId)},me.getProduct=function(product){var defer=$q.defer();return product.productId||defer.reject({message:"no product Id"}),me.productStorage[product.productId]?(cachedProduct=jQuery.extend(!0,{},me.productStorage[product.productId]),defer.resolve(me.productStorage[product.productId])):me.getProductDetail(product).then(function(res){if(res.data.length>0)me.formatProductDetail(res.data[0]).then(function(formattedProduct){log("formattedProduct",formattedProduct),me.productStorage[product.productId]=formattedProduct,cachedProduct=jQuery.extend(!0,{},formattedProduct),defer.resolve(formattedProduct)});else{var error={message:"Could not get product detail for "+product.name};toastr.error(error.message),defer.reject(error)}},function(error){toastr.error("Could not get product detail for "+product.name),defer.reject(error)}),defer.promise},me.setCurrentProduct=function(product){me.currentProduct={},cachedProduct={},me.changes=[],me.getProduct(product).then(function(formattedProduct){formattedProduct.userId=product.userId,me.currentProduct=formattedProduct})},me.claim=function(options){!options.productId||!options.userId,"done"!==options.status&&(options.status="inprogress");var payload={payload:options};log("claiming",payload);var url=constants.BWS_API+"/edit/claim";return $http.post(url,payload)},me.clearProductList=function(){me.productList=[],$rootScope.$broadcast("clearProductList")},me.removeClaim=function(options){!options.productId||!options.userId,options.status="new";var payload={payload:options};log("removing claim",payload);var url=constants.BWS_API+"/edit/claim";$http.put(url,payload).then(function(res){log("claim response",res),me.currentProduct={}},function(err){log("deleteClaim error",err),toastr.error("There was an error claiming this product.")})},me.save=function(product){function onSaveSuccess(response){window.scrollTo(0,0),me.productStorage[product.productId]=product,cachedProduct=jQuery.extend(!0,{},me.productStorage[product.productId]),toastr.success("Product Updated!"),defer.resolve()}function onSaveError(error){console.error("onSaveError %O",error),toastr.error("There was a problem updating product "+product.productId),defer.reject()}var defer=$q.defer();if(product.productId){if(product.userId=me.userId,product.userId||localStorage.getItem("userId")&&(me.userId=localStorage.getItem("userId"),product.userId=me.userId),!product.userId)return void toastr.error("There was a problem saving this product. Please sign out and sign in again.");var payload={payload:compareToCachedProduct(product)},url=constants.BWS_API+"/edit/products/"+product.productId;return $http.put(url,payload).then(onSaveSuccess,onSaveError),defer.promise}},me.bulkUpdateStatus=function(products,status){products.forEach(function(product){cachedProduct=jQuery.extend(!0,{},product),product.properties=[],product.status=status,me.save(product)})},me.getStats=function(){function onGetStatSuccess(response){me.productStats=response.data,me.currentAccount=account}function onGetStatError(error){console.error("onGetStatError %O",error),me.productStats={}}var account=me.currentAccount,url=constants.BWS_API+"/edit/count";account&&(url+="?requested_by="+account),$http.get(url).then(onGetStatSuccess,onGetStatError)},me.formatProductDetail=function(product){var defer=$q.defer();product.name=product.title||product.displayName||product.name,product.notes=product.notes||product.text;try{product.feedback=JSON.parse(product.feedback)}catch(e){product.feedback=[]}return product.properties.forEach(function(prop){switch(prop.label){case"Requested By":product.requestedBy=prop.value;break;case"Country":prop.type="countryselect";break;case"Script":prop.type="textarea";break;case"Description":prop.type="textarea";break;case"foodpairing":prop.type="textarea";break;default:prop.type="input"}}),product.mediaAssets.forEach(function(m){switch(m.type){case"AUDIO":product.description=product.description||m.script,m.publicUrl&&m.publicUrl.length>1&&(product.audio=document.createElement("AUDIO"),product.audio.src=m.publicUrl,product.audio.mediaAssetId=m.mediaAssetId,product.audio.ontimeupdate=function(){product.audio.progress=Number(product.audio.currentTime/product.audio.duration)});break;case"IMAGE":product.hasImages=!0,product.images=product.images||[],product.images.mediaAssetId=m.mediaAssetId,product.images.push(m);break;case"RESEARCH_IMG":product.hasRearchImg=!0,product.researchImages=product.researchImages||[],product.researchImages.mediaAssetId=m.mediaAssetId,product.researchImages.push(m)}}),product.description&&!product.description.match(/[<>]/)&&(product.description="<p>"+product.description+"</p>"),defer.resolve(product),defer.promise},me.uploadMedia=function(files){var mediaConfig={mediaRoute:"media",folder:"products",type:"PRODUCT",fileType:"IMAGE",accountId:localStorage.getItem("accountId"),productId:me.currentProduct.productId};uploadService.upload(files[0],mediaConfig).then(function(response,err){response?(toastr.success("Product Image Updated!"),me.save(me.currentProduct).then(function(err,response){err&&toastr.error("There was a problem uploading this image."),refreshProduct(me.currentProduct)})):toastr.error("Product Image Failed To Update!")})},me.uploadAudio=function(files){var mediaConfig={mediaRoute:"media",folder:"products",type:"PRODUCT",fileType:"AUDIO",accountId:localStorage.getItem("accountId"),productId:me.currentProduct.productId};uploadService.upload(files[0],mediaConfig).then(function(response,err){response?(toastr.success("Product Audio Updated!"),me.save(me.currentProduct).then(function(err,response){err&&toastr.error("There was a problem uploading audio"),refreshProduct(me.currentProduct)})):toastr.error("Product Audio Failed To Update!")})},me.removeAudio=function(currentAudio){var url=constants.API_URL+"/media/"+currentAudio;$http["delete"](url).then(function(){toastr.success("audio removed","Success"),me.save(me.currentProduct).then(function(err,response){err&&toastr.error("There was a problem removing audio"),refreshProduct(me.currentProduct)})})},me.removeImage=function(currentImage){var url=constants.API_URL+"/media/"+currentImage.mediaAssetId;$http["delete"](url).then(function(){toastr.success("image removed","Success"),me.save(me.currentProduct).then(function(err,response){err&&toastr.error("There was a problem removing image"),refreshProduct(me.currentProduct)})})},me.updateFeedback=function(feedback){var url=constants.BWS_API+"/edit/feedback",payload={payload:{productId:me.currentProduct.productId,feedback:feedback}};$http.post(url,payload).then(function(res){console.log(res)},function(err){console.error(err)})},me.searchSkuResults=function(options){var defer=$q.defer(),sku=options.upc,type=options.type;console.log("searching sku %s",sku),me.show.loading=!0;var skuUrl=constants.BWS_API+"/edit/search?l=50&type="+type+"&v=sum&sku="+sku;return $http.get(skuUrl).then(function(skuResult){if(me.remainingQueries=skuResult.data.length,me.remainingQueries>0){me.productList=options.productList||[],console.log("I have to query %s names",me.remainingQueries);for(var i in skuResult.data)if(me.productList=me.productList.concat(skuResult.data[i]),"na"===skuResult.data[i].name.toLowerCase())me.remainingQueries--,console.log("skipping na results"),me.remainingQueries<=0&&(me.show.loading=!1,defer.resolve(me.productList));else{var url=constants.BWS_API+"/edit/search?l=50&type="+type+"&v=sum&name="+skuResult.data[i].name;$http.get(url).then(function(results2){me.productList=me.productList.concat(results2.data),me.productList=_.uniq(me.productList,function(p){return p.productId}),me.remainingQueries--,console.log("1 down, %s to go",me.remainingQueries),me.remainingQueries<=0&&(me.show.loading=!1,defer.resolve(me.productList))})}}else me.productList=options.productList,me.show.loading=!1,defer.resolve(me.productList)},function(err){console.error("Could not search sku results %O",err),defer.reject(err)}),defer.promise},me.createNewProduct=function(product){me.newProduct=product},me.checkForNewProducts=function(){var url=constants.BWS_API+"/edit/search?status=new&v=sum";$http.get(url).then(function(res){me.show.newProducts=res.data.length>0,me.newProducts=res.data})},me.viewNewProducts=function(){me.productList=me.newProducts},me.checkForNewProducts(),me.init(),me}),angular.module("users").service("mergeService",function($q,productEditorService,constants,$http,$state,toastr,$rootScope){function merge(products){var defer=$q.defer();return me.products=[],me.newProduct={},me.finalProduct={},me.prodsToDelete=[],buildProductList(products).then(function(detailedProducts){buildNewProduct(detailedProducts),mergeProductProperties(),mergeProductMedia(),buildFinalProduct(),defer.resolve(me.newProduct)}),defer.promise}function buildProductList(products){var defer=$q.defer(),remaining=products.length;return products.forEach(function(p){productEditorService.getProduct(p).then(function(productWithDetail){me.products.push(productWithDetail),me.prodsToDelete.push(productWithDetail.productId),remaining--,0===remaining&&(console.log("mergeService::buildProductList %O",me.products),$rootScope.$broadcast("clearProductList"),defer.resolve(me.products))})},onError),defer.promise}function buildNewProduct(products){me.newProduct={name:[],description:[],feedback:[],notes:[],productTypeId:[],requestedBy:[],skus:[]};for(var prop in me.newProduct)products.forEach(function(product){product[prop]&&me.newProduct[prop].indexOf(product[prop])<0&&me.newProduct[prop].push(product[prop])});me.newProduct.skus=_.flatten(me.newProduct.skus),console.log("mergeService::buildNewProduct")}function mergeProductProperties(){var properties=[];me.newProduct.properties=[],me.products.forEach(function(product){product.properties.forEach(function(prop){if(prop.visibility){var i=_.findIndex(properties,function(p){return p.propId===prop.propId});if(i<0&&(properties.push({label:prop.label,propId:prop.propId,type:prop.type,visibility:prop.visibility,value:[]}),i=properties.length-1),prop.value.length>0)switch(prop.value.toLowerCase()){case"na":break;case"not-applicable":break;case"not applicable":break;case"not-vintage":break;case"n/a":break;default:properties[i].value.push(prop.value)}properties[i].value=_.uniq(properties[i].value)}})}),me.newProduct.properties=properties,console.log("mergeService::mergeProductProperties : %O",me.newProduct)}function buildFinalProduct(){for(var prop in me.newProduct)"properties"!==prop&&"skus"!==prop&&(me.finalProduct[prop]=me.newProduct[prop][0]);me.finalProduct.skus=me.newProduct.skus,me.finalProduct.properties=[],me.finalProduct.mediaAssets=[];for(var i=0;i<me.newProduct.properties.length;i++)me.finalProduct.properties.push({label:me.newProduct.properties[i].label,propId:me.newProduct.properties[i].propId,type:me.newProduct.properties[i].type,value:me.newProduct.properties[i].value[0]});console.log("mergeService::buildFinalProduct")}function mergeProductMedia(){me.newProduct.mediaAssets=[],me.newProduct.images=[],me.newProduct.audio=[],me.products.forEach(function(product){product.hasImages&&product.images.forEach(function(img){img.publicUrl&&me.newProduct.images.push(img)}),product.audio&&me.newProduct.audio.push(product.audio)}),console.log("mergeService::mergeProductMedia %O",me.newProduct)}function save(){for(var i=0;i<me.finalProduct.properties.length;i++)void 0===me.finalProduct.properties[i].value&&me.finalProduct.properties.splice(i,1);me.finalProduct.notes="Merged with "+me.prodsToDelete.toString(),me.newProduct.audio.length>0&&me.finalProduct.mediaAssets.push(me.newProduct.audio[0].mediaAssetId),me.newProduct.images.forEach(function(img){me.finalProduct.mediaAssets.push(img.mediaAssetId)}),me.finalProduct.status="done";var url=constants.BWS_API+"/products/merge",payload={payload:{prodsToDelete:me.prodsToDelete,product:me.finalProduct}};$http.post(url,payload).then(function(res){res.data.productId?(toastr.success("Product Merged!"),$state.includes("editor.match.merge")?$state.go("editor.match.view",{productId:res.data.productId},{reload:!0}):$state.go("editor.view",{productId:res.data.productId},{reload:!0})):(console.error("No productId returned from server %O",res),toastr.error("There was a problem with merging"))},function(err){console.error(err)})}var me=this;return me.merge=merge,me.save=save,me.products=[],me.newProduct={},me.finalProduct={},me.prodsToDelete=[],me}),angular.module("users.supplier").filter("trustUrl",["$sce",function($sce){return function(recordingUrl){return $sce.trustAsResourceUrl(recordingUrl)}}]),angular.module("users").service("uploadService",function($http,constants,toastr,Authentication,$q){function bucketUpload(creds,params){var defer=$q.defer();AWS.config.update({accessKeyId:creds.access_key,secretAccessKey:creds.secret_key}),AWS.config.region="us-east-1";var bucket=new AWS.S3({params:{Bucket:creds.bucket}}),request=bucket.putObject(params,function(err,data){me.loading=!0,err?(alert(err.message),toastr.error("There was a problem uploading your ad."),defer.reject(!1)):defer.resolve(data)});return request.on("httpUploadProgress",function(progress){defer.notify(Math.round(progress.loaded/progress.total*100))}),defer.promise}var me=this;return me.init=function(){me.selectAccountId=localStorage.getItem("accountId"),me.accounts=[],me.editAccount={},me.currentAccount={},me.files=[],me.determinate={value:0}},me.init(),me.upload=function(file,mediaConfig){var messages=[],defer=$q.defer(),config=mediaConfig;if(file){var filename=file.name.replace(/ /g,"_");if(!file.$error){var newObject;newObject="media"==config.mediaRoute?"PRODUCT"==config.type?{payload:{fileName:filename,userName:Authentication.user.username,type:config.type,fileType:config.fileType,accountId:config.accountId,productId:config.productId}}:{payload:{type:config.type,fileType:config.type,fileName:filename,userName:Authentication.user.username,accountId:config.accountId}}:{payload:{fileName:filename,userName:Authentication.user.username,accountId:config.accountId}},$http.post(constants.API_URL+"/"+config.mediaRoute,newObject).then(function(response,err){if(err&&(console.log(err),toastr.error("There was a problem uploading your ad.")),response){var mediaAssetId=response.data.assetId,creds={bucket:"cdn.expertoncue.com/"+config.folder,access_key:"AKIAICAP7UIWM4XZWVBA",secret_key:"Q7pMh9RwRExGFKoI+4oUkM0Z/WoKJfoMMAuLTH/t"},params={Key:response.data.assetId+"-"+filename,ContentType:file.type,Body:file,ServerSideEncryption:"AES256",Metadata:{fileKey:JSON.stringify(response.data.assetId)}};bucketUpload(creds,params).then(function(err,res){self.determinateValue=0;var updateMedia={payload:{mediaAssetId:mediaAssetId,publicUrl:"https://s3.amazonaws.com/"+creds.bucket+"/"+response.data.assetId+"-"+filename}};$http.put(constants.API_URL+"/media",updateMedia).then(function(res2,err){if(err)console.log(err);else{var message={message:"New Ad Uploaded Success!",publicUrl:updateMedia.payload.publicUrl,fileName:filename,mediaAssetId:updateMedia.payload.mediaAssetId};messages.push(message),defer.resolve(messages)}})},null,defer.notify)}})}}return defer.promise},me}),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$http","constants","$q",function($http,constants,$q){var me=this;return me.get=function(userId){var defer=$q.defer();return $http.get(constants.API_URL+"/users/"+userId.userId).then(function(response,err){$http.get(constants.API_URL+"/users/roles/"+userId.userId).then(function(res,err){console.log(res),console.log(response),response.data[0].roles=[],res.data.forEach(function(role){response.data[0].roles.push(role.roleId),response.data[0].accountId=role.accountId}),defer.resolve(response.data[0])})}),defer.promise},me.query=function(){var defer=$q.defer();return $http.get(constants.API_URL+"/users").then(function(response,err){err&&defer.reject(err),defer.resolve(response.data)}),defer.promise},me.put=function(userId){return $http.put(constants.API_URL+"/users"+userId)},me}]);